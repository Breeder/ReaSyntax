<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>eel</string>
	</array>
	<key>name</key>
	<string>EEL (REAPER)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>//</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Comment: single line</string>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.EEL</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.EEL</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Comment: block</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.EEL</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Double quote strings</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.EEL</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.EEL</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single quote strings</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.EEL</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.EEL</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Description line</string>
			<key>match</key>
			<string>^(import)(\s.*)</string>
			<key>name</key>
			<string>entity.other.attribute-name.EEL</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(function)\s+((?=[A-Za-z_][A-Za-z0-9_]*\s*\(?))?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.function.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Functions: user definition</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.parentheses.function.definition.EEL</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.EEL</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_parameters</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.python</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.EEL</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(global)|(instance)|(local)\s*(?=s*\(?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.local.EEL</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.global.EEL</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.instance.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Functions: modifiers</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.parentheses.function.definition.EEL</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.EEL</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_parameters</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Variable: language</string>
			<key>match</key>
			<string>this</string>
			<key>name</key>
			<string>variable.language.this.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Control: looping</string>
			<key>match</key>
			<string>(loop|while)</string>
			<key>name</key>
			<string>keyword.control.loop.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: basic math</string>
			<key>match</key>
			<string>(abs|acos|asin|atan|atan2|ceil|cos|exp|floor|invsqrt|log|log10|max|min|rand|sign|sin|spl|sqr|sqrt|tan)(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.math.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: fft</string>
			<key>match</key>
			<string>(convolve_c|fft|fft_ipermute|fft_permute|ifft)(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.fft.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: memory</string>
			<key>match</key>
			<string>(freembuf|memcpy|memset)(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.memory.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: stack</string>
			<key>match</key>
			<string>((stack_)(exch|peek|pop|push))(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.stack.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: file</string>
			<key>match</key>
			<string>(f(close|eof|flush|getc|gets|open|printf|read|seek|tell|write))(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.file.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: graphics</string>
			<key>match</key>
			<string>(gfx_(arc|blit|blitext|blurto|circle|deltablit|drawchar|drawnumber|drawstr|getchar|getfont|getimgdim|getpixel|gradrect|line|lineto|loadimg|measurestr|muladdrect|printf|quit|rect|rectto|roundrect|setfont|setimgdim|setpixel|transformblit|update))(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.graphics.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: strings</string>
			<key>match</key>
			<string>(sprintf|printf|match|matchi|(str(_delsub|_insert|_getchar|_setchar|_setlen|cat|cmp|cpy|cpy_from|cpy_substr|icmp|len|ncat|ncmp|ncpy|nicmp)))(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.strings.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: tcp</string>
			<key>match</key>
			<string>(tcp_(close|connect|listen|listen_end|recv|send|set_block))(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.tcp.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: time</string>
			<key>match</key>
			<string>(time|time_precise)(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.time.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: misc</string>
			<key>match</key>
			<string>(atexit|eval|defer|sleep)(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.misc.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Functions: other</string>
			<key>match</key>
			<string>[a-zA-Z_][a-zA-Z_0-9]*\b(?=(\s|(
?|
))*\()</string>
			<key>name</key>
			<string>support.function.other.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Variables: graphics</string>
			<key>match</key>
			<string>gfx_(a|b|clear|dest|g|h|mode|r|texth|w|x|y)\b</string>
			<key>name</key>
			<string>support.variable.graphics.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Variables: mouse</string>
			<key>match</key>
			<string>mouse_(cap|hwheel|wheel|x|y)\b</string>
			<key>name</key>
			<string>support.variable.mouse.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators: logical</string>
			<key>match</key>
			<string>===|!==|==|!=|&gt;=|&lt;=|&amp;&amp;|!|(?&lt;!&gt;)&gt;(?!&gt;)|(?&lt;!&lt;)&lt;(?!&lt;)|\|\|</string>
			<key>name</key>
			<string>keyword.operator.logical.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators: bitwise</string>
			<key>match</key>
			<string>&amp;=|~=|\|=|&lt;&lt;|&gt;&gt;|&amp;|~|\|</string>
			<key>name</key>
			<string>keyword.operator.bitwise.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators: math</string>
			<key>match</key>
			<string>\*=|\/=|%=|\^=|\+=|\-=|\*|\/|%|\^|\+|\-|=</string>
			<key>name</key>
			<string>keyword.operator.math.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators: tertiary</string>
			<key>match</key>
			<string>\?|:</string>
			<key>name</key>
			<string>keyword.operator.tertiary.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators: array brackets</string>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>keyword.operator.array.EEL</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.parentheses.EEL</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.parentheses.EEL</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.braces.EEL</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.braces.EEL</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.semicolon.EEL</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.comma.EEL</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.dot.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Miscellaneous punctuation marks</string>
			<key>match</key>
			<string>(\()|(\))|(\{)|(\})|(;)|(,)|(\.)</string>
			<key>name</key>
			<string>punctuation.mark.EEL</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.decimalmark.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Hex and decimal numbers, ASCII values, bit masks, PI</string>
			<key>match</key>
			<string>((\$|0)(x|X)[0-9a-fA-F]*)|([0-9]+(\.)?[0-9]*)|(\$'.')|(\$~\d)|(\$pi)</string>
			<key>name</key>
			<string>constant.numeric.EEL</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.string.hash.EEL</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>User variables: named/temporary string</string>
			<key>match</key>
			<string>(#)([a-zA-Z_][a-zA-Z_0-9]*\b)?</string>
			<key>name</key>
			<string>variable.parameter.string.EEL</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>User variables</string>
			<key>match</key>
			<string>[a-zA-Z_][a-zA-Z_0-9]*\b</string>
			<key>name</key>
			<string>variable.other.EEL</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>function_parameters</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.mark.parentheses.function.definition.EEL</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function.parameters.EEL</string>
			<key>end</key>
			<string>(?=\)\s*)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.EEL</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.namespace.EEL</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.mark.comma.function.parameter.EEL</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z_][a-zA-Z_0-9]*)(\*)?\s*((,)?|(?=[\n\)]))</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8})</string>
					<key>name</key>
					<string>constant.character.escape.EEL</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.EEL</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
    						(\d+\$)?                             # field (argument #)
    						[#0\- +']*                           # flags
    						[,;:_]?                              # separator character (AltiVec)
    						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
    						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
    						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
    						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
    					</string>
					<key>name</key>
					<string>constant.other.placeholder.EEL</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.EEL</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.EEL</string>
	<key>uuid</key>
	<string>2efcdf21-8674-4191-a64f-6a9c26cfdc98</string>
	<key>word_separators</key>
	<string>./\()"'-:,.;&lt;&gt;~!@#%^&amp;*|+=[]{}`~?</string>
</dict>
</plist>

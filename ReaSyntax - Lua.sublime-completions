{
	"scope": "source.lua",
	"completions":
	[
		{"trigger": "reaper.AddMediaItemToTrack", "contents": "reaper.AddMediaItemToTrack(${1:tr})"},
		{"trigger": "reaper.AddProjectMarker", "contents": "reaper.AddProjectMarker(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx})"},
		{"trigger": "reaper.AddProjectMarker2", "contents": "reaper.AddProjectMarker2(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx}, ${7:color})"},
		{"trigger": "reaper.AddRemoveReaScript", "contents": "reaper.AddRemoveReaScript(${1:add}, ${2:sectionID}, ${3:scriptfn}, ${4:commit})"},
		{"trigger": "reaper.AddTakeToMediaItem", "contents": "reaper.AddTakeToMediaItem(${1:item})"},
		{"trigger": "reaper.AddTempoTimeSigMarker", "contents": "reaper.AddTempoTimeSigMarker(${1:proj}, ${2:timepos}, ${3:bpm}, ${4:timesig_num}, ${5:timesig_denom}, ${6:lineartempochange})"},
		{"trigger": "reaper.adjustZoom", "contents": "reaper.adjustZoom(${1:amt}, ${2:forceset}, ${3:doupd}, ${4:centermode})"},
		{"trigger": "reaper.AnyTrackSolo", "contents": "reaper.AnyTrackSolo(${1:proj})"},
		{"trigger": "reaper.APIExists", "contents": "reaper.APIExists(${1:function_name})"},
		{"trigger": "reaper.APITest", "contents": "reaper.APITest()"},
		{"trigger": "reaper.ApplyNudge", "contents": "reaper.ApplyNudge(${1:project}, ${2:nudgeflag}, ${3:nudgewhat}, ${4:nudgeunits}, ${5:value}, ${6:reverse}, ${7:copies})"},
		{"trigger": "gfx.arc", "contents": "gfx.arc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2}, ${6:antialias})"},
		{"trigger": "reaper.ArmCommand", "contents": "reaper.ArmCommand(${1:cmd}, ${2:sectionname})"},
		{"trigger": "reaper.atexit", "contents": "reaper.atexit(${1:function})"},
		{"trigger": "reaper.Audio_Init", "contents": "reaper.Audio_Init()"},
		{"trigger": "reaper.Audio_IsPreBuffer", "contents": "reaper.Audio_IsPreBuffer()"},
		{"trigger": "reaper.Audio_IsRunning", "contents": "reaper.Audio_IsRunning()"},
		{"trigger": "reaper.Audio_Quit", "contents": "reaper.Audio_Quit()"},
		{"trigger": "reaper.AudioAccessorStateChanged", "contents": "reaper.AudioAccessorStateChanged(${1:accessor})"},
		{"trigger": "reaper.AudioAccessorUpdate", "contents": "reaper.AudioAccessorUpdate(${1:accessor})"},
		{"trigger": "reaper.AudioAccessorValidateState", "contents": "reaper.AudioAccessorValidateState(${1:accessor})"},
		{"trigger": "gfx.blit", "contents": "gfx.blit(${1:source}, ${2:scale}, ${3:rotation}, ${4:srcx}, ${5:srcy}, ${6:srcw}, ${7:srch}, ${8:destx}, ${9:desty}, ${10:destw}, ${11:desth}, ${12:rotxoffs}, ${13:rotyoffs})"},
		{"trigger": "gfx.blit", "contents": "gfx.blit(${1:source}, ${2:scale}, ${3:rotation})"},
		{"trigger": "gfx.blitext", "contents": "gfx.blitext(${1:source}, ${2:coordinatelist}, ${3:rotation})"},
		{"trigger": "gfx.blurto", "contents": "gfx.blurto(${1:x}, ${2:y})"},
		{"trigger": "reaper.BR_EnvAlloc", "contents": "reaper.BR_EnvAlloc(${1:envelope}, ${2:takeEnvelopesUseProjectTime})"},
		{"trigger": "reaper.BR_EnvCountPoints", "contents": "reaper.BR_EnvCountPoints(${1:envelope})"},
		{"trigger": "reaper.BR_EnvDeletePoint", "contents": "reaper.BR_EnvDeletePoint(${1:envelope}, ${2:id})"},
		{"trigger": "reaper.BR_EnvFind", "contents": "reaper.BR_EnvFind(${1:envelope}, ${2:position}, ${3:delta})"},
		{"trigger": "reaper.BR_EnvFindNext", "contents": "reaper.BR_EnvFindNext(${1:envelope}, ${2:position})"},
		{"trigger": "reaper.BR_EnvFindPrevious", "contents": "reaper.BR_EnvFindPrevious(${1:envelope}, ${2:position})"},
		{"trigger": "reaper.BR_EnvFree", "contents": "reaper.BR_EnvFree(${1:envelope}, ${2:commit})"},
		{"trigger": "reaper.BR_EnvGetParentTake", "contents": "reaper.BR_EnvGetParentTake(${1:envelope})"},
		{"trigger": "reaper.BR_EnvGetParentTrack", "contents": "reaper.BR_EnvGetParentTrack(${1:envelope})"},
		{"trigger": "reaper.BR_EnvGetPoint", "contents": "reaper.BR_EnvGetPoint(${1:envelope}, ${2:id})"},
		{"trigger": "reaper.BR_EnvGetProperties", "contents": "reaper.BR_EnvGetProperties(${1:envelope})"},
		{"trigger": "reaper.BR_EnvSetPoint", "contents": "reaper.BR_EnvSetPoint(${1:envelope}, ${2:id}, ${3:position}, ${4:value}, ${5:shape}, ${6:selected}, ${7:bezier})"},
		{"trigger": "reaper.BR_EnvSetProperties", "contents": "reaper.BR_EnvSetProperties(${1:envelope}, ${2:active}, ${3:visible}, ${4:armed}, ${5:inLane}, ${6:laneHeight}, ${7:defaultShape}, ${8:faderScaling}, ${9:automationItemsOptionsIn})"},
		{"trigger": "reaper.BR_EnvSortPoints", "contents": "reaper.BR_EnvSortPoints(${1:envelope})"},
		{"trigger": "reaper.BR_EnvValueAtPos", "contents": "reaper.BR_EnvValueAtPos(${1:envelope}, ${2:position})"},
		{"trigger": "reaper.BR_GetArrangeView", "contents": "reaper.BR_GetArrangeView(${1:proj})"},
		{"trigger": "reaper.BR_GetClosestGridDivision", "contents": "reaper.BR_GetClosestGridDivision(${1:position})"},
		{"trigger": "reaper.BR_GetCurrentTheme", "contents": "reaper.BR_GetCurrentTheme()"},
		{"trigger": "reaper.BR_GetMediaItemByGUID", "contents": "reaper.BR_GetMediaItemByGUID(${1:proj}, ${2:guidStringIn})"},
		{"trigger": "reaper.BR_GetMediaItemGUID", "contents": "reaper.BR_GetMediaItemGUID(${1:item})"},
		{"trigger": "reaper.BR_GetMediaItemImageResource", "contents": "reaper.BR_GetMediaItemImageResource(${1:item})"},
		{"trigger": "reaper.BR_GetMediaItemTakeGUID", "contents": "reaper.BR_GetMediaItemTakeGUID(${1:take})"},
		{"trigger": "reaper.BR_GetMediaSourceProperties", "contents": "reaper.BR_GetMediaSourceProperties(${1:take})"},
		{"trigger": "reaper.BR_GetMediaTrackByGUID", "contents": "reaper.BR_GetMediaTrackByGUID(${1:proj}, ${2:guidStringIn})"},
		{"trigger": "reaper.BR_GetMediaTrackFreezeCount", "contents": "reaper.BR_GetMediaTrackFreezeCount(${1:track})"},
		{"trigger": "reaper.BR_GetMediaTrackGUID", "contents": "reaper.BR_GetMediaTrackGUID(${1:track})"},
		{"trigger": "reaper.BR_GetMediaTrackLayouts", "contents": "reaper.BR_GetMediaTrackLayouts(${1:track})"},
		{"trigger": "reaper.BR_GetMediaTrackSendInfo_Envelope", "contents": "reaper.BR_GetMediaTrackSendInfo_Envelope(${1:track}, ${2:category}, ${3:sendidx}, ${4:envelopeType})"},
		{"trigger": "reaper.BR_GetMediaTrackSendInfo_Track", "contents": "reaper.BR_GetMediaTrackSendInfo_Track(${1:track}, ${2:category}, ${3:sendidx}, ${4:trackType})"},
		{"trigger": "reaper.BR_GetMidiSourceLenPPQ", "contents": "reaper.BR_GetMidiSourceLenPPQ(${1:take})"},
		{"trigger": "reaper.BR_GetMidiTakePoolGUID", "contents": "reaper.BR_GetMidiTakePoolGUID(${1:take})"},
		{"trigger": "reaper.BR_GetMidiTakeTempoInfo", "contents": "reaper.BR_GetMidiTakeTempoInfo(${1:take})"},
		{"trigger": "reaper.BR_GetMouseCursorContext", "contents": "reaper.BR_GetMouseCursorContext()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_Envelope", "contents": "reaper.BR_GetMouseCursorContext_Envelope()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_Item", "contents": "reaper.BR_GetMouseCursorContext_Item()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_MIDI", "contents": "reaper.BR_GetMouseCursorContext_MIDI()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_Position", "contents": "reaper.BR_GetMouseCursorContext_Position()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_StretchMarker", "contents": "reaper.BR_GetMouseCursorContext_StretchMarker()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_Take", "contents": "reaper.BR_GetMouseCursorContext_Take()"},
		{"trigger": "reaper.BR_GetMouseCursorContext_Track", "contents": "reaper.BR_GetMouseCursorContext_Track()"},
		{"trigger": "reaper.BR_GetNextGridDivision", "contents": "reaper.BR_GetNextGridDivision(${1:position})"},
		{"trigger": "reaper.BR_GetPrevGridDivision", "contents": "reaper.BR_GetPrevGridDivision(${1:position})"},
		{"trigger": "reaper.BR_GetSetTrackSendInfo", "contents": "reaper.BR_GetSetTrackSendInfo(${1:track}, ${2:category}, ${3:sendidx}, ${4:parmname}, ${5:setNewValue}, ${6:newValue})"},
		{"trigger": "reaper.BR_GetTakeFXCount", "contents": "reaper.BR_GetTakeFXCount(${1:take})"},
		{"trigger": "reaper.BR_IsMidiOpenInInlineEditor", "contents": "reaper.BR_IsMidiOpenInInlineEditor(${1:take})"},
		{"trigger": "reaper.BR_IsTakeMidi", "contents": "reaper.BR_IsTakeMidi(${1:take})"},
		{"trigger": "reaper.BR_ItemAtMouseCursor", "contents": "reaper.BR_ItemAtMouseCursor()"},
		{"trigger": "reaper.BR_MIDI_CCLaneRemove", "contents": "reaper.BR_MIDI_CCLaneRemove(${1:midiEditor}, ${2:laneId})"},
		{"trigger": "reaper.BR_MIDI_CCLaneReplace", "contents": "reaper.BR_MIDI_CCLaneReplace(${1:midiEditor}, ${2:laneId}, ${3:newCC})"},
		{"trigger": "reaper.BR_PositionAtMouseCursor", "contents": "reaper.BR_PositionAtMouseCursor(${1:checkRuler})"},
		{"trigger": "reaper.BR_SetArrangeView", "contents": "reaper.BR_SetArrangeView(${1:proj}, ${2:startTime}, ${3:endTime})"},
		{"trigger": "reaper.BR_SetItemEdges", "contents": "reaper.BR_SetItemEdges(${1:item}, ${2:startTime}, ${3:endTime})"},
		{"trigger": "reaper.BR_SetMediaItemImageResource", "contents": "reaper.BR_SetMediaItemImageResource(${1:item}, ${2:imageIn}, ${3:imageFlags})"},
		{"trigger": "reaper.BR_SetMediaSourceProperties", "contents": "reaper.BR_SetMediaSourceProperties(${1:take}, ${2:section}, ${3:start}, ${4:length}, ${5:fade}, ${6:reverse})"},
		{"trigger": "reaper.BR_SetMediaTrackLayouts", "contents": "reaper.BR_SetMediaTrackLayouts(${1:track}, ${2:mcpLayoutNameIn}, ${3:tcpLayoutNameIn})"},
		{"trigger": "reaper.BR_SetMidiTakeTempoInfo", "contents": "reaper.BR_SetMidiTakeTempoInfo(${1:take}, ${2:ignoreProjTempo}, ${3:bpm}, ${4:num}, ${5:den})"},
		{"trigger": "reaper.BR_SetTakeSourceFromFile", "contents": "reaper.BR_SetTakeSourceFromFile(${1:take}, ${2:filenameIn}, ${3:inProjectData})"},
		{"trigger": "reaper.BR_SetTakeSourceFromFile2", "contents": "reaper.BR_SetTakeSourceFromFile2(${1:take}, ${2:filenameIn}, ${3:inProjectData}, ${4:keepSourceProperties})"},
		{"trigger": "reaper.BR_TakeAtMouseCursor", "contents": "reaper.BR_TakeAtMouseCursor()"},
		{"trigger": "reaper.BR_TrackAtMouseCursor", "contents": "reaper.BR_TrackAtMouseCursor()"},
		{"trigger": "reaper.BR_TrackFX_GetFXModuleName", "contents": "reaper.BR_TrackFX_GetFXModuleName(${1:track}, ${2:fx})"},
		{"trigger": "reaper.BR_Win32_CB_FindString", "contents": "reaper.BR_Win32_CB_FindString(${1:comboBoxHwnd}, ${2:startId}, ${3:string})"},
		{"trigger": "reaper.BR_Win32_CB_FindStringExact", "contents": "reaper.BR_Win32_CB_FindStringExact(${1:comboBoxHwnd}, ${2:startId}, ${3:string})"},
		{"trigger": "reaper.BR_Win32_ClientToScreen", "contents": "reaper.BR_Win32_ClientToScreen(${1:hwnd}, ${2:xIn}, ${3:yIn})"},
		{"trigger": "reaper.BR_Win32_FindWindowEx", "contents": "reaper.BR_Win32_FindWindowEx(${1:hwndParent}, ${2:hwndChildAfter}, ${3:className}, ${4:windowName}, ${5:searchClass}, ${6:searchName})"},
		{"trigger": "reaper.BR_Win32_GET_X_LPARAM", "contents": "reaper.BR_Win32_GET_X_LPARAM(${1:lParam})"},
		{"trigger": "reaper.BR_Win32_GET_Y_LPARAM", "contents": "reaper.BR_Win32_GET_Y_LPARAM(${1:lParam})"},
		{"trigger": "reaper.BR_Win32_GetConstant", "contents": "reaper.BR_Win32_GetConstant(${1:constantName})"},
		{"trigger": "reaper.BR_Win32_GetCursorPos", "contents": "reaper.BR_Win32_GetCursorPos()"},
		{"trigger": "reaper.BR_Win32_GetFocus", "contents": "reaper.BR_Win32_GetFocus()"},
		{"trigger": "reaper.BR_Win32_GetForegroundWindow", "contents": "reaper.BR_Win32_GetForegroundWindow()"},
		{"trigger": "reaper.BR_Win32_GetMainHwnd", "contents": "reaper.BR_Win32_GetMainHwnd()"},
		{"trigger": "reaper.BR_Win32_GetMixerHwnd", "contents": "reaper.BR_Win32_GetMixerHwnd()"},
		{"trigger": "reaper.BR_Win32_GetMonitorRectFromRect", "contents": "reaper.BR_Win32_GetMonitorRectFromRect(${1:workingAreaOnly}, ${2:leftIn}, ${3:topIn}, ${4:rightIn}, ${5:bottomIn})"},
		{"trigger": "reaper.BR_Win32_GetParent", "contents": "reaper.BR_Win32_GetParent(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_GetPrivateProfileString", "contents": "reaper.BR_Win32_GetPrivateProfileString(${1:sectionName}, ${2:keyName}, ${3:defaultString}, ${4:filePath})"},
		{"trigger": "reaper.BR_Win32_GetWindow", "contents": "reaper.BR_Win32_GetWindow(${1:hwnd}, ${2:cmd})"},
		{"trigger": "reaper.BR_Win32_GetWindowLong", "contents": "reaper.BR_Win32_GetWindowLong(${1:hwnd}, ${2:index})"},
		{"trigger": "reaper.BR_Win32_GetWindowRect", "contents": "reaper.BR_Win32_GetWindowRect(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_GetWindowText", "contents": "reaper.BR_Win32_GetWindowText(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_HIBYTE", "contents": "reaper.BR_Win32_HIBYTE(${1:value})"},
		{"trigger": "reaper.BR_Win32_HIWORD", "contents": "reaper.BR_Win32_HIWORD(${1:value})"},
		{"trigger": "reaper.BR_Win32_HwndToString", "contents": "reaper.BR_Win32_HwndToString(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_IsWindow", "contents": "reaper.BR_Win32_IsWindow(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_IsWindowVisible", "contents": "reaper.BR_Win32_IsWindowVisible(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_LOBYTE", "contents": "reaper.BR_Win32_LOBYTE(${1:value})"},
		{"trigger": "reaper.BR_Win32_LOWORD", "contents": "reaper.BR_Win32_LOWORD(${1:value})"},
		{"trigger": "reaper.BR_Win32_MAKELONG", "contents": "reaper.BR_Win32_MAKELONG(${1:low}, ${2:high})"},
		{"trigger": "reaper.BR_Win32_MAKELPARAM", "contents": "reaper.BR_Win32_MAKELPARAM(${1:low}, ${2:high})"},
		{"trigger": "reaper.BR_Win32_MAKELRESULT", "contents": "reaper.BR_Win32_MAKELRESULT(${1:low}, ${2:high})"},
		{"trigger": "reaper.BR_Win32_MAKEWORD", "contents": "reaper.BR_Win32_MAKEWORD(${1:low}, ${2:high})"},
		{"trigger": "reaper.BR_Win32_MAKEWPARAM", "contents": "reaper.BR_Win32_MAKEWPARAM(${1:low}, ${2:high})"},
		{"trigger": "reaper.BR_Win32_MIDIEditor_GetActive", "contents": "reaper.BR_Win32_MIDIEditor_GetActive()"},
		{"trigger": "reaper.BR_Win32_ScreenToClient", "contents": "reaper.BR_Win32_ScreenToClient(${1:hwnd}, ${2:xIn}, ${3:yIn})"},
		{"trigger": "reaper.BR_Win32_SendMessage", "contents": "reaper.BR_Win32_SendMessage(${1:hwnd}, ${2:msg}, ${3:lParam}, ${4:wParam})"},
		{"trigger": "reaper.BR_Win32_SetFocus", "contents": "reaper.BR_Win32_SetFocus(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_SetForegroundWindow", "contents": "reaper.BR_Win32_SetForegroundWindow(${1:hwnd})"},
		{"trigger": "reaper.BR_Win32_SetWindowLong", "contents": "reaper.BR_Win32_SetWindowLong(${1:hwnd}, ${2:index}, ${3:newLong})"},
		{"trigger": "reaper.BR_Win32_SetWindowPos", "contents": "reaper.BR_Win32_SetWindowPos(${1:hwnd}, ${2:hwndInsertAfter}, ${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:flags})"},
		{"trigger": "reaper.BR_Win32_ShellExecute", "contents": "reaper.BR_Win32_ShellExecute(${1:operation}, ${2:file}, ${3:parameters}, ${4:directory}, ${5:showFlags})"},
		{"trigger": "reaper.BR_Win32_ShowWindow", "contents": "reaper.BR_Win32_ShowWindow(${1:hwnd}, ${2:cmdShow})"},
		{"trigger": "reaper.BR_Win32_StringToHwnd", "contents": "reaper.BR_Win32_StringToHwnd(${1:string})"},
		{"trigger": "reaper.BR_Win32_WindowFromPoint", "contents": "reaper.BR_Win32_WindowFromPoint(${1:x}, ${2:y})"},
		{"trigger": "reaper.BR_Win32_WritePrivateProfileString", "contents": "reaper.BR_Win32_WritePrivateProfileString(${1:sectionName}, ${2:keyName}, ${3:value}, ${4:filePath})"},
		{"trigger": "reaper.BypassFxAllTracks", "contents": "reaper.BypassFxAllTracks(${1:bypass})"},
		{"trigger": "reaper.CF_EnumerateActions", "contents": "reaper.CF_EnumerateActions(${1:section}, ${2:index})"},
		{"trigger": "reaper.CF_EnumMediaSourceCues", "contents": "reaper.CF_EnumMediaSourceCues(${1:src}, ${2:index})"},
		{"trigger": "reaper.CF_EnumSelectedFX", "contents": "reaper.CF_EnumSelectedFX(${1:hwnd}, ${2:index})"},
		{"trigger": "reaper.CF_ExportMediaSource", "contents": "reaper.CF_ExportMediaSource(${1:src}, ${2:fn})"},
		{"trigger": "reaper.CF_GetClipboard", "contents": "reaper.CF_GetClipboard()"},
		{"trigger": "reaper.CF_GetClipboardBig", "contents": "reaper.CF_GetClipboardBig(${1:output})"},
		{"trigger": "reaper.CF_GetCommandText", "contents": "reaper.CF_GetCommandText(${1:section}, ${2:command})"},
		{"trigger": "reaper.CF_GetFocusedFXChain", "contents": "reaper.CF_GetFocusedFXChain()"},
		{"trigger": "reaper.CF_GetMediaSourceBitDepth", "contents": "reaper.CF_GetMediaSourceBitDepth(${1:src})"},
		{"trigger": "reaper.CF_GetMediaSourceMetadata", "contents": "reaper.CF_GetMediaSourceMetadata(${1:src}, ${2:name}, ${3:out})"},
		{"trigger": "reaper.CF_GetMediaSourceOnline", "contents": "reaper.CF_GetMediaSourceOnline(${1:src})"},
		{"trigger": "reaper.CF_GetMediaSourceRPP", "contents": "reaper.CF_GetMediaSourceRPP(${1:src})"},
		{"trigger": "reaper.CF_GetSWSVersion", "contents": "reaper.CF_GetSWSVersion()"},
		{"trigger": "reaper.CF_GetTakeFXChain", "contents": "reaper.CF_GetTakeFXChain(${1:take})"},
		{"trigger": "reaper.CF_GetTrackFXChain", "contents": "reaper.CF_GetTrackFXChain(${1:track})"},
		{"trigger": "reaper.CF_LocateInExplorer", "contents": "reaper.CF_LocateInExplorer(${1:file})"},
		{"trigger": "reaper.CF_SelectTrackFX", "contents": "reaper.CF_SelectTrackFX(${1:track}, ${2:index})"},
		{"trigger": "reaper.CF_SetClipboard", "contents": "reaper.CF_SetClipboard(${1:str})"},
		{"trigger": "reaper.CF_SetMediaSourceOnline", "contents": "reaper.CF_SetMediaSourceOnline(${1:src}, ${2:set})"},
		{"trigger": "reaper.CF_ShellExecute", "contents": "reaper.CF_ShellExecute(${1:file})"},
		{"trigger": "gfx.circle", "contents": "gfx.circle(${1:x}, ${2:y}, ${3:r}, ${4:fill}, ${5:antialias})"},
		{"trigger": "clear", "contents": "clear(${1:value}, ${2:offset}, ${3:size})"},
		{"trigger": "reaper.ClearAllRecArmed", "contents": "reaper.ClearAllRecArmed()"},
		{"trigger": "reaper.ClearConsole", "contents": "reaper.ClearConsole()"},
		{"trigger": "reaper.ClearPeakCache", "contents": "reaper.ClearPeakCache()"},
		{"trigger": "gfx.clienttoscreen", "contents": "gfx.clienttoscreen(${1:x}, ${2:y})"},
		{"trigger": "reaper.ColorFromNative", "contents": "reaper.ColorFromNative(${1:col})"},
		{"trigger": "reaper.ColorToNative", "contents": "reaper.ColorToNative(${1:r}, ${2:g}, ${3:b})"},
		{"trigger": "convolve", "contents": "convolve(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"},
		{"trigger": "copy", "contents": "copy(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"},
		{"trigger": "reaper.CountAutomationItems", "contents": "reaper.CountAutomationItems(${1:env})"},
		{"trigger": "reaper.CountEnvelopePoints", "contents": "reaper.CountEnvelopePoints(${1:envelope})"},
		{"trigger": "reaper.CountEnvelopePointsEx", "contents": "reaper.CountEnvelopePointsEx(${1:envelope}, ${2:autoitem_idx})"},
		{"trigger": "reaper.CountMediaItems", "contents": "reaper.CountMediaItems(${1:proj})"},
		{"trigger": "reaper.CountProjectMarkers", "contents": "reaper.CountProjectMarkers(${1:proj})"},
		{"trigger": "reaper.CountSelectedMediaItems", "contents": "reaper.CountSelectedMediaItems(${1:proj})"},
		{"trigger": "reaper.CountSelectedTracks", "contents": "reaper.CountSelectedTracks(${1:proj})"},
		{"trigger": "reaper.CountSelectedTracks2", "contents": "reaper.CountSelectedTracks2(${1:proj}, ${2:wantmaster})"},
		{"trigger": "reaper.CountTakeEnvelopes", "contents": "reaper.CountTakeEnvelopes(${1:take})"},
		{"trigger": "reaper.CountTakes", "contents": "reaper.CountTakes(${1:item})"},
		{"trigger": "reaper.CountTCPFXParms", "contents": "reaper.CountTCPFXParms(${1:project}, ${2:track})"},
		{"trigger": "reaper.CountTempoTimeSigMarkers", "contents": "reaper.CountTempoTimeSigMarkers(${1:proj})"},
		{"trigger": "reaper.CountTrackEnvelopes", "contents": "reaper.CountTrackEnvelopes(${1:track})"},
		{"trigger": "reaper.CountTrackMediaItems", "contents": "reaper.CountTrackMediaItems(${1:track})"},
		{"trigger": "reaper.CountTracks", "contents": "reaper.CountTracks(${1:proj})"},
		{"trigger": "reaper.CreateNewMIDIItemInProj", "contents": "reaper.CreateNewMIDIItemInProj(${1:track}, ${2:starttime}, ${3:endtime}, ${4:qnIn})"},
		{"trigger": "reaper.CreateTakeAudioAccessor", "contents": "reaper.CreateTakeAudioAccessor(${1:take})"},
		{"trigger": "reaper.CreateTrackAudioAccessor", "contents": "reaper.CreateTrackAudioAccessor(${1:track})"},
		{"trigger": "reaper.CreateTrackSend", "contents": "reaper.CreateTrackSend(${1:tr}, ${2:desttrIn})"},
		{"trigger": "reaper.CSurf_FlushUndo", "contents": "reaper.CSurf_FlushUndo(${1:force})"},
		{"trigger": "reaper.CSurf_GetTouchState", "contents": "reaper.CSurf_GetTouchState(${1:trackid}, ${2:isPan})"},
		{"trigger": "reaper.CSurf_GoEnd", "contents": "reaper.CSurf_GoEnd()"},
		{"trigger": "reaper.CSurf_GoStart", "contents": "reaper.CSurf_GoStart()"},
		{"trigger": "reaper.CSurf_NumTracks", "contents": "reaper.CSurf_NumTracks(${1:mcpView})"},
		{"trigger": "reaper.CSurf_OnArrow", "contents": "reaper.CSurf_OnArrow(${1:whichdir}, ${2:wantzoom})"},
		{"trigger": "reaper.CSurf_OnFwd", "contents": "reaper.CSurf_OnFwd(${1:seekplay})"},
		{"trigger": "reaper.CSurf_OnFXChange", "contents": "reaper.CSurf_OnFXChange(${1:trackid}, ${2:en})"},
		{"trigger": "reaper.CSurf_OnInputMonitorChange", "contents": "reaper.CSurf_OnInputMonitorChange(${1:trackid}, ${2:monitor})"},
		{"trigger": "reaper.CSurf_OnInputMonitorChangeEx", "contents": "reaper.CSurf_OnInputMonitorChangeEx(${1:trackid}, ${2:monitor}, ${3:allowgang})"},
		{"trigger": "reaper.CSurf_OnMuteChange", "contents": "reaper.CSurf_OnMuteChange(${1:trackid}, ${2:mute})"},
		{"trigger": "reaper.CSurf_OnMuteChangeEx", "contents": "reaper.CSurf_OnMuteChangeEx(${1:trackid}, ${2:mute}, ${3:allowgang})"},
		{"trigger": "reaper.CSurf_OnPanChange", "contents": "reaper.CSurf_OnPanChange(${1:trackid}, ${2:pan}, ${3:relative})"},
		{"trigger": "reaper.CSurf_OnPanChangeEx", "contents": "reaper.CSurf_OnPanChangeEx(${1:trackid}, ${2:pan}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "reaper.CSurf_OnPause", "contents": "reaper.CSurf_OnPause()"},
		{"trigger": "reaper.CSurf_OnPlay", "contents": "reaper.CSurf_OnPlay()"},
		{"trigger": "reaper.CSurf_OnPlayRateChange", "contents": "reaper.CSurf_OnPlayRateChange(${1:playrate})"},
		{"trigger": "reaper.CSurf_OnRecArmChange", "contents": "reaper.CSurf_OnRecArmChange(${1:trackid}, ${2:recarm})"},
		{"trigger": "reaper.CSurf_OnRecArmChangeEx", "contents": "reaper.CSurf_OnRecArmChangeEx(${1:trackid}, ${2:recarm}, ${3:allowgang})"},
		{"trigger": "reaper.CSurf_OnRecord", "contents": "reaper.CSurf_OnRecord()"},
		{"trigger": "reaper.CSurf_OnRecvPanChange", "contents": "reaper.CSurf_OnRecvPanChange(${1:trackid}, ${2:recv_index}, ${3:pan}, ${4:relative})"},
		{"trigger": "reaper.CSurf_OnRecvVolumeChange", "contents": "reaper.CSurf_OnRecvVolumeChange(${1:trackid}, ${2:recv_index}, ${3:volume}, ${4:relative})"},
		{"trigger": "reaper.CSurf_OnRew", "contents": "reaper.CSurf_OnRew(${1:seekplay})"},
		{"trigger": "reaper.CSurf_OnRewFwd", "contents": "reaper.CSurf_OnRewFwd(${1:seekplay}, ${2:dir})"},
		{"trigger": "reaper.CSurf_OnScroll", "contents": "reaper.CSurf_OnScroll(${1:xdir}, ${2:ydir})"},
		{"trigger": "reaper.CSurf_OnSelectedChange", "contents": "reaper.CSurf_OnSelectedChange(${1:trackid}, ${2:selected})"},
		{"trigger": "reaper.CSurf_OnSendPanChange", "contents": "reaper.CSurf_OnSendPanChange(${1:trackid}, ${2:send_index}, ${3:pan}, ${4:relative})"},
		{"trigger": "reaper.CSurf_OnSendVolumeChange", "contents": "reaper.CSurf_OnSendVolumeChange(${1:trackid}, ${2:send_index}, ${3:volume}, ${4:relative})"},
		{"trigger": "reaper.CSurf_OnSoloChange", "contents": "reaper.CSurf_OnSoloChange(${1:trackid}, ${2:solo})"},
		{"trigger": "reaper.CSurf_OnSoloChangeEx", "contents": "reaper.CSurf_OnSoloChangeEx(${1:trackid}, ${2:solo}, ${3:allowgang})"},
		{"trigger": "reaper.CSurf_OnStop", "contents": "reaper.CSurf_OnStop()"},
		{"trigger": "reaper.CSurf_OnTempoChange", "contents": "reaper.CSurf_OnTempoChange(${1:bpm})"},
		{"trigger": "reaper.CSurf_OnTrackSelection", "contents": "reaper.CSurf_OnTrackSelection(${1:trackid})"},
		{"trigger": "reaper.CSurf_OnVolumeChange", "contents": "reaper.CSurf_OnVolumeChange(${1:trackid}, ${2:volume}, ${3:relative})"},
		{"trigger": "reaper.CSurf_OnVolumeChangeEx", "contents": "reaper.CSurf_OnVolumeChangeEx(${1:trackid}, ${2:volume}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "reaper.CSurf_OnWidthChange", "contents": "reaper.CSurf_OnWidthChange(${1:trackid}, ${2:width}, ${3:relative})"},
		{"trigger": "reaper.CSurf_OnWidthChangeEx", "contents": "reaper.CSurf_OnWidthChangeEx(${1:trackid}, ${2:width}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "reaper.CSurf_OnZoom", "contents": "reaper.CSurf_OnZoom(${1:xdir}, ${2:ydir})"},
		{"trigger": "reaper.CSurf_ResetAllCachedVolPanStates", "contents": "reaper.CSurf_ResetAllCachedVolPanStates()"},
		{"trigger": "reaper.CSurf_ScrubAmt", "contents": "reaper.CSurf_ScrubAmt(${1:amt})"},
		{"trigger": "reaper.CSurf_SetAutoMode", "contents": "reaper.CSurf_SetAutoMode(${1:mode}, ${2:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetPlayState", "contents": "reaper.CSurf_SetPlayState(${1:play}, ${2:pause}, ${3:rec}, ${4:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetRepeatState", "contents": "reaper.CSurf_SetRepeatState(${1:rep}, ${2:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfaceMute", "contents": "reaper.CSurf_SetSurfaceMute(${1:trackid}, ${2:mute}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfacePan", "contents": "reaper.CSurf_SetSurfacePan(${1:trackid}, ${2:pan}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfaceRecArm", "contents": "reaper.CSurf_SetSurfaceRecArm(${1:trackid}, ${2:recarm}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfaceSelected", "contents": "reaper.CSurf_SetSurfaceSelected(${1:trackid}, ${2:selected}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfaceSolo", "contents": "reaper.CSurf_SetSurfaceSolo(${1:trackid}, ${2:solo}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetSurfaceVolume", "contents": "reaper.CSurf_SetSurfaceVolume(${1:trackid}, ${2:volume}, ${3:ignoresurf})"},
		{"trigger": "reaper.CSurf_SetTrackListChange", "contents": "reaper.CSurf_SetTrackListChange()"},
		{"trigger": "reaper.CSurf_TrackFromID", "contents": "reaper.CSurf_TrackFromID(${1:idx}, ${2:mcpView})"},
		{"trigger": "reaper.CSurf_TrackToID", "contents": "reaper.CSurf_TrackToID(${1:track}, ${2:mcpView})"},
		{"trigger": "reaper.DB2SLIDER", "contents": "reaper.DB2SLIDER(${1:x})"},
		{"trigger": "reaper.defer", "contents": "reaper.defer(${1:function})"},
		{"trigger": "reaper.DeleteEnvelopePointEx", "contents": "reaper.DeleteEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx})"},
		{"trigger": "reaper.DeleteEnvelopePointRange", "contents": "reaper.DeleteEnvelopePointRange(${1:envelope}, ${2:time_start}, ${3:time_end})"},
		{"trigger": "reaper.DeleteEnvelopePointRangeEx", "contents": "reaper.DeleteEnvelopePointRangeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time_start}, ${4:time_end})"},
		{"trigger": "reaper.DeleteExtState", "contents": "reaper.DeleteExtState(${1:section}, ${2:key}, ${3:persist})"},
		{"trigger": "reaper.DeleteProjectMarker", "contents": "reaper.DeleteProjectMarker(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn})"},
		{"trigger": "reaper.DeleteProjectMarkerByIndex", "contents": "reaper.DeleteProjectMarkerByIndex(${1:proj}, ${2:markrgnidx})"},
		{"trigger": "reaper.DeleteTakeMarker", "contents": "reaper.DeleteTakeMarker(${1:take}, ${2:idx})"},
		{"trigger": "reaper.DeleteTakeStretchMarkers", "contents": "reaper.DeleteTakeStretchMarkers(${1:take}, ${2:idx}, ${3:countIn})"},
		{"trigger": "reaper.DeleteTempoTimeSigMarker", "contents": "reaper.DeleteTempoTimeSigMarker(${1:project}, ${2:markerindex})"},
		{"trigger": "reaper.DeleteTrack", "contents": "reaper.DeleteTrack(${1:tr})"},
		{"trigger": "reaper.DeleteTrackMediaItem", "contents": "reaper.DeleteTrackMediaItem(${1:tr}, ${2:it})"},
		{"trigger": "gfx.deltablit", "contents": "gfx.deltablit(${1:srcimg}, ${2:srcs}, ${3:srct}, ${4:srcw}, ${5:srch}, ${6:destx}, ${7:desty}, ${8:destw}, ${9:desth}, ${10:dsdx}, ${11:dtdx}, ${12:dsdy}, ${13:dtdy}, ${14:dsdxdy}, ${15:dtdxdy}, ${16:usecliprect=1})"},
		{"trigger": "reaper.DestroyAudioAccessor", "contents": "reaper.DestroyAudioAccessor(${1:accessor})"},
		{"trigger": "gfx.dock", "contents": "gfx.dock(${1:v}, ${2:wx}, ${3:wy}, ${4:ww}, ${5:wh})"},
		{"trigger": "reaper.Dock_UpdateDockID", "contents": "reaper.Dock_UpdateDockID(${1:ident_str}, ${2:whichDock})"},
		{"trigger": "reaper.DockGetPosition", "contents": "reaper.DockGetPosition(${1:whichDock})"},
		{"trigger": "reaper.DockIsChildOfDock", "contents": "reaper.DockIsChildOfDock(${1:hwnd})"},
		{"trigger": "reaper.DockWindowActivate", "contents": "reaper.DockWindowActivate(${1:hwnd})"},
		{"trigger": "reaper.DockWindowAdd", "contents": "reaper.DockWindowAdd(${1:hwnd}, ${2:name}, ${3:pos}, ${4:allowShow})"},
		{"trigger": "reaper.DockWindowAddEx", "contents": "reaper.DockWindowAddEx(${1:hwnd}, ${2:name}, ${3:identstr}, ${4:allowShow})"},
		{"trigger": "reaper.DockWindowRefresh", "contents": "reaper.DockWindowRefresh()"},
		{"trigger": "reaper.DockWindowRefreshForHWND", "contents": "reaper.DockWindowRefreshForHWND(${1:hwnd})"},
		{"trigger": "reaper.DockWindowRemove", "contents": "reaper.DockWindowRemove(${1:hwnd})"},
		{"trigger": "gfx.drawchar", "contents": "gfx.drawchar(${1:char})"},
		{"trigger": "gfx.drawnumber", "contents": "gfx.drawnumber(${1:n}, ${2:ndigits})"},
		{"trigger": "gfx.drawstr", "contents": "gfx.drawstr(${1:str}, ${2:flags}, ${3:right}, ${4:bottom})"},
		{"trigger": "reaper.EditTempoTimeSigMarker", "contents": "reaper.EditTempoTimeSigMarker(${1:project}, ${2:markerindex})"},
		{"trigger": "reaper.EnsureNotCompletelyOffscreen", "contents": "reaper.EnsureNotCompletelyOffscreen(${1:numberr.left}, ${2:numberr.top}, ${3:numberr.right}, ${4:numberr.bot})"},
		{"trigger": "reaper.EnumerateFiles", "contents": "reaper.EnumerateFiles(${1:path}, ${2:fileindex})"},
		{"trigger": "reaper.EnumerateSubdirectories", "contents": "reaper.EnumerateSubdirectories(${1:path}, ${2:subdirindex})"},
		{"trigger": "reaper.EnumPitchShiftModes", "contents": "reaper.EnumPitchShiftModes(${1:mode})"},
		{"trigger": "reaper.EnumPitchShiftSubModes", "contents": "reaper.EnumPitchShiftSubModes(${1:mode}, ${2:submode})"},
		{"trigger": "reaper.EnumProjectMarkers", "contents": "reaper.EnumProjectMarkers(${1:idx})"},
		{"trigger": "reaper.EnumProjectMarkers2", "contents": "reaper.EnumProjectMarkers2(${1:proj}, ${2:idx})"},
		{"trigger": "reaper.EnumProjectMarkers3", "contents": "reaper.EnumProjectMarkers3(${1:proj}, ${2:idx})"},
		{"trigger": "reaper.EnumProjects", "contents": "reaper.EnumProjects(${1:idx})"},
		{"trigger": "reaper.EnumProjExtState", "contents": "reaper.EnumProjExtState(${1:proj}, ${2:extname}, ${3:idx})"},
		{"trigger": "reaper.EnumRegionRenderMatrix", "contents": "reaper.EnumRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:rendertrack})"},
		{"trigger": "reaper.EnumTrackMIDIProgramNames", "contents": "reaper.EnumTrackMIDIProgramNames(${1:track}, ${2:programNumber}, ${3:programName})"},
		{"trigger": "reaper.EnumTrackMIDIProgramNamesEx", "contents": "reaper.EnumTrackMIDIProgramNamesEx(${1:proj}, ${2:track}, ${3:programNumber}, ${4:programName})"},
		{"trigger": "reaper.Envelope_Evaluate", "contents": "reaper.Envelope_Evaluate(${1:envelope}, ${2:time}, ${3:samplerate}, ${4:samplesRequested})"},
		{"trigger": "reaper.Envelope_FormatValue", "contents": "reaper.Envelope_FormatValue(${1:env}, ${2:value})"},
		{"trigger": "reaper.Envelope_GetParentTake", "contents": "reaper.Envelope_GetParentTake(${1:env})"},
		{"trigger": "reaper.Envelope_GetParentTrack", "contents": "reaper.Envelope_GetParentTrack(${1:env})"},
		{"trigger": "reaper.Envelope_SortPoints", "contents": "reaper.Envelope_SortPoints(${1:envelope})"},
		{"trigger": "reaper.Envelope_SortPointsEx", "contents": "reaper.Envelope_SortPointsEx(${1:envelope}, ${2:autoitem_idx})"},
		{"trigger": "reaper.ExecProcess", "contents": "reaper.ExecProcess(${1:cmdline}, ${2:timeoutmsec})"},
		{"trigger": "fft", "contents": "fft(${1:size}, ${2:permute}, ${3:offset})"},
		{"trigger": "fft_real", "contents": "fft_real(${1:size}, ${2:permute}, ${3:offset})"},
		{"trigger": "reaper.file_exists", "contents": "reaper.file_exists(${1:path})"},
		{"trigger": "reaper.FindTempoTimeSigMarker", "contents": "reaper.FindTempoTimeSigMarker(${1:project}, ${2:time})"},
		{"trigger": "reaper.FNG_AddMidiNote", "contents": "reaper.FNG_AddMidiNote(${1:midiTake})"},
		{"trigger": "reaper.FNG_AllocMidiTake", "contents": "reaper.FNG_AllocMidiTake(${1:take})"},
		{"trigger": "reaper.FNG_CountMidiNotes", "contents": "reaper.FNG_CountMidiNotes(${1:midiTake})"},
		{"trigger": "reaper.FNG_FreeMidiTake", "contents": "reaper.FNG_FreeMidiTake(${1:midiTake})"},
		{"trigger": "reaper.FNG_GetMidiNote", "contents": "reaper.FNG_GetMidiNote(${1:midiTake}, ${2:index})"},
		{"trigger": "reaper.FNG_GetMidiNoteIntProperty", "contents": "reaper.FNG_GetMidiNoteIntProperty(${1:midiNote}, ${2:property})"},
		{"trigger": "reaper.FNG_SetMidiNoteIntProperty", "contents": "reaper.FNG_SetMidiNoteIntProperty(${1:midiNote}, ${2:property}, ${3:value})"},
		{"trigger": "reaper.format_timestr", "contents": "reaper.format_timestr(${1:tpos}, ${2:buf})"},
		{"trigger": "reaper.format_timestr_len", "contents": "reaper.format_timestr_len(${1:tpos}, ${2:buf}, ${3:offset}, ${4:modeoverride})"},
		{"trigger": "reaper.format_timestr_pos", "contents": "reaper.format_timestr_pos(${1:tpos}, ${2:buf}, ${3:modeoverride})"},
		{"trigger": "reaper.genGuid", "contents": "reaper.genGuid(${1:gGUID})"},
		{"trigger": "reaper.get_action_context", "contents": "reaper.get_action_context()"},
		{"trigger": "get_alloc", "contents": "get_alloc()"},
		{"trigger": "reaper.get_config_var_string", "contents": "reaper.get_config_var_string(${1:name})"},
		{"trigger": "reaper.get_ini_file", "contents": "reaper.get_ini_file()"},
		{"trigger": "reaper.GetActiveTake", "contents": "reaper.GetActiveTake(${1:item})"},
		{"trigger": "reaper.GetAllProjectPlayStates", "contents": "reaper.GetAllProjectPlayStates(${1:ignoreProject})"},
		{"trigger": "reaper.GetAppVersion", "contents": "reaper.GetAppVersion()"},
		{"trigger": "reaper.GetArmedCommand", "contents": "reaper.GetArmedCommand()"},
		{"trigger": "reaper.GetAudioAccessorEndTime", "contents": "reaper.GetAudioAccessorEndTime(${1:accessor})"},
		{"trigger": "reaper.GetAudioAccessorHash", "contents": "reaper.GetAudioAccessorHash(${1:accessor}, ${2:hashNeed128})"},
		{"trigger": "reaper.GetAudioAccessorSamples", "contents": "reaper.GetAudioAccessorSamples(${1:accessor}, ${2:samplerate}, ${3:numchannels}, ${4:starttime_sec}, ${5:numsamplesperchannel}, ${6:samplebuffer})"},
		{"trigger": "reaper.GetAudioAccessorStartTime", "contents": "reaper.GetAudioAccessorStartTime(${1:accessor})"},
		{"trigger": "reaper.GetAudioDeviceInfo", "contents": "reaper.GetAudioDeviceInfo(${1:attribute}, ${2:desc})"},
		{"trigger": "gfx.getchar", "contents": "gfx.getchar(${1:char})"},
		{"trigger": "reaper.GetConfigWantsDock", "contents": "reaper.GetConfigWantsDock(${1:ident_str})"},
		{"trigger": "reaper.GetCurrentProjectInLoadSave", "contents": "reaper.GetCurrentProjectInLoadSave()"},
		{"trigger": "reaper.GetCursorContext", "contents": "reaper.GetCursorContext()"},
		{"trigger": "reaper.GetCursorContext2", "contents": "reaper.GetCursorContext2(${1:want_last_valid})"},
		{"trigger": "reaper.GetCursorPosition", "contents": "reaper.GetCursorPosition()"},
		{"trigger": "reaper.GetCursorPositionEx", "contents": "reaper.GetCursorPositionEx(${1:proj})"},
		{"trigger": "reaper.GetDisplayedMediaItemColor", "contents": "reaper.GetDisplayedMediaItemColor(${1:item})"},
		{"trigger": "reaper.GetDisplayedMediaItemColor2", "contents": "reaper.GetDisplayedMediaItemColor2(${1:item}, ${2:take})"},
		{"trigger": "gfx.getdropfile", "contents": "gfx.getdropfile(${1:idx})"},
		{"trigger": "reaper.GetEnvelopeInfo_Value", "contents": "reaper.GetEnvelopeInfo_Value(${1:tr}, ${2:parmname})"},
		{"trigger": "reaper.GetEnvelopeName", "contents": "reaper.GetEnvelopeName(${1:env})"},
		{"trigger": "reaper.GetEnvelopePoint", "contents": "reaper.GetEnvelopePoint(${1:envelope}, ${2:ptidx})"},
		{"trigger": "reaper.GetEnvelopePointByTime", "contents": "reaper.GetEnvelopePointByTime(${1:envelope}, ${2:time})"},
		{"trigger": "reaper.GetEnvelopePointByTimeEx", "contents": "reaper.GetEnvelopePointByTimeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time})"},
		{"trigger": "reaper.GetEnvelopePointEx", "contents": "reaper.GetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx})"},
		{"trigger": "reaper.GetEnvelopeScalingMode", "contents": "reaper.GetEnvelopeScalingMode(${1:env})"},
		{"trigger": "reaper.GetEnvelopeStateChunk", "contents": "reaper.GetEnvelopeStateChunk(${1:env}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetExePath", "contents": "reaper.GetExePath()"},
		{"trigger": "reaper.GetExtState", "contents": "reaper.GetExtState(${1:section}, ${2:key})"},
		{"trigger": "reaper.GetFocusedFX", "contents": "reaper.GetFocusedFX()"},
		{"trigger": "reaper.GetFocusedFX2", "contents": "reaper.GetFocusedFX2()"},
		{"trigger": "gfx.getfont", "contents": "gfx.getfont()"},
		{"trigger": "reaper.GetFreeDiskSpaceForRecordPath", "contents": "reaper.GetFreeDiskSpaceForRecordPath(${1:proj}, ${2:pathidx})"},
		{"trigger": "reaper.GetFXEnvelope", "contents": "reaper.GetFXEnvelope(${1:track}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"},
		{"trigger": "reaper.GetGlobalAutomationOverride", "contents": "reaper.GetGlobalAutomationOverride()"},
		{"trigger": "reaper.GetHZoomLevel", "contents": "reaper.GetHZoomLevel()"},
		{"trigger": "gfx.getimgdim", "contents": "gfx.getimgdim(${1:handle})"},
		{"trigger": "reaper.GetInputChannelName", "contents": "reaper.GetInputChannelName(${1:channelIndex})"},
		{"trigger": "reaper.GetInputOutputLatency", "contents": "reaper.GetInputOutputLatency()"},
		{"trigger": "reaper.GetItemEditingTime2", "contents": "reaper.GetItemEditingTime2()"},
		{"trigger": "reaper.GetItemFromPoint", "contents": "reaper.GetItemFromPoint(${1:screen_x}, ${2:screen_y}, ${3:allow_locked})"},
		{"trigger": "reaper.GetItemProjectContext", "contents": "reaper.GetItemProjectContext(${1:item})"},
		{"trigger": "reaper.GetItemStateChunk", "contents": "reaper.GetItemStateChunk(${1:item}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetLastColorThemeFile", "contents": "reaper.GetLastColorThemeFile()"},
		{"trigger": "reaper.GetLastMarkerAndCurRegion", "contents": "reaper.GetLastMarkerAndCurRegion(${1:proj}, ${2:time})"},
		{"trigger": "reaper.GetLastTouchedFX", "contents": "reaper.GetLastTouchedFX()"},
		{"trigger": "reaper.GetLastTouchedTrack", "contents": "reaper.GetLastTouchedTrack()"},
		{"trigger": "reaper.GetMainHwnd", "contents": "reaper.GetMainHwnd()"},
		{"trigger": "reaper.GetMasterMuteSoloFlags", "contents": "reaper.GetMasterMuteSoloFlags()"},
		{"trigger": "reaper.GetMasterTrack", "contents": "reaper.GetMasterTrack(${1:proj})"},
		{"trigger": "reaper.GetMasterTrackVisibility", "contents": "reaper.GetMasterTrackVisibility()"},
		{"trigger": "reaper.GetMaxMidiInputs", "contents": "reaper.GetMaxMidiInputs()"},
		{"trigger": "reaper.GetMaxMidiOutputs", "contents": "reaper.GetMaxMidiOutputs()"},
		{"trigger": "reaper.GetMediaFileMetadata", "contents": "reaper.GetMediaFileMetadata(${1:mediaSource}, ${2:identifier})"},
		{"trigger": "reaper.GetMediaItem", "contents": "reaper.GetMediaItem(${1:proj}, ${2:itemidx})"},
		{"trigger": "reaper.GetMediaItem_Track", "contents": "reaper.GetMediaItem_Track(${1:item})"},
		{"trigger": "reaper.GetMediaItemInfo_Value", "contents": "reaper.GetMediaItemInfo_Value(${1:item}, ${2:parmname})"},
		{"trigger": "reaper.GetMediaItemNumTakes", "contents": "reaper.GetMediaItemNumTakes(${1:item})"},
		{"trigger": "reaper.GetMediaItemTake", "contents": "reaper.GetMediaItemTake(${1:item}, ${2:tk})"},
		{"trigger": "reaper.GetMediaItemTake_Item", "contents": "reaper.GetMediaItemTake_Item(${1:take})"},
		{"trigger": "reaper.GetMediaItemTake_Peaks", "contents": "reaper.GetMediaItemTake_Peaks(${1:take}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"},
		{"trigger": "reaper.GetMediaItemTake_Source", "contents": "reaper.GetMediaItemTake_Source(${1:take})"},
		{"trigger": "reaper.GetMediaItemTake_Track", "contents": "reaper.GetMediaItemTake_Track(${1:take})"},
		{"trigger": "reaper.GetMediaItemTakeByGUID", "contents": "reaper.GetMediaItemTakeByGUID(${1:project}, ${2:guidGUID})"},
		{"trigger": "reaper.GetMediaItemTakeInfo_Value", "contents": "reaper.GetMediaItemTakeInfo_Value(${1:take}, ${2:parmname})"},
		{"trigger": "reaper.GetMediaItemTrack", "contents": "reaper.GetMediaItemTrack(${1:item})"},
		{"trigger": "reaper.GetMediaSourceFileName", "contents": "reaper.GetMediaSourceFileName(${1:source}, ${2:filenamebuf})"},
		{"trigger": "reaper.GetMediaSourceLength", "contents": "reaper.GetMediaSourceLength(${1:source})"},
		{"trigger": "reaper.GetMediaSourceNumChannels", "contents": "reaper.GetMediaSourceNumChannels(${1:source})"},
		{"trigger": "reaper.GetMediaSourceParent", "contents": "reaper.GetMediaSourceParent(${1:src})"},
		{"trigger": "reaper.GetMediaSourceSampleRate", "contents": "reaper.GetMediaSourceSampleRate(${1:source})"},
		{"trigger": "reaper.GetMediaSourceType", "contents": "reaper.GetMediaSourceType(${1:source}, ${2:typebuf})"},
		{"trigger": "reaper.GetMediaTrackInfo_Value", "contents": "reaper.GetMediaTrackInfo_Value(${1:tr}, ${2:parmname})"},
		{"trigger": "reaper.GetMIDIInputName", "contents": "reaper.GetMIDIInputName(${1:dev}, ${2:nameout})"},
		{"trigger": "reaper.GetMIDIOutputName", "contents": "reaper.GetMIDIOutputName(${1:dev}, ${2:nameout})"},
		{"trigger": "reaper.GetMixerScroll", "contents": "reaper.GetMixerScroll()"},
		{"trigger": "reaper.GetMouseModifier", "contents": "reaper.GetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:action})"},
		{"trigger": "reaper.GetMousePosition", "contents": "reaper.GetMousePosition()"},
		{"trigger": "reaper.GetNumAudioInputs", "contents": "reaper.GetNumAudioInputs()"},
		{"trigger": "reaper.GetNumAudioOutputs", "contents": "reaper.GetNumAudioOutputs()"},
		{"trigger": "reaper.GetNumMIDIInputs", "contents": "reaper.GetNumMIDIInputs()"},
		{"trigger": "reaper.GetNumMIDIOutputs", "contents": "reaper.GetNumMIDIOutputs()"},
		{"trigger": "reaper.GetNumTakeMarkers", "contents": "reaper.GetNumTakeMarkers(${1:take})"},
		{"trigger": "reaper.GetNumTracks", "contents": "reaper.GetNumTracks()"},
		{"trigger": "reaper.GetOS", "contents": "reaper.GetOS()"},
		{"trigger": "reaper.GetOutputChannelName", "contents": "reaper.GetOutputChannelName(${1:channelIndex})"},
		{"trigger": "reaper.GetOutputLatency", "contents": "reaper.GetOutputLatency()"},
		{"trigger": "reaper.GetParentTrack", "contents": "reaper.GetParentTrack(${1:track})"},
		{"trigger": "reaper.GetPeakFileName", "contents": "reaper.GetPeakFileName(${1:fn}, ${2:buf})"},
		{"trigger": "reaper.GetPeakFileNameEx", "contents": "reaper.GetPeakFileNameEx(${1:fn}, ${2:buf}, ${3:forWrite})"},
		{"trigger": "reaper.GetPeakFileNameEx2", "contents": "reaper.GetPeakFileNameEx2(${1:fn}, ${2:buf}, ${3:forWrite}, ${4:peaksfileextension})"},
		{"trigger": "gfx.getpixel", "contents": "gfx.getpixel()"},
		{"trigger": "reaper.GetPlayPosition", "contents": "reaper.GetPlayPosition()"},
		{"trigger": "reaper.GetPlayPosition2", "contents": "reaper.GetPlayPosition2()"},
		{"trigger": "reaper.GetPlayPosition2Ex", "contents": "reaper.GetPlayPosition2Ex(${1:proj})"},
		{"trigger": "reaper.GetPlayPositionEx", "contents": "reaper.GetPlayPositionEx(${1:proj})"},
		{"trigger": "reaper.GetPlayState", "contents": "reaper.GetPlayState()"},
		{"trigger": "reaper.GetPlayStateEx", "contents": "reaper.GetPlayStateEx(${1:proj})"},
		{"trigger": "reaper.GetProjectLength", "contents": "reaper.GetProjectLength(${1:proj})"},
		{"trigger": "reaper.GetProjectName", "contents": "reaper.GetProjectName(${1:proj}, ${2:buf})"},
		{"trigger": "reaper.GetProjectPath", "contents": "reaper.GetProjectPath(${1:buf})"},
		{"trigger": "reaper.GetProjectPathEx", "contents": "reaper.GetProjectPathEx(${1:proj}, ${2:buf})"},
		{"trigger": "reaper.GetProjectStateChangeCount", "contents": "reaper.GetProjectStateChangeCount(${1:proj})"},
		{"trigger": "reaper.GetProjectTimeOffset", "contents": "reaper.GetProjectTimeOffset(${1:proj}, ${2:rndframe})"},
		{"trigger": "reaper.GetProjectTimeSignature", "contents": "reaper.GetProjectTimeSignature()"},
		{"trigger": "reaper.GetProjectTimeSignature2", "contents": "reaper.GetProjectTimeSignature2(${1:proj})"},
		{"trigger": "reaper.GetProjExtState", "contents": "reaper.GetProjExtState(${1:proj}, ${2:extname}, ${3:key})"},
		{"trigger": "reaper.GetResourcePath", "contents": "reaper.GetResourcePath()"},
		{"trigger": "reaper.GetSelectedEnvelope", "contents": "reaper.GetSelectedEnvelope(${1:proj})"},
		{"trigger": "reaper.GetSelectedMediaItem", "contents": "reaper.GetSelectedMediaItem(${1:proj}, ${2:selitem})"},
		{"trigger": "reaper.GetSelectedTrack", "contents": "reaper.GetSelectedTrack(${1:proj}, ${2:seltrackidx})"},
		{"trigger": "reaper.GetSelectedTrack2", "contents": "reaper.GetSelectedTrack2(${1:proj}, ${2:seltrackidx}, ${3:wantmaster})"},
		{"trigger": "reaper.GetSelectedTrackEnvelope", "contents": "reaper.GetSelectedTrackEnvelope(${1:proj})"},
		{"trigger": "reaper.GetSet_ArrangeView2", "contents": "reaper.GetSet_ArrangeView2(${1:proj}, ${2:isSet}, ${3:screen_x_start}, ${4:screen_x_end})"},
		{"trigger": "reaper.GetSet_LoopTimeRange", "contents": "reaper.GetSet_LoopTimeRange(${1:isSet}, ${2:isLoop}, ${3:start}, ${4:end}, ${5:allowautoseek})"},
		{"trigger": "reaper.GetSet_LoopTimeRange2", "contents": "reaper.GetSet_LoopTimeRange2(${1:proj}, ${2:isSet}, ${3:isLoop}, ${4:start}, ${5:end}, ${6:allowautoseek})"},
		{"trigger": "reaper.GetSetAutomationItemInfo", "contents": "reaper.GetSetAutomationItemInfo(${1:env}, ${2:autoitem_idx}, ${3:desc}, ${4:value}, ${5:is_set})"},
		{"trigger": "reaper.GetSetAutomationItemInfo_String", "contents": "reaper.GetSetAutomationItemInfo_String(${1:env}, ${2:autoitem_idx}, ${3:desc}, ${4:valuestrNeedBig}, ${5:is_set})"},
		{"trigger": "reaper.GetSetEnvelopeInfo_String", "contents": "reaper.GetSetEnvelopeInfo_String(${1:env}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "reaper.GetSetEnvelopeState", "contents": "reaper.GetSetEnvelopeState(${1:env}, ${2:str})"},
		{"trigger": "reaper.GetSetEnvelopeState2", "contents": "reaper.GetSetEnvelopeState2(${1:env}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetSetItemState", "contents": "reaper.GetSetItemState(${1:item}, ${2:str})"},
		{"trigger": "reaper.GetSetItemState2", "contents": "reaper.GetSetItemState2(${1:item}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetSetMediaItemInfo_String", "contents": "reaper.GetSetMediaItemInfo_String(${1:item}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "reaper.GetSetMediaItemTakeInfo_String", "contents": "reaper.GetSetMediaItemTakeInfo_String(${1:tk}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "reaper.GetSetMediaTrackInfo_String", "contents": "reaper.GetSetMediaTrackInfo_String(${1:tr}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "reaper.GetSetProjectAuthor", "contents": "reaper.GetSetProjectAuthor(${1:proj}, ${2:set}, ${3:author})"},
		{"trigger": "reaper.GetSetProjectGrid", "contents": "reaper.GetSetProjectGrid(${1:project}, ${2:set}, ${3:division}, ${4:swingmode}, ${5:swingamt})"},
		{"trigger": "reaper.GetSetProjectInfo", "contents": "reaper.GetSetProjectInfo(${1:project}, ${2:desc}, ${3:value}, ${4:is_set})"},
		{"trigger": "reaper.GetSetProjectInfo_String", "contents": "reaper.GetSetProjectInfo_String(${1:project}, ${2:desc}, ${3:valuestrNeedBig}, ${4:is_set})"},
		{"trigger": "reaper.GetSetProjectNotes", "contents": "reaper.GetSetProjectNotes(${1:proj}, ${2:set}, ${3:notes})"},
		{"trigger": "reaper.GetSetRepeat", "contents": "reaper.GetSetRepeat(${1:val})"},
		{"trigger": "reaper.GetSetRepeatEx", "contents": "reaper.GetSetRepeatEx(${1:proj}, ${2:val})"},
		{"trigger": "reaper.GetSetTrackGroupMembership", "contents": "reaper.GetSetTrackGroupMembership(${1:tr}, ${2:groupname}, ${3:setmask}, ${4:setvalue})"},
		{"trigger": "reaper.GetSetTrackGroupMembershipHigh", "contents": "reaper.GetSetTrackGroupMembershipHigh(${1:tr}, ${2:groupname}, ${3:setmask}, ${4:setvalue})"},
		{"trigger": "reaper.GetSetTrackSendInfo_String", "contents": "reaper.GetSetTrackSendInfo_String(${1:tr}, ${2:category}, ${3:sendidx}, ${4:parmname}, ${5:stringNeedBig}, ${6:setNewValue})"},
		{"trigger": "reaper.GetSetTrackState", "contents": "reaper.GetSetTrackState(${1:track}, ${2:str})"},
		{"trigger": "reaper.GetSetTrackState2", "contents": "reaper.GetSetTrackState2(${1:track}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetSubProjectFromSource", "contents": "reaper.GetSubProjectFromSource(${1:src})"},
		{"trigger": "reaper.GetTake", "contents": "reaper.GetTake(${1:item}, ${2:takeidx})"},
		{"trigger": "reaper.GetTakeEnvelope", "contents": "reaper.GetTakeEnvelope(${1:take}, ${2:envidx})"},
		{"trigger": "reaper.GetTakeEnvelopeByName", "contents": "reaper.GetTakeEnvelopeByName(${1:take}, ${2:envname})"},
		{"trigger": "reaper.GetTakeMarker", "contents": "reaper.GetTakeMarker(${1:take}, ${2:idx})"},
		{"trigger": "reaper.GetTakeName", "contents": "reaper.GetTakeName(${1:take})"},
		{"trigger": "reaper.GetTakeNumStretchMarkers", "contents": "reaper.GetTakeNumStretchMarkers(${1:take})"},
		{"trigger": "reaper.GetTakeStretchMarker", "contents": "reaper.GetTakeStretchMarker(${1:take}, ${2:idx})"},
		{"trigger": "reaper.GetTakeStretchMarkerSlope", "contents": "reaper.GetTakeStretchMarkerSlope(${1:take}, ${2:idx})"},
		{"trigger": "reaper.GetTCPFXParm", "contents": "reaper.GetTCPFXParm(${1:project}, ${2:track}, ${3:index})"},
		{"trigger": "reaper.GetTempoMatchPlayRate", "contents": "reaper.GetTempoMatchPlayRate(${1:source}, ${2:srcscale}, ${3:position}, ${4:mult})"},
		{"trigger": "reaper.GetTempoTimeSigMarker", "contents": "reaper.GetTempoTimeSigMarker(${1:proj}, ${2:ptidx})"},
		{"trigger": "reaper.GetThemeColor", "contents": "reaper.GetThemeColor(${1:ini_key}, ${2:flags})"},
		{"trigger": "reaper.GetToggleCommandState", "contents": "reaper.GetToggleCommandState(${1:command_id})"},
		{"trigger": "reaper.GetToggleCommandStateEx", "contents": "reaper.GetToggleCommandStateEx(${1:section_id}, ${2:command_id})"},
		{"trigger": "reaper.GetTooltipWindow", "contents": "reaper.GetTooltipWindow()"},
		{"trigger": "reaper.GetTrack", "contents": "reaper.GetTrack(${1:proj}, ${2:trackidx})"},
		{"trigger": "reaper.GetTrackAutomationMode", "contents": "reaper.GetTrackAutomationMode(${1:tr})"},
		{"trigger": "reaper.GetTrackColor", "contents": "reaper.GetTrackColor(${1:track})"},
		{"trigger": "reaper.GetTrackDepth", "contents": "reaper.GetTrackDepth(${1:track})"},
		{"trigger": "reaper.GetTrackEnvelope", "contents": "reaper.GetTrackEnvelope(${1:track}, ${2:envidx})"},
		{"trigger": "reaper.GetTrackEnvelopeByChunkName", "contents": "reaper.GetTrackEnvelopeByChunkName(${1:tr}, ${2:cfgchunkname_or_guid})"},
		{"trigger": "reaper.GetTrackEnvelopeByName", "contents": "reaper.GetTrackEnvelopeByName(${1:track}, ${2:envname})"},
		{"trigger": "reaper.GetTrackFromPoint", "contents": "reaper.GetTrackFromPoint(${1:screen_x}, ${2:screen_y})"},
		{"trigger": "reaper.GetTrackGUID", "contents": "reaper.GetTrackGUID(${1:tr})"},
		{"trigger": "reaper.GetTrackMediaItem", "contents": "reaper.GetTrackMediaItem(${1:tr}, ${2:itemidx})"},
		{"trigger": "reaper.GetTrackMIDILyrics", "contents": "reaper.GetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:bufWant})"},
		{"trigger": "reaper.GetTrackMIDINoteName", "contents": "reaper.GetTrackMIDINoteName(${1:track}, ${2:pitch}, ${3:chan})"},
		{"trigger": "reaper.GetTrackMIDINoteNameEx", "contents": "reaper.GetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:pitch}, ${4:chan})"},
		{"trigger": "reaper.GetTrackMIDINoteRange", "contents": "reaper.GetTrackMIDINoteRange(${1:proj}, ${2:track})"},
		{"trigger": "reaper.GetTrackName", "contents": "reaper.GetTrackName(${1:track})"},
		{"trigger": "reaper.GetTrackNumMediaItems", "contents": "reaper.GetTrackNumMediaItems(${1:tr})"},
		{"trigger": "reaper.GetTrackNumSends", "contents": "reaper.GetTrackNumSends(${1:tr}, ${2:category})"},
		{"trigger": "reaper.GetTrackReceiveName", "contents": "reaper.GetTrackReceiveName(${1:track}, ${2:recv_index}, ${3:buf})"},
		{"trigger": "reaper.GetTrackReceiveUIMute", "contents": "reaper.GetTrackReceiveUIMute(${1:track}, ${2:recv_index})"},
		{"trigger": "reaper.GetTrackReceiveUIVolPan", "contents": "reaper.GetTrackReceiveUIVolPan(${1:track}, ${2:recv_index})"},
		{"trigger": "reaper.GetTrackSendInfo_Value", "contents": "reaper.GetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:parmname})"},
		{"trigger": "reaper.GetTrackSendName", "contents": "reaper.GetTrackSendName(${1:track}, ${2:send_index}, ${3:buf})"},
		{"trigger": "reaper.GetTrackSendUIMute", "contents": "reaper.GetTrackSendUIMute(${1:track}, ${2:send_index})"},
		{"trigger": "reaper.GetTrackSendUIVolPan", "contents": "reaper.GetTrackSendUIVolPan(${1:track}, ${2:send_index})"},
		{"trigger": "reaper.GetTrackState", "contents": "reaper.GetTrackState(${1:track})"},
		{"trigger": "reaper.GetTrackStateChunk", "contents": "reaper.GetTrackStateChunk(${1:track}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.GetTrackUIMute", "contents": "reaper.GetTrackUIMute(${1:track})"},
		{"trigger": "reaper.GetTrackUIPan", "contents": "reaper.GetTrackUIPan(${1:track})"},
		{"trigger": "reaper.GetTrackUIVolPan", "contents": "reaper.GetTrackUIVolPan(${1:track})"},
		{"trigger": "reaper.GetUnderrunTime", "contents": "reaper.GetUnderrunTime()"},
		{"trigger": "reaper.GetUserFileNameForRead", "contents": "reaper.GetUserFileNameForRead(${1:filenameNeed4096}, ${2:title}, ${3:defext})"},
		{"trigger": "reaper.GetUserInputs", "contents": "reaper.GetUserInputs(${1:title}, ${2:num_inputs}, ${3:captions_csv}, ${4:retvals_csv})"},
		{"trigger": "reaper.gmem_attach", "contents": "reaper.gmem_attach(${1:sharedMemoryName})"},
		{"trigger": "reaper.gmem_read", "contents": "reaper.gmem_read(${1:index})"},
		{"trigger": "reaper.gmem_write", "contents": "reaper.gmem_write(${1:index}, ${2:value})"},
		{"trigger": "reaper.GoToMarker", "contents": "reaper.GoToMarker(${1:proj}, ${2:marker_index}, ${3:use_timeline_order})"},
		{"trigger": "reaper.GoToRegion", "contents": "reaper.GoToRegion(${1:proj}, ${2:region_index}, ${3:use_timeline_order})"},
		{"trigger": "reaper.GR_SelectColor", "contents": "reaper.GR_SelectColor(${1:hwnd})"},
		{"trigger": "gfx.gradrect", "contents": "gfx.gradrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:r}, ${6:g}, ${7:b}, ${8:a}, ${9:drdx}, ${10:dgdx}, ${11:dbdx}, ${12:dadx}, ${13:drdy}, ${14:dgdy}, ${15:dbdy}, ${16:dady})"},
		{"trigger": "reaper.GSC_mainwnd", "contents": "reaper.GSC_mainwnd(${1:t})"},
		{"trigger": "reaper.guidToString", "contents": "reaper.guidToString(${1:gGUID}, ${2:destNeed64})"},
		{"trigger": "reaper.HasExtState", "contents": "reaper.HasExtState(${1:section}, ${2:key})"},
		{"trigger": "reaper.HasTrackMIDIPrograms", "contents": "reaper.HasTrackMIDIPrograms(${1:track})"},
		{"trigger": "reaper.HasTrackMIDIProgramsEx", "contents": "reaper.HasTrackMIDIProgramsEx(${1:proj}, ${2:track})"},
		{"trigger": "reaper.Help_Set", "contents": "reaper.Help_Set(${1:helpstring}, ${2:is_temporary_help})"},
		{"trigger": "ifft", "contents": "ifft(${1:size}, ${2:permute}, ${3:offset})"},
		{"trigger": "ifft_real", "contents": "ifft_real(${1:size}, ${2:permute}, ${3:offset})"},
		{"trigger": "reaper.image_resolve_fn", "contents": "reaper.image_resolve_fn(${1:in}, ${2:out})"},
		{"trigger": "reaper.ImGui_AcceptDragDropPayload", "contents": "reaper.ImGui_AcceptDragDropPayload(${1:ctx}, ${2:type}, ${3:payload}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_AcceptDragDropPayloadFiles", "contents": "reaper.ImGui_AcceptDragDropPayloadFiles(${1:ctx}, ${2:count}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_AcceptDragDropPayloadRGB", "contents": "reaper.ImGui_AcceptDragDropPayloadRGB(${1:ctx}, ${2:rgb}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_AcceptDragDropPayloadRGBA", "contents": "reaper.ImGui_AcceptDragDropPayloadRGBA(${1:ctx}, ${2:rgba}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_AlignTextToFramePadding", "contents": "reaper.ImGui_AlignTextToFramePadding(${1:ctx})"},
		{"trigger": "reaper.ImGui_ArrowButton", "contents": "reaper.ImGui_ArrowButton(${1:ctx}, ${2:str_id}, ${3:dir})"},
		{"trigger": "reaper.ImGui_AttachFont", "contents": "reaper.ImGui_AttachFont(${1:font})"},
		{"trigger": "reaper.ImGui_Begin", "contents": "reaper.ImGui_Begin(${1:ctx}, ${2:name}, ${3:p_open}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginChild", "contents": "reaper.ImGui_BeginChild(${1:ctx}, ${2:str_id}, ${3:size_wIn}, ${4:size_hIn}, ${5:borderIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginChildFrame", "contents": "reaper.ImGui_BeginChildFrame(${1:ctx}, ${2:str_id}, ${3:size_w}, ${4:size_h}, ${5:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginCombo", "contents": "reaper.ImGui_BeginCombo(${1:ctx}, ${2:label}, ${3:preview_value}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginDragDropSource", "contents": "reaper.ImGui_BeginDragDropSource(${1:ctx}, ${2:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginDragDropTarget", "contents": "reaper.ImGui_BeginDragDropTarget(${1:ctx})"},
		{"trigger": "reaper.ImGui_BeginGroup", "contents": "reaper.ImGui_BeginGroup(${1:ctx})"},
		{"trigger": "reaper.ImGui_BeginListBox", "contents": "reaper.ImGui_BeginListBox(${1:ctx}, ${2:label}, ${3:size_wIn}, ${4:size_hIn})"},
		{"trigger": "reaper.ImGui_BeginMenu", "contents": "reaper.ImGui_BeginMenu(${1:ctx}, ${2:label}, ${3:enabledIn})"},
		{"trigger": "reaper.ImGui_BeginMenuBar", "contents": "reaper.ImGui_BeginMenuBar(${1:ctx})"},
		{"trigger": "reaper.ImGui_BeginPopup", "contents": "reaper.ImGui_BeginPopup(${1:ctx}, ${2:str_id}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginPopupContextItem", "contents": "reaper.ImGui_BeginPopupContextItem(${1:ctx}, ${2:str_idIn}, ${3:popup_flagsIn})"},
		{"trigger": "reaper.ImGui_BeginPopupContextWindow", "contents": "reaper.ImGui_BeginPopupContextWindow(${1:ctx}, ${2:str_idIn}, ${3:popup_flagsIn})"},
		{"trigger": "reaper.ImGui_BeginPopupModal", "contents": "reaper.ImGui_BeginPopupModal(${1:ctx}, ${2:name}, ${3:p_open}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginTabBar", "contents": "reaper.ImGui_BeginTabBar(${1:ctx}, ${2:str_id}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginTabItem", "contents": "reaper.ImGui_BeginTabItem(${1:ctx}, ${2:label}, ${3:p_open}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_BeginTable", "contents": "reaper.ImGui_BeginTable(${1:ctx}, ${2:str_id}, ${3:column}, ${4:flagsIn}, ${5:outer_size_wIn}, ${6:outer_size_hIn}, ${7:inner_widthIn})"},
		{"trigger": "reaper.ImGui_BeginTooltip", "contents": "reaper.ImGui_BeginTooltip(${1:ctx})"},
		{"trigger": "reaper.ImGui_Bullet", "contents": "reaper.ImGui_Bullet(${1:ctx})"},
		{"trigger": "reaper.ImGui_BulletText", "contents": "reaper.ImGui_BulletText(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_Button", "contents": "reaper.ImGui_Button(${1:ctx}, ${2:label}, ${3:size_wIn}, ${4:size_hIn})"},
		{"trigger": "reaper.ImGui_ButtonFlags_MouseButtonLeft", "contents": "reaper.ImGui_ButtonFlags_MouseButtonLeft()"},
		{"trigger": "reaper.ImGui_ButtonFlags_MouseButtonMiddle", "contents": "reaper.ImGui_ButtonFlags_MouseButtonMiddle()"},
		{"trigger": "reaper.ImGui_ButtonFlags_MouseButtonRight", "contents": "reaper.ImGui_ButtonFlags_MouseButtonRight()"},
		{"trigger": "reaper.ImGui_ButtonFlags_None", "contents": "reaper.ImGui_ButtonFlags_None()"},
		{"trigger": "reaper.ImGui_CalcItemWidth", "contents": "reaper.ImGui_CalcItemWidth(${1:ctx})"},
		{"trigger": "reaper.ImGui_CalcTextSize", "contents": "reaper.ImGui_CalcTextSize(${1:ctx}, ${2:text}, ${3:w}, ${4:h}, ${5:hide_text_after_double_hashIn}, ${6:wrap_widthIn})"},
		{"trigger": "reaper.ImGui_CaptureKeyboardFromApp", "contents": "reaper.ImGui_CaptureKeyboardFromApp(${1:ctx}, ${2:want_capture_keyboard_valueIn})"},
		{"trigger": "reaper.ImGui_Checkbox", "contents": "reaper.ImGui_Checkbox(${1:ctx}, ${2:label}, ${3:v})"},
		{"trigger": "reaper.ImGui_CheckboxFlags", "contents": "reaper.ImGui_CheckboxFlags(${1:ctx}, ${2:label}, ${3:flags}, ${4:flags_value})"},
		{"trigger": "reaper.ImGui_CloseCurrentPopup", "contents": "reaper.ImGui_CloseCurrentPopup(${1:ctx})"},
		{"trigger": "reaper.ImGui_Col_Border", "contents": "reaper.ImGui_Col_Border()"},
		{"trigger": "reaper.ImGui_Col_BorderShadow", "contents": "reaper.ImGui_Col_BorderShadow()"},
		{"trigger": "reaper.ImGui_Col_Button", "contents": "reaper.ImGui_Col_Button()"},
		{"trigger": "reaper.ImGui_Col_ButtonActive", "contents": "reaper.ImGui_Col_ButtonActive()"},
		{"trigger": "reaper.ImGui_Col_ButtonHovered", "contents": "reaper.ImGui_Col_ButtonHovered()"},
		{"trigger": "reaper.ImGui_Col_CheckMark", "contents": "reaper.ImGui_Col_CheckMark()"},
		{"trigger": "reaper.ImGui_Col_ChildBg", "contents": "reaper.ImGui_Col_ChildBg()"},
		{"trigger": "reaper.ImGui_Col_DockingEmptyBg", "contents": "reaper.ImGui_Col_DockingEmptyBg()"},
		{"trigger": "reaper.ImGui_Col_DockingPreview", "contents": "reaper.ImGui_Col_DockingPreview()"},
		{"trigger": "reaper.ImGui_Col_DragDropTarget", "contents": "reaper.ImGui_Col_DragDropTarget()"},
		{"trigger": "reaper.ImGui_Col_FrameBg", "contents": "reaper.ImGui_Col_FrameBg()"},
		{"trigger": "reaper.ImGui_Col_FrameBgActive", "contents": "reaper.ImGui_Col_FrameBgActive()"},
		{"trigger": "reaper.ImGui_Col_FrameBgHovered", "contents": "reaper.ImGui_Col_FrameBgHovered()"},
		{"trigger": "reaper.ImGui_Col_Header", "contents": "reaper.ImGui_Col_Header()"},
		{"trigger": "reaper.ImGui_Col_HeaderActive", "contents": "reaper.ImGui_Col_HeaderActive()"},
		{"trigger": "reaper.ImGui_Col_HeaderHovered", "contents": "reaper.ImGui_Col_HeaderHovered()"},
		{"trigger": "reaper.ImGui_Col_MenuBarBg", "contents": "reaper.ImGui_Col_MenuBarBg()"},
		{"trigger": "reaper.ImGui_Col_ModalWindowDimBg", "contents": "reaper.ImGui_Col_ModalWindowDimBg()"},
		{"trigger": "reaper.ImGui_Col_NavHighlight", "contents": "reaper.ImGui_Col_NavHighlight()"},
		{"trigger": "reaper.ImGui_Col_NavWindowingDimBg", "contents": "reaper.ImGui_Col_NavWindowingDimBg()"},
		{"trigger": "reaper.ImGui_Col_NavWindowingHighlight", "contents": "reaper.ImGui_Col_NavWindowingHighlight()"},
		{"trigger": "reaper.ImGui_Col_PlotHistogram", "contents": "reaper.ImGui_Col_PlotHistogram()"},
		{"trigger": "reaper.ImGui_Col_PlotHistogramHovered", "contents": "reaper.ImGui_Col_PlotHistogramHovered()"},
		{"trigger": "reaper.ImGui_Col_PlotLines", "contents": "reaper.ImGui_Col_PlotLines()"},
		{"trigger": "reaper.ImGui_Col_PlotLinesHovered", "contents": "reaper.ImGui_Col_PlotLinesHovered()"},
		{"trigger": "reaper.ImGui_Col_PopupBg", "contents": "reaper.ImGui_Col_PopupBg()"},
		{"trigger": "reaper.ImGui_Col_ResizeGrip", "contents": "reaper.ImGui_Col_ResizeGrip()"},
		{"trigger": "reaper.ImGui_Col_ResizeGripActive", "contents": "reaper.ImGui_Col_ResizeGripActive()"},
		{"trigger": "reaper.ImGui_Col_ResizeGripHovered", "contents": "reaper.ImGui_Col_ResizeGripHovered()"},
		{"trigger": "reaper.ImGui_Col_ScrollbarBg", "contents": "reaper.ImGui_Col_ScrollbarBg()"},
		{"trigger": "reaper.ImGui_Col_ScrollbarGrab", "contents": "reaper.ImGui_Col_ScrollbarGrab()"},
		{"trigger": "reaper.ImGui_Col_ScrollbarGrabActive", "contents": "reaper.ImGui_Col_ScrollbarGrabActive()"},
		{"trigger": "reaper.ImGui_Col_ScrollbarGrabHovered", "contents": "reaper.ImGui_Col_ScrollbarGrabHovered()"},
		{"trigger": "reaper.ImGui_Col_Separator", "contents": "reaper.ImGui_Col_Separator()"},
		{"trigger": "reaper.ImGui_Col_SeparatorActive", "contents": "reaper.ImGui_Col_SeparatorActive()"},
		{"trigger": "reaper.ImGui_Col_SeparatorHovered", "contents": "reaper.ImGui_Col_SeparatorHovered()"},
		{"trigger": "reaper.ImGui_Col_SliderGrab", "contents": "reaper.ImGui_Col_SliderGrab()"},
		{"trigger": "reaper.ImGui_Col_SliderGrabActive", "contents": "reaper.ImGui_Col_SliderGrabActive()"},
		{"trigger": "reaper.ImGui_Col_Tab", "contents": "reaper.ImGui_Col_Tab()"},
		{"trigger": "reaper.ImGui_Col_TabActive", "contents": "reaper.ImGui_Col_TabActive()"},
		{"trigger": "reaper.ImGui_Col_TabHovered", "contents": "reaper.ImGui_Col_TabHovered()"},
		{"trigger": "reaper.ImGui_Col_TableBorderLight", "contents": "reaper.ImGui_Col_TableBorderLight()"},
		{"trigger": "reaper.ImGui_Col_TableBorderStrong", "contents": "reaper.ImGui_Col_TableBorderStrong()"},
		{"trigger": "reaper.ImGui_Col_TableHeaderBg", "contents": "reaper.ImGui_Col_TableHeaderBg()"},
		{"trigger": "reaper.ImGui_Col_TableRowBg", "contents": "reaper.ImGui_Col_TableRowBg()"},
		{"trigger": "reaper.ImGui_Col_TableRowBgAlt", "contents": "reaper.ImGui_Col_TableRowBgAlt()"},
		{"trigger": "reaper.ImGui_Col_TabUnfocused", "contents": "reaper.ImGui_Col_TabUnfocused()"},
		{"trigger": "reaper.ImGui_Col_TabUnfocusedActive", "contents": "reaper.ImGui_Col_TabUnfocusedActive()"},
		{"trigger": "reaper.ImGui_Col_Text", "contents": "reaper.ImGui_Col_Text()"},
		{"trigger": "reaper.ImGui_Col_TextDisabled", "contents": "reaper.ImGui_Col_TextDisabled()"},
		{"trigger": "reaper.ImGui_Col_TextSelectedBg", "contents": "reaper.ImGui_Col_TextSelectedBg()"},
		{"trigger": "reaper.ImGui_Col_TitleBg", "contents": "reaper.ImGui_Col_TitleBg()"},
		{"trigger": "reaper.ImGui_Col_TitleBgActive", "contents": "reaper.ImGui_Col_TitleBgActive()"},
		{"trigger": "reaper.ImGui_Col_TitleBgCollapsed", "contents": "reaper.ImGui_Col_TitleBgCollapsed()"},
		{"trigger": "reaper.ImGui_Col_WindowBg", "contents": "reaper.ImGui_Col_WindowBg()"},
		{"trigger": "reaper.ImGui_CollapsingHeader", "contents": "reaper.ImGui_CollapsingHeader(${1:ctx}, ${2:label}, ${3:p_visible}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_ColorButton", "contents": "reaper.ImGui_ColorButton(${1:ctx}, ${2:desc_id}, ${3:col_rgba}, ${4:flagsIn}, ${5:size_wIn}, ${6:size_hIn})"},
		{"trigger": "reaper.ImGui_ColorConvertHSVtoRGB", "contents": "reaper.ImGui_ColorConvertHSVtoRGB(${1:h}, ${2:s}, ${3:v}, ${4:alphaIn})"},
		{"trigger": "reaper.ImGui_ColorConvertNative", "contents": "reaper.ImGui_ColorConvertNative(${1:rgb})"},
		{"trigger": "reaper.ImGui_ColorConvertRGBtoHSV", "contents": "reaper.ImGui_ColorConvertRGBtoHSV(${1:r}, ${2:g}, ${3:b}, ${4:alphaIn})"},
		{"trigger": "reaper.ImGui_ColorEdit3", "contents": "reaper.ImGui_ColorEdit3(${1:ctx}, ${2:label}, ${3:col_rgb}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_ColorEdit4", "contents": "reaper.ImGui_ColorEdit4(${1:ctx}, ${2:label}, ${3:col_rgba}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_ColorEditFlags__OptionsDefault", "contents": "reaper.ImGui_ColorEditFlags__OptionsDefault()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_AlphaBar", "contents": "reaper.ImGui_ColorEditFlags_AlphaBar()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_AlphaPreview", "contents": "reaper.ImGui_ColorEditFlags_AlphaPreview()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_AlphaPreviewHalf", "contents": "reaper.ImGui_ColorEditFlags_AlphaPreviewHalf()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_DisplayHex", "contents": "reaper.ImGui_ColorEditFlags_DisplayHex()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_DisplayHSV", "contents": "reaper.ImGui_ColorEditFlags_DisplayHSV()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_DisplayRGB", "contents": "reaper.ImGui_ColorEditFlags_DisplayRGB()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_Float", "contents": "reaper.ImGui_ColorEditFlags_Float()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_InputHSV", "contents": "reaper.ImGui_ColorEditFlags_InputHSV()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_InputRGB", "contents": "reaper.ImGui_ColorEditFlags_InputRGB()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoAlpha", "contents": "reaper.ImGui_ColorEditFlags_NoAlpha()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoBorder", "contents": "reaper.ImGui_ColorEditFlags_NoBorder()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoDragDrop", "contents": "reaper.ImGui_ColorEditFlags_NoDragDrop()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoInputs", "contents": "reaper.ImGui_ColorEditFlags_NoInputs()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoLabel", "contents": "reaper.ImGui_ColorEditFlags_NoLabel()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_None", "contents": "reaper.ImGui_ColorEditFlags_None()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoOptions", "contents": "reaper.ImGui_ColorEditFlags_NoOptions()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoPicker", "contents": "reaper.ImGui_ColorEditFlags_NoPicker()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoSidePreview", "contents": "reaper.ImGui_ColorEditFlags_NoSidePreview()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoSmallPreview", "contents": "reaper.ImGui_ColorEditFlags_NoSmallPreview()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_NoTooltip", "contents": "reaper.ImGui_ColorEditFlags_NoTooltip()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_PickerHueBar", "contents": "reaper.ImGui_ColorEditFlags_PickerHueBar()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_PickerHueWheel", "contents": "reaper.ImGui_ColorEditFlags_PickerHueWheel()"},
		{"trigger": "reaper.ImGui_ColorEditFlags_Uint8", "contents": "reaper.ImGui_ColorEditFlags_Uint8()"},
		{"trigger": "reaper.ImGui_ColorPicker3", "contents": "reaper.ImGui_ColorPicker3(${1:ctx}, ${2:label}, ${3:col_rgb}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_ColorPicker4", "contents": "reaper.ImGui_ColorPicker4(${1:ctx}, ${2:label}, ${3:col_rgba}, ${4:flagsIn}, ${5:ref_colIn})"},
		{"trigger": "reaper.ImGui_Combo", "contents": "reaper.ImGui_Combo(${1:ctx}, ${2:label}, ${3:current_item}, ${4:items}, ${5:popup_max_height_in_itemsIn})"},
		{"trigger": "reaper.ImGui_ComboFlags_HeightLarge", "contents": "reaper.ImGui_ComboFlags_HeightLarge()"},
		{"trigger": "reaper.ImGui_ComboFlags_HeightLargest", "contents": "reaper.ImGui_ComboFlags_HeightLargest()"},
		{"trigger": "reaper.ImGui_ComboFlags_HeightRegular", "contents": "reaper.ImGui_ComboFlags_HeightRegular()"},
		{"trigger": "reaper.ImGui_ComboFlags_HeightSmall", "contents": "reaper.ImGui_ComboFlags_HeightSmall()"},
		{"trigger": "reaper.ImGui_ComboFlags_NoArrowButton", "contents": "reaper.ImGui_ComboFlags_NoArrowButton()"},
		{"trigger": "reaper.ImGui_ComboFlags_None", "contents": "reaper.ImGui_ComboFlags_None()"},
		{"trigger": "reaper.ImGui_ComboFlags_NoPreview", "contents": "reaper.ImGui_ComboFlags_NoPreview()"},
		{"trigger": "reaper.ImGui_ComboFlags_PopupAlignLeft", "contents": "reaper.ImGui_ComboFlags_PopupAlignLeft()"},
		{"trigger": "reaper.ImGui_Cond_Always", "contents": "reaper.ImGui_Cond_Always()"},
		{"trigger": "reaper.ImGui_Cond_Appearing", "contents": "reaper.ImGui_Cond_Appearing()"},
		{"trigger": "reaper.ImGui_Cond_FirstUseEver", "contents": "reaper.ImGui_Cond_FirstUseEver()"},
		{"trigger": "reaper.ImGui_Cond_Once", "contents": "reaper.ImGui_Cond_Once()"},
		{"trigger": "reaper.ImGui_ConfigFlags_DockingEnable", "contents": "reaper.ImGui_ConfigFlags_DockingEnable()"},
		{"trigger": "reaper.ImGui_ConfigFlags_NavEnableKeyboard", "contents": "reaper.ImGui_ConfigFlags_NavEnableKeyboard()"},
		{"trigger": "reaper.ImGui_ConfigFlags_NavEnableSetMousePos", "contents": "reaper.ImGui_ConfigFlags_NavEnableSetMousePos()"},
		{"trigger": "reaper.ImGui_ConfigFlags_NoMouse", "contents": "reaper.ImGui_ConfigFlags_NoMouse()"},
		{"trigger": "reaper.ImGui_ConfigFlags_NoMouseCursorChange", "contents": "reaper.ImGui_ConfigFlags_NoMouseCursorChange()"},
		{"trigger": "reaper.ImGui_ConfigFlags_None", "contents": "reaper.ImGui_ConfigFlags_None()"},
		{"trigger": "reaper.ImGui_ConfigFlags_NoSavedSettings", "contents": "reaper.ImGui_ConfigFlags_NoSavedSettings()"},
		{"trigger": "reaper.ImGui_CreateContext", "contents": "reaper.ImGui_CreateContext(${1:label}, ${2:config_flagsIn})"},
		{"trigger": "reaper.ImGui_CreateFont", "contents": "reaper.ImGui_CreateFont(${1:family_or_file}, ${2:size}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_CreateListClipper", "contents": "reaper.ImGui_CreateListClipper(${1:ctx})"},
		{"trigger": "reaper.ImGui_DestroyContext", "contents": "reaper.ImGui_DestroyContext(${1:ctx})"},
		{"trigger": "reaper.ImGui_Dir_Down", "contents": "reaper.ImGui_Dir_Down()"},
		{"trigger": "reaper.ImGui_Dir_Left", "contents": "reaper.ImGui_Dir_Left()"},
		{"trigger": "reaper.ImGui_Dir_None", "contents": "reaper.ImGui_Dir_None()"},
		{"trigger": "reaper.ImGui_Dir_Right", "contents": "reaper.ImGui_Dir_Right()"},
		{"trigger": "reaper.ImGui_Dir_Up", "contents": "reaper.ImGui_Dir_Up()"},
		{"trigger": "reaper.ImGui_DragDouble", "contents": "reaper.ImGui_DragDouble(${1:ctx}, ${2:label}, ${3:v}, ${4:v_speedIn}, ${5:v_minIn}, ${6:v_maxIn}, ${7:formatIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_DragDouble2", "contents": "reaper.ImGui_DragDouble2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v_speedIn}, ${6:v_minIn}, ${7:v_maxIn}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_DragDouble3", "contents": "reaper.ImGui_DragDouble3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v_speedIn}, ${7:v_minIn}, ${8:v_maxIn}, ${9:formatIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_DragDouble4", "contents": "reaper.ImGui_DragDouble4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:v_speedIn}, ${8:v_minIn}, ${9:v_maxIn}, ${10:formatIn}, ${11:flagsIn})"},
		{"trigger": "reaper.ImGui_DragDoubleN", "contents": "reaper.ImGui_DragDoubleN(${1:ctx}, ${2:values}, ${3:speedIn}, ${4:minIn}, ${5:maxIn}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_DragDropFlags_AcceptBeforeDelivery", "contents": "reaper.ImGui_DragDropFlags_AcceptBeforeDelivery()"},
		{"trigger": "reaper.ImGui_DragDropFlags_AcceptNoDrawDefaultRect", "contents": "reaper.ImGui_DragDropFlags_AcceptNoDrawDefaultRect()"},
		{"trigger": "reaper.ImGui_DragDropFlags_AcceptNoPreviewTooltip", "contents": "reaper.ImGui_DragDropFlags_AcceptNoPreviewTooltip()"},
		{"trigger": "reaper.ImGui_DragDropFlags_AcceptPeekOnly", "contents": "reaper.ImGui_DragDropFlags_AcceptPeekOnly()"},
		{"trigger": "reaper.ImGui_DragDropFlags_None", "contents": "reaper.ImGui_DragDropFlags_None()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceAllowNullID", "contents": "reaper.ImGui_DragDropFlags_SourceAllowNullID()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceAutoExpirePayload", "contents": "reaper.ImGui_DragDropFlags_SourceAutoExpirePayload()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceExtern", "contents": "reaper.ImGui_DragDropFlags_SourceExtern()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceNoDisableHover", "contents": "reaper.ImGui_DragDropFlags_SourceNoDisableHover()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceNoHoldToOpenOthers", "contents": "reaper.ImGui_DragDropFlags_SourceNoHoldToOpenOthers()"},
		{"trigger": "reaper.ImGui_DragDropFlags_SourceNoPreviewTooltip", "contents": "reaper.ImGui_DragDropFlags_SourceNoPreviewTooltip()"},
		{"trigger": "reaper.ImGui_DragFloatRange2", "contents": "reaper.ImGui_DragFloatRange2(${1:ctx}, ${2:label}, ${3:v_current_min}, ${4:v_current_max}, ${5:v_speedIn}, ${6:v_minIn}, ${7:v_maxIn}, ${8:formatIn}, ${9:format_maxIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_DragInt", "contents": "reaper.ImGui_DragInt(${1:ctx}, ${2:label}, ${3:v}, ${4:v_speedIn}, ${5:v_minIn}, ${6:v_maxIn}, ${7:formatIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_DragInt2", "contents": "reaper.ImGui_DragInt2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v_speedIn}, ${6:v_minIn}, ${7:v_maxIn}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_DragInt3", "contents": "reaper.ImGui_DragInt3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v_speedIn}, ${7:v_minIn}, ${8:v_maxIn}, ${9:formatIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_DragInt4", "contents": "reaper.ImGui_DragInt4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:v_speedIn}, ${8:v_minIn}, ${9:v_maxIn}, ${10:formatIn}, ${11:flagsIn})"},
		{"trigger": "reaper.ImGui_DragIntRange2", "contents": "reaper.ImGui_DragIntRange2(${1:ctx}, ${2:label}, ${3:v_current_min}, ${4:v_current_max}, ${5:v_speedIn}, ${6:v_minIn}, ${7:v_maxIn}, ${8:formatIn}, ${9:format_maxIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_DrawFlags_Closed", "contents": "reaper.ImGui_DrawFlags_Closed()"},
		{"trigger": "reaper.ImGui_DrawFlags_None", "contents": "reaper.ImGui_DrawFlags_None()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersAll", "contents": "reaper.ImGui_DrawFlags_RoundCornersAll()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersBottom", "contents": "reaper.ImGui_DrawFlags_RoundCornersBottom()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersBottomLeft", "contents": "reaper.ImGui_DrawFlags_RoundCornersBottomLeft()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersBottomRight", "contents": "reaper.ImGui_DrawFlags_RoundCornersBottomRight()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersLeft", "contents": "reaper.ImGui_DrawFlags_RoundCornersLeft()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersNone", "contents": "reaper.ImGui_DrawFlags_RoundCornersNone()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersRight", "contents": "reaper.ImGui_DrawFlags_RoundCornersRight()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersTop", "contents": "reaper.ImGui_DrawFlags_RoundCornersTop()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersTopLeft", "contents": "reaper.ImGui_DrawFlags_RoundCornersTopLeft()"},
		{"trigger": "reaper.ImGui_DrawFlags_RoundCornersTopRight", "contents": "reaper.ImGui_DrawFlags_RoundCornersTopRight()"},
		{"trigger": "reaper.ImGui_DrawList_AddBezierCubic", "contents": "reaper.ImGui_DrawList_AddBezierCubic(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:p4_x}, ${9:p4_y}, ${10:col_rgba}, ${11:thickness}, ${12:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddBezierQuadratic", "contents": "reaper.ImGui_DrawList_AddBezierQuadratic(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:col_rgba}, ${9:thickness}, ${10:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddCircle", "contents": "reaper.ImGui_DrawList_AddCircle(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:col_rgba}, ${6:num_segmentsIn}, ${7:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddCircleFilled", "contents": "reaper.ImGui_DrawList_AddCircleFilled(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:col_rgba}, ${6:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddConvexPolyFilled", "contents": "reaper.ImGui_DrawList_AddConvexPolyFilled(${1:points}, ${2:num_points}, ${3:col_rgba})"},
		{"trigger": "reaper.ImGui_DrawList_AddLine", "contents": "reaper.ImGui_DrawList_AddLine(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:col_rgba}, ${7:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddNgon", "contents": "reaper.ImGui_DrawList_AddNgon(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:col_rgba}, ${6:num_segments}, ${7:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddNgonFilled", "contents": "reaper.ImGui_DrawList_AddNgonFilled(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:col_rgba}, ${6:num_segments})"},
		{"trigger": "reaper.ImGui_DrawList_AddPolyline", "contents": "reaper.ImGui_DrawList_AddPolyline(${1:points}, ${2:col_rgba}, ${3:flags}, ${4:thickness})"},
		{"trigger": "reaper.ImGui_DrawList_AddQuad", "contents": "reaper.ImGui_DrawList_AddQuad(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:p4_x}, ${9:p4_y}, ${10:col_rgba}, ${11:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddQuadFilled", "contents": "reaper.ImGui_DrawList_AddQuadFilled(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:p4_x}, ${9:p4_y}, ${10:col_rgba})"},
		{"trigger": "reaper.ImGui_DrawList_AddRect", "contents": "reaper.ImGui_DrawList_AddRect(${1:draw_list}, ${2:p_min_x}, ${3:p_min_y}, ${4:p_max_x}, ${5:p_max_y}, ${6:col_rgba}, ${7:roundingIn}, ${8:flagsIn}, ${9:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddRectFilled", "contents": "reaper.ImGui_DrawList_AddRectFilled(${1:draw_list}, ${2:p_min_x}, ${3:p_min_y}, ${4:p_max_x}, ${5:p_max_y}, ${6:col_rgba}, ${7:roundingIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddRectFilledMultiColor", "contents": "reaper.ImGui_DrawList_AddRectFilledMultiColor(${1:draw_list}, ${2:p_min_x}, ${3:p_min_y}, ${4:p_max_x}, ${5:p_max_y}, ${6:col_upr_left}, ${7:col_upr_right}, ${8:col_bot_right}, ${9:col_bot_left})"},
		{"trigger": "reaper.ImGui_DrawList_AddText", "contents": "reaper.ImGui_DrawList_AddText(${1:draw_list}, ${2:x}, ${3:y}, ${4:col_rgba}, ${5:text})"},
		{"trigger": "reaper.ImGui_DrawList_AddTextEx", "contents": "reaper.ImGui_DrawList_AddTextEx(${1:font}, ${2:font_size}, ${3:pos_x}, ${4:pos_y}, ${5:col_rgba}, ${6:text}, ${7:wrap_widthIn}, ${8:cpu_fine_clip_rect_xIn}, ${9:cpu_fine_clip_rect_yIn}, ${10:cpu_fine_clip_rect_wIn}, ${11:cpu_fine_clip_rect_hIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddTriangle", "contents": "reaper.ImGui_DrawList_AddTriangle(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:col_rgba}, ${9:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_AddTriangleFilled", "contents": "reaper.ImGui_DrawList_AddTriangleFilled(${1:draw_list}, ${2:p1_x}, ${3:p1_y}, ${4:p2_x}, ${5:p2_y}, ${6:p3_x}, ${7:p3_y}, ${8:col_rgba})"},
		{"trigger": "reaper.ImGui_DrawList_PathArcTo", "contents": "reaper.ImGui_DrawList_PathArcTo(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:a_min}, ${6:a_max}, ${7:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_PathArcToFast", "contents": "reaper.ImGui_DrawList_PathArcToFast(${1:draw_list}, ${2:center_x}, ${3:center_y}, ${4:radius}, ${5:a_min_of_12}, ${6:a_max_of_12})"},
		{"trigger": "reaper.ImGui_DrawList_PathBezierCubicCurveTo", "contents": "reaper.ImGui_DrawList_PathBezierCubicCurveTo(${1:draw_list}, ${2:p2_x}, ${3:p2_y}, ${4:p3_x}, ${5:p3_y}, ${6:p4_x}, ${7:p4_y}, ${8:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_PathBezierQuadraticCurveTo", "contents": "reaper.ImGui_DrawList_PathBezierQuadraticCurveTo(${1:draw_list}, ${2:p2_x}, ${3:p2_y}, ${4:p3_x}, ${5:p3_y}, ${6:num_segmentsIn})"},
		{"trigger": "reaper.ImGui_DrawList_PathClear", "contents": "reaper.ImGui_DrawList_PathClear(${1:draw_list})"},
		{"trigger": "reaper.ImGui_DrawList_PathFillConvex", "contents": "reaper.ImGui_DrawList_PathFillConvex(${1:draw_list}, ${2:col_rgba})"},
		{"trigger": "reaper.ImGui_DrawList_PathLineTo", "contents": "reaper.ImGui_DrawList_PathLineTo(${1:draw_list}, ${2:pos_x}, ${3:pos_y})"},
		{"trigger": "reaper.ImGui_DrawList_PathRect", "contents": "reaper.ImGui_DrawList_PathRect(${1:draw_list}, ${2:rect_min_x}, ${3:rect_min_y}, ${4:rect_max_x}, ${5:rect_max_y}, ${6:roundingIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_DrawList_PathStroke", "contents": "reaper.ImGui_DrawList_PathStroke(${1:draw_list}, ${2:col_rgba}, ${3:flagsIn}, ${4:thicknessIn})"},
		{"trigger": "reaper.ImGui_DrawList_PopClipRect", "contents": "reaper.ImGui_DrawList_PopClipRect(${1:draw_list})"},
		{"trigger": "reaper.ImGui_DrawList_PushClipRect", "contents": "reaper.ImGui_DrawList_PushClipRect(${1:draw_list}, ${2:clip_rect_min_x}, ${3:clip_rect_min_y}, ${4:clip_rect_max_x}, ${5:clip_rect_max_y}, ${6:intersect_with_current_clip_rectIn})"},
		{"trigger": "reaper.ImGui_DrawList_PushClipRectFullScreen", "contents": "reaper.ImGui_DrawList_PushClipRectFullScreen(${1:draw_list})"},
		{"trigger": "reaper.ImGui_Dummy", "contents": "reaper.ImGui_Dummy(${1:ctx}, ${2:size_w}, ${3:size_h})"},
		{"trigger": "reaper.ImGui_End", "contents": "reaper.ImGui_End(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndChild", "contents": "reaper.ImGui_EndChild(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndChildFrame", "contents": "reaper.ImGui_EndChildFrame(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndCombo", "contents": "reaper.ImGui_EndCombo(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndDragDropSource", "contents": "reaper.ImGui_EndDragDropSource(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndDragDropTarget", "contents": "reaper.ImGui_EndDragDropTarget(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndGroup", "contents": "reaper.ImGui_EndGroup(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndListBox", "contents": "reaper.ImGui_EndListBox(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndMenu", "contents": "reaper.ImGui_EndMenu(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndMenuBar", "contents": "reaper.ImGui_EndMenuBar(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndPopup", "contents": "reaper.ImGui_EndPopup(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndTabBar", "contents": "reaper.ImGui_EndTabBar(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndTabItem", "contents": "reaper.ImGui_EndTabItem(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndTable", "contents": "reaper.ImGui_EndTable(${1:ctx})"},
		{"trigger": "reaper.ImGui_EndTooltip", "contents": "reaper.ImGui_EndTooltip(${1:ctx})"},
		{"trigger": "reaper.ImGui_FocusedFlags_AnyWindow", "contents": "reaper.ImGui_FocusedFlags_AnyWindow()"},
		{"trigger": "reaper.ImGui_FocusedFlags_ChildWindows", "contents": "reaper.ImGui_FocusedFlags_ChildWindows()"},
		{"trigger": "reaper.ImGui_FocusedFlags_None", "contents": "reaper.ImGui_FocusedFlags_None()"},
		{"trigger": "reaper.ImGui_FocusedFlags_RootAndChildWindows", "contents": "reaper.ImGui_FocusedFlags_RootAndChildWindows()"},
		{"trigger": "reaper.ImGui_FocusedFlags_RootWindow", "contents": "reaper.ImGui_FocusedFlags_RootWindow()"},
		{"trigger": "reaper.ImGui_FontFlags_Bold", "contents": "reaper.ImGui_FontFlags_Bold()"},
		{"trigger": "reaper.ImGui_FontFlags_Italic", "contents": "reaper.ImGui_FontFlags_Italic()"},
		{"trigger": "reaper.ImGui_FontFlags_None", "contents": "reaper.ImGui_FontFlags_None()"},
		{"trigger": "reaper.ImGui_GetBackgroundDrawList", "contents": "reaper.ImGui_GetBackgroundDrawList(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetClipboardText", "contents": "reaper.ImGui_GetClipboardText(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetColor", "contents": "reaper.ImGui_GetColor(${1:ctx}, ${2:idx}, ${3:alpha_mulIn})"},
		{"trigger": "reaper.ImGui_GetColorEx", "contents": "reaper.ImGui_GetColorEx(${1:ctx}, ${2:col_rgba})"},
		{"trigger": "reaper.ImGui_GetConfigFlags", "contents": "reaper.ImGui_GetConfigFlags(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetContentRegionAvail", "contents": "reaper.ImGui_GetContentRegionAvail(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetContentRegionMax", "contents": "reaper.ImGui_GetContentRegionMax(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetCursorPos", "contents": "reaper.ImGui_GetCursorPos(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetCursorPosX", "contents": "reaper.ImGui_GetCursorPosX(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetCursorPosY", "contents": "reaper.ImGui_GetCursorPosY(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetCursorScreenPos", "contents": "reaper.ImGui_GetCursorScreenPos(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetCursorStartPos", "contents": "reaper.ImGui_GetCursorStartPos(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetDeltaTime", "contents": "reaper.ImGui_GetDeltaTime(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetDragDropPayload", "contents": "reaper.ImGui_GetDragDropPayload(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetDragDropPayloadFile", "contents": "reaper.ImGui_GetDragDropPayloadFile(${1:ctx}, ${2:index})"},
		{"trigger": "reaper.ImGui_GetFont", "contents": "reaper.ImGui_GetFont(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetFontSize", "contents": "reaper.ImGui_GetFontSize(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetForegroundDrawList", "contents": "reaper.ImGui_GetForegroundDrawList(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetFrameCount", "contents": "reaper.ImGui_GetFrameCount(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetFrameHeight", "contents": "reaper.ImGui_GetFrameHeight(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetFrameHeightWithSpacing", "contents": "reaper.ImGui_GetFrameHeightWithSpacing(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetInputQueueCharacter", "contents": "reaper.ImGui_GetInputQueueCharacter(${1:ctx}, ${2:idx})"},
		{"trigger": "reaper.ImGui_GetItemRectMax", "contents": "reaper.ImGui_GetItemRectMax(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetItemRectMin", "contents": "reaper.ImGui_GetItemRectMin(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetItemRectSize", "contents": "reaper.ImGui_GetItemRectSize(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetKeyDownDuration", "contents": "reaper.ImGui_GetKeyDownDuration(${1:ctx}, ${2:key_code})"},
		{"trigger": "reaper.ImGui_GetKeyMods", "contents": "reaper.ImGui_GetKeyMods(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetKeyPressedAmount", "contents": "reaper.ImGui_GetKeyPressedAmount(${1:ctx}, ${2:key_index}, ${3:repeat_delay}, ${4:rate})"},
		{"trigger": "reaper.ImGui_GetMainViewport", "contents": "reaper.ImGui_GetMainViewport(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetMouseClickedPos", "contents": "reaper.ImGui_GetMouseClickedPos(${1:ctx}, ${2:button})"},
		{"trigger": "reaper.ImGui_GetMouseCursor", "contents": "reaper.ImGui_GetMouseCursor(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetMouseDelta", "contents": "reaper.ImGui_GetMouseDelta(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetMouseDownDuration", "contents": "reaper.ImGui_GetMouseDownDuration(${1:ctx}, ${2:button})"},
		{"trigger": "reaper.ImGui_GetMouseDragDelta", "contents": "reaper.ImGui_GetMouseDragDelta(${1:ctx}, ${2:x}, ${3:y}, ${4:buttonIn}, ${5:lock_thresholdIn})"},
		{"trigger": "reaper.ImGui_GetMousePos", "contents": "reaper.ImGui_GetMousePos(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetMousePosOnOpeningCurrentPopup", "contents": "reaper.ImGui_GetMousePosOnOpeningCurrentPopup(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetMouseWheel", "contents": "reaper.ImGui_GetMouseWheel(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetScrollMaxX", "contents": "reaper.ImGui_GetScrollMaxX(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetScrollMaxY", "contents": "reaper.ImGui_GetScrollMaxY(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetScrollX", "contents": "reaper.ImGui_GetScrollX(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetScrollY", "contents": "reaper.ImGui_GetScrollY(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetStyleColor", "contents": "reaper.ImGui_GetStyleColor(${1:ctx}, ${2:idx})"},
		{"trigger": "reaper.ImGui_GetStyleColorName", "contents": "reaper.ImGui_GetStyleColorName(${1:idx})"},
		{"trigger": "reaper.ImGui_GetStyleVar", "contents": "reaper.ImGui_GetStyleVar(${1:ctx}, ${2:var_idx})"},
		{"trigger": "reaper.ImGui_GetTextLineHeight", "contents": "reaper.ImGui_GetTextLineHeight(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetTime", "contents": "reaper.ImGui_GetTime(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetTreeNodeToLabelSpacing", "contents": "reaper.ImGui_GetTreeNodeToLabelSpacing(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetVersion", "contents": "reaper.ImGui_GetVersion()"},
		{"trigger": "reaper.ImGui_GetWindowContentRegionMax", "contents": "reaper.ImGui_GetWindowContentRegionMax(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowContentRegionMin", "contents": "reaper.ImGui_GetWindowContentRegionMin(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowContentRegionWidth", "contents": "reaper.ImGui_GetWindowContentRegionWidth(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowDockID", "contents": "reaper.ImGui_GetWindowDockID(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowDrawList", "contents": "reaper.ImGui_GetWindowDrawList(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowHeight", "contents": "reaper.ImGui_GetWindowHeight(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowPos", "contents": "reaper.ImGui_GetWindowPos(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowSize", "contents": "reaper.ImGui_GetWindowSize(${1:ctx})"},
		{"trigger": "reaper.ImGui_GetWindowWidth", "contents": "reaper.ImGui_GetWindowWidth(${1:ctx})"},
		{"trigger": "reaper.ImGui_HoveredFlags_AllowWhenBlockedByActiveItem", "contents": "reaper.ImGui_HoveredFlags_AllowWhenBlockedByActiveItem()"},
		{"trigger": "reaper.ImGui_HoveredFlags_AllowWhenBlockedByPopup", "contents": "reaper.ImGui_HoveredFlags_AllowWhenBlockedByPopup()"},
		{"trigger": "reaper.ImGui_HoveredFlags_AllowWhenDisabled", "contents": "reaper.ImGui_HoveredFlags_AllowWhenDisabled()"},
		{"trigger": "reaper.ImGui_HoveredFlags_AllowWhenOverlapped", "contents": "reaper.ImGui_HoveredFlags_AllowWhenOverlapped()"},
		{"trigger": "reaper.ImGui_HoveredFlags_AnyWindow", "contents": "reaper.ImGui_HoveredFlags_AnyWindow()"},
		{"trigger": "reaper.ImGui_HoveredFlags_ChildWindows", "contents": "reaper.ImGui_HoveredFlags_ChildWindows()"},
		{"trigger": "reaper.ImGui_HoveredFlags_None", "contents": "reaper.ImGui_HoveredFlags_None()"},
		{"trigger": "reaper.ImGui_HoveredFlags_RectOnly", "contents": "reaper.ImGui_HoveredFlags_RectOnly()"},
		{"trigger": "reaper.ImGui_HoveredFlags_RootAndChildWindows", "contents": "reaper.ImGui_HoveredFlags_RootAndChildWindows()"},
		{"trigger": "reaper.ImGui_HoveredFlags_RootWindow", "contents": "reaper.ImGui_HoveredFlags_RootWindow()"},
		{"trigger": "reaper.ImGui_Indent", "contents": "reaper.ImGui_Indent(${1:ctx}, ${2:indent_wIn})"},
		{"trigger": "reaper.ImGui_InputDouble", "contents": "reaper.ImGui_InputDouble(${1:ctx}, ${2:label}, ${3:v}, ${4:stepIn}, ${5:step_fastIn}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_InputDouble2", "contents": "reaper.ImGui_InputDouble2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:formatIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_InputDouble3", "contents": "reaper.ImGui_InputDouble3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_InputDouble4", "contents": "reaper.ImGui_InputDouble4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:formatIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_InputDoubleN", "contents": "reaper.ImGui_InputDoubleN(${1:ctx}, ${2:values}, ${3:stepIn}, ${4:step_fastIn}, ${5:formatIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_InputInt", "contents": "reaper.ImGui_InputInt(${1:ctx}, ${2:label}, ${3:v}, ${4:stepIn}, ${5:step_fastIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_InputInt2", "contents": "reaper.ImGui_InputInt2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:flagsIn})"},
		{"trigger": "reaper.ImGui_InputInt3", "contents": "reaper.ImGui_InputInt3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_InputInt4", "contents": "reaper.ImGui_InputInt4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_InputText", "contents": "reaper.ImGui_InputText(${1:ctx}, ${2:label}, ${3:buf}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_InputTextFlags_AllowTabInput", "contents": "reaper.ImGui_InputTextFlags_AllowTabInput()"},
		{"trigger": "reaper.ImGui_InputTextFlags_AlwaysOverwrite", "contents": "reaper.ImGui_InputTextFlags_AlwaysOverwrite()"},
		{"trigger": "reaper.ImGui_InputTextFlags_AutoSelectAll", "contents": "reaper.ImGui_InputTextFlags_AutoSelectAll()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CharsDecimal", "contents": "reaper.ImGui_InputTextFlags_CharsDecimal()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CharsHexadecimal", "contents": "reaper.ImGui_InputTextFlags_CharsHexadecimal()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CharsNoBlank", "contents": "reaper.ImGui_InputTextFlags_CharsNoBlank()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CharsScientific", "contents": "reaper.ImGui_InputTextFlags_CharsScientific()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CharsUppercase", "contents": "reaper.ImGui_InputTextFlags_CharsUppercase()"},
		{"trigger": "reaper.ImGui_InputTextFlags_CtrlEnterForNewLine", "contents": "reaper.ImGui_InputTextFlags_CtrlEnterForNewLine()"},
		{"trigger": "reaper.ImGui_InputTextFlags_EnterReturnsTrue", "contents": "reaper.ImGui_InputTextFlags_EnterReturnsTrue()"},
		{"trigger": "reaper.ImGui_InputTextFlags_NoHorizontalScroll", "contents": "reaper.ImGui_InputTextFlags_NoHorizontalScroll()"},
		{"trigger": "reaper.ImGui_InputTextFlags_None", "contents": "reaper.ImGui_InputTextFlags_None()"},
		{"trigger": "reaper.ImGui_InputTextFlags_NoUndoRedo", "contents": "reaper.ImGui_InputTextFlags_NoUndoRedo()"},
		{"trigger": "reaper.ImGui_InputTextFlags_Password", "contents": "reaper.ImGui_InputTextFlags_Password()"},
		{"trigger": "reaper.ImGui_InputTextFlags_ReadOnly", "contents": "reaper.ImGui_InputTextFlags_ReadOnly()"},
		{"trigger": "reaper.ImGui_InputTextMultiline", "contents": "reaper.ImGui_InputTextMultiline(${1:ctx}, ${2:label}, ${3:buf}, ${4:size_wIn}, ${5:size_hIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_InputTextWithHint", "contents": "reaper.ImGui_InputTextWithHint(${1:ctx}, ${2:label}, ${3:hint}, ${4:buf}, ${5:flagsIn})"},
		{"trigger": "reaper.ImGui_InvisibleButton", "contents": "reaper.ImGui_InvisibleButton(${1:ctx}, ${2:str_id}, ${3:size_w}, ${4:size_h}, ${5:flagsIn})"},
		{"trigger": "reaper.ImGui_IsAnyItemActive", "contents": "reaper.ImGui_IsAnyItemActive(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsAnyItemFocused", "contents": "reaper.ImGui_IsAnyItemFocused(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsAnyItemHovered", "contents": "reaper.ImGui_IsAnyItemHovered(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsAnyMouseDown", "contents": "reaper.ImGui_IsAnyMouseDown(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemActivated", "contents": "reaper.ImGui_IsItemActivated(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemActive", "contents": "reaper.ImGui_IsItemActive(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemClicked", "contents": "reaper.ImGui_IsItemClicked(${1:ctx}, ${2:mouse_buttonIn})"},
		{"trigger": "reaper.ImGui_IsItemDeactivated", "contents": "reaper.ImGui_IsItemDeactivated(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemDeactivatedAfterEdit", "contents": "reaper.ImGui_IsItemDeactivatedAfterEdit(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemEdited", "contents": "reaper.ImGui_IsItemEdited(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemFocused", "contents": "reaper.ImGui_IsItemFocused(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemHovered", "contents": "reaper.ImGui_IsItemHovered(${1:ctx}, ${2:flagsIn})"},
		{"trigger": "reaper.ImGui_IsItemToggledOpen", "contents": "reaper.ImGui_IsItemToggledOpen(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsItemVisible", "contents": "reaper.ImGui_IsItemVisible(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsKeyDown", "contents": "reaper.ImGui_IsKeyDown(${1:ctx}, ${2:key_code})"},
		{"trigger": "reaper.ImGui_IsKeyPressed", "contents": "reaper.ImGui_IsKeyPressed(${1:ctx}, ${2:key_code}, ${3:repeatIn})"},
		{"trigger": "reaper.ImGui_IsKeyReleased", "contents": "reaper.ImGui_IsKeyReleased(${1:ctx}, ${2:key_code})"},
		{"trigger": "reaper.ImGui_IsMouseClicked", "contents": "reaper.ImGui_IsMouseClicked(${1:ctx}, ${2:button}, ${3:repeatIn})"},
		{"trigger": "reaper.ImGui_IsMouseDoubleClicked", "contents": "reaper.ImGui_IsMouseDoubleClicked(${1:ctx}, ${2:button})"},
		{"trigger": "reaper.ImGui_IsMouseDown", "contents": "reaper.ImGui_IsMouseDown(${1:ctx}, ${2:button})"},
		{"trigger": "reaper.ImGui_IsMouseDragging", "contents": "reaper.ImGui_IsMouseDragging(${1:ctx}, ${2:button}, ${3:lock_thresholdIn})"},
		{"trigger": "reaper.ImGui_IsMouseHoveringRect", "contents": "reaper.ImGui_IsMouseHoveringRect(${1:ctx}, ${2:r_min_x}, ${3:r_min_y}, ${4:r_max_x}, ${5:r_max_y}, ${6:clipIn})"},
		{"trigger": "reaper.ImGui_IsMousePosValid", "contents": "reaper.ImGui_IsMousePosValid(${1:ctx}, ${2:mouse_pos_xIn}, ${3:mouse_pos_yIn})"},
		{"trigger": "reaper.ImGui_IsMouseReleased", "contents": "reaper.ImGui_IsMouseReleased(${1:ctx}, ${2:button})"},
		{"trigger": "reaper.ImGui_IsPopupOpen", "contents": "reaper.ImGui_IsPopupOpen(${1:ctx}, ${2:str_id}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_IsRectVisible", "contents": "reaper.ImGui_IsRectVisible(${1:ctx}, ${2:size_w}, ${3:size_h})"},
		{"trigger": "reaper.ImGui_IsRectVisibleEx", "contents": "reaper.ImGui_IsRectVisibleEx(${1:ctx}, ${2:rect_min_x}, ${3:rect_min_y}, ${4:rect_max_x}, ${5:rect_max_y})"},
		{"trigger": "reaper.ImGui_IsWindowAppearing", "contents": "reaper.ImGui_IsWindowAppearing(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsWindowCollapsed", "contents": "reaper.ImGui_IsWindowCollapsed(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsWindowDocked", "contents": "reaper.ImGui_IsWindowDocked(${1:ctx})"},
		{"trigger": "reaper.ImGui_IsWindowFocused", "contents": "reaper.ImGui_IsWindowFocused(${1:ctx}, ${2:flagsIn})"},
		{"trigger": "reaper.ImGui_IsWindowHovered", "contents": "reaper.ImGui_IsWindowHovered(${1:ctx}, ${2:flagsIn})"},
		{"trigger": "reaper.ImGui_KeyModFlags_Alt", "contents": "reaper.ImGui_KeyModFlags_Alt()"},
		{"trigger": "reaper.ImGui_KeyModFlags_Ctrl", "contents": "reaper.ImGui_KeyModFlags_Ctrl()"},
		{"trigger": "reaper.ImGui_KeyModFlags_None", "contents": "reaper.ImGui_KeyModFlags_None()"},
		{"trigger": "reaper.ImGui_KeyModFlags_Shift", "contents": "reaper.ImGui_KeyModFlags_Shift()"},
		{"trigger": "reaper.ImGui_KeyModFlags_Super", "contents": "reaper.ImGui_KeyModFlags_Super()"},
		{"trigger": "reaper.ImGui_LabelText", "contents": "reaper.ImGui_LabelText(${1:ctx}, ${2:label}, ${3:text})"},
		{"trigger": "reaper.ImGui_ListBox", "contents": "reaper.ImGui_ListBox(${1:ctx}, ${2:label}, ${3:current_item}, ${4:items}, ${5:height_in_itemsIn})"},
		{"trigger": "reaper.ImGui_ListClipper_Begin", "contents": "reaper.ImGui_ListClipper_Begin(${1:clipper}, ${2:items_count}, ${3:items_heightIn})"},
		{"trigger": "reaper.ImGui_ListClipper_End", "contents": "reaper.ImGui_ListClipper_End(${1:clipper})"},
		{"trigger": "reaper.ImGui_ListClipper_GetDisplayRange", "contents": "reaper.ImGui_ListClipper_GetDisplayRange(${1:clipper})"},
		{"trigger": "reaper.ImGui_ListClipper_Step", "contents": "reaper.ImGui_ListClipper_Step(${1:clipper})"},
		{"trigger": "reaper.ImGui_LogFinish", "contents": "reaper.ImGui_LogFinish(${1:ctx})"},
		{"trigger": "reaper.ImGui_LogText", "contents": "reaper.ImGui_LogText(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_LogToClipboard", "contents": "reaper.ImGui_LogToClipboard(${1:ctx}, ${2:auto_open_depthIn})"},
		{"trigger": "reaper.ImGui_LogToFile", "contents": "reaper.ImGui_LogToFile(${1:ctx}, ${2:auto_open_depthIn}, ${3:filenameIn})"},
		{"trigger": "reaper.ImGui_LogToTTY", "contents": "reaper.ImGui_LogToTTY(${1:ctx}, ${2:auto_open_depthIn})"},
		{"trigger": "reaper.ImGui_MenuItem", "contents": "reaper.ImGui_MenuItem(${1:ctx}, ${2:label}, ${3:shortcutIn}, ${4:p_selected}, ${5:enabledIn})"},
		{"trigger": "reaper.ImGui_MouseButton_Left", "contents": "reaper.ImGui_MouseButton_Left()"},
		{"trigger": "reaper.ImGui_MouseButton_Middle", "contents": "reaper.ImGui_MouseButton_Middle()"},
		{"trigger": "reaper.ImGui_MouseButton_Right", "contents": "reaper.ImGui_MouseButton_Right()"},
		{"trigger": "reaper.ImGui_MouseCursor_Arrow", "contents": "reaper.ImGui_MouseCursor_Arrow()"},
		{"trigger": "reaper.ImGui_MouseCursor_Hand", "contents": "reaper.ImGui_MouseCursor_Hand()"},
		{"trigger": "reaper.ImGui_MouseCursor_NotAllowed", "contents": "reaper.ImGui_MouseCursor_NotAllowed()"},
		{"trigger": "reaper.ImGui_MouseCursor_ResizeAll", "contents": "reaper.ImGui_MouseCursor_ResizeAll()"},
		{"trigger": "reaper.ImGui_MouseCursor_ResizeEW", "contents": "reaper.ImGui_MouseCursor_ResizeEW()"},
		{"trigger": "reaper.ImGui_MouseCursor_ResizeNESW", "contents": "reaper.ImGui_MouseCursor_ResizeNESW()"},
		{"trigger": "reaper.ImGui_MouseCursor_ResizeNS", "contents": "reaper.ImGui_MouseCursor_ResizeNS()"},
		{"trigger": "reaper.ImGui_MouseCursor_ResizeNWSE", "contents": "reaper.ImGui_MouseCursor_ResizeNWSE()"},
		{"trigger": "reaper.ImGui_MouseCursor_TextInput", "contents": "reaper.ImGui_MouseCursor_TextInput()"},
		{"trigger": "reaper.ImGui_NewLine", "contents": "reaper.ImGui_NewLine(${1:ctx})"},
		{"trigger": "reaper.ImGui_NumericLimits_Float", "contents": "reaper.ImGui_NumericLimits_Float()"},
		{"trigger": "reaper.ImGui_OpenPopup", "contents": "reaper.ImGui_OpenPopup(${1:ctx}, ${2:str_id}, ${3:popup_flagsIn})"},
		{"trigger": "reaper.ImGui_OpenPopupOnItemClick", "contents": "reaper.ImGui_OpenPopupOnItemClick(${1:ctx}, ${2:str_idIn}, ${3:popup_flagsIn})"},
		{"trigger": "reaper.ImGui_PlotHistogram", "contents": "reaper.ImGui_PlotHistogram(${1:ctx}, ${2:values}, ${3:values_offsetIn}, ${4:overlay_textIn}, ${5:scale_minIn}, ${6:scale_maxIn}, ${7:graph_size_wIn}, ${8:graph_size_hIn})"},
		{"trigger": "reaper.ImGui_PlotLines", "contents": "reaper.ImGui_PlotLines(${1:ctx}, ${2:values}, ${3:values_offsetIn}, ${4:overlay_textIn}, ${5:scale_minIn}, ${6:scale_maxIn}, ${7:graph_size_wIn}, ${8:graph_size_hIn})"},
		{"trigger": "reaper.ImGui_PointConvertNative", "contents": "reaper.ImGui_PointConvertNative(${1:ctx}, ${2:x}, ${3:y}, ${4:to_nativeIn})"},
		{"trigger": "reaper.ImGui_PopAllowKeyboardFocus", "contents": "reaper.ImGui_PopAllowKeyboardFocus(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopButtonRepeat", "contents": "reaper.ImGui_PopButtonRepeat(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopClipRect", "contents": "reaper.ImGui_PopClipRect(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopFont", "contents": "reaper.ImGui_PopFont(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopID", "contents": "reaper.ImGui_PopID(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopItemWidth", "contents": "reaper.ImGui_PopItemWidth(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopStyleColor", "contents": "reaper.ImGui_PopStyleColor(${1:ctx}, ${2:countIn})"},
		{"trigger": "reaper.ImGui_PopStyleVar", "contents": "reaper.ImGui_PopStyleVar(${1:ctx}, ${2:countIn})"},
		{"trigger": "reaper.ImGui_PopTextWrapPos", "contents": "reaper.ImGui_PopTextWrapPos(${1:ctx})"},
		{"trigger": "reaper.ImGui_PopupFlags_AnyPopup", "contents": "reaper.ImGui_PopupFlags_AnyPopup()"},
		{"trigger": "reaper.ImGui_PopupFlags_AnyPopupId", "contents": "reaper.ImGui_PopupFlags_AnyPopupId()"},
		{"trigger": "reaper.ImGui_PopupFlags_AnyPopupLevel", "contents": "reaper.ImGui_PopupFlags_AnyPopupLevel()"},
		{"trigger": "reaper.ImGui_PopupFlags_MouseButtonLeft", "contents": "reaper.ImGui_PopupFlags_MouseButtonLeft()"},
		{"trigger": "reaper.ImGui_PopupFlags_MouseButtonMiddle", "contents": "reaper.ImGui_PopupFlags_MouseButtonMiddle()"},
		{"trigger": "reaper.ImGui_PopupFlags_MouseButtonRight", "contents": "reaper.ImGui_PopupFlags_MouseButtonRight()"},
		{"trigger": "reaper.ImGui_PopupFlags_None", "contents": "reaper.ImGui_PopupFlags_None()"},
		{"trigger": "reaper.ImGui_PopupFlags_NoOpenOverExistingPopup", "contents": "reaper.ImGui_PopupFlags_NoOpenOverExistingPopup()"},
		{"trigger": "reaper.ImGui_PopupFlags_NoOpenOverItems", "contents": "reaper.ImGui_PopupFlags_NoOpenOverItems()"},
		{"trigger": "reaper.ImGui_ProgressBar", "contents": "reaper.ImGui_ProgressBar(${1:ctx}, ${2:fraction}, ${3:size_arg_wIn}, ${4:size_arg_hIn}, ${5:overlayIn})"},
		{"trigger": "reaper.ImGui_PushAllowKeyboardFocus", "contents": "reaper.ImGui_PushAllowKeyboardFocus(${1:ctx}, ${2:allow_keyboard_focus})"},
		{"trigger": "reaper.ImGui_PushButtonRepeat", "contents": "reaper.ImGui_PushButtonRepeat(${1:ctx}, ${2:repeat})"},
		{"trigger": "reaper.ImGui_PushClipRect", "contents": "reaper.ImGui_PushClipRect(${1:ctx}, ${2:clip_rect_min_x}, ${3:clip_rect_min_y}, ${4:clip_rect_max_x}, ${5:clip_rect_max_y}, ${6:intersect_with_current_clip_rect})"},
		{"trigger": "reaper.ImGui_PushFont", "contents": "reaper.ImGui_PushFont(${1:font})"},
		{"trigger": "reaper.ImGui_PushID", "contents": "reaper.ImGui_PushID(${1:ctx}, ${2:str_id})"},
		{"trigger": "reaper.ImGui_PushItemWidth", "contents": "reaper.ImGui_PushItemWidth(${1:ctx}, ${2:item_width})"},
		{"trigger": "reaper.ImGui_PushStyleColor", "contents": "reaper.ImGui_PushStyleColor(${1:ctx}, ${2:idx}, ${3:col_rgba})"},
		{"trigger": "reaper.ImGui_PushStyleVar", "contents": "reaper.ImGui_PushStyleVar(${1:ctx}, ${2:var_idx}, ${3:val1}, ${4:val2In})"},
		{"trigger": "reaper.ImGui_PushTextWrapPos", "contents": "reaper.ImGui_PushTextWrapPos(${1:ctx}, ${2:wrap_local_pos_xIn})"},
		{"trigger": "reaper.ImGui_RadioButton", "contents": "reaper.ImGui_RadioButton(${1:ctx}, ${2:label}, ${3:active})"},
		{"trigger": "reaper.ImGui_RadioButtonEx", "contents": "reaper.ImGui_RadioButtonEx(${1:ctx}, ${2:label}, ${3:v}, ${4:v_button})"},
		{"trigger": "reaper.ImGui_ResetMouseDragDelta", "contents": "reaper.ImGui_ResetMouseDragDelta(${1:ctx}, ${2:buttonIn})"},
		{"trigger": "reaper.ImGui_SameLine", "contents": "reaper.ImGui_SameLine(${1:ctx}, ${2:offset_from_start_xIn}, ${3:spacingIn})"},
		{"trigger": "reaper.ImGui_Selectable", "contents": "reaper.ImGui_Selectable(${1:ctx}, ${2:label}, ${3:p_selected}, ${4:flagsIn}, ${5:size_wIn}, ${6:size_hIn})"},
		{"trigger": "reaper.ImGui_SelectableFlags_AllowDoubleClick", "contents": "reaper.ImGui_SelectableFlags_AllowDoubleClick()"},
		{"trigger": "reaper.ImGui_SelectableFlags_AllowItemOverlap", "contents": "reaper.ImGui_SelectableFlags_AllowItemOverlap()"},
		{"trigger": "reaper.ImGui_SelectableFlags_Disabled", "contents": "reaper.ImGui_SelectableFlags_Disabled()"},
		{"trigger": "reaper.ImGui_SelectableFlags_DontClosePopups", "contents": "reaper.ImGui_SelectableFlags_DontClosePopups()"},
		{"trigger": "reaper.ImGui_SelectableFlags_None", "contents": "reaper.ImGui_SelectableFlags_None()"},
		{"trigger": "reaper.ImGui_SelectableFlags_SpanAllColumns", "contents": "reaper.ImGui_SelectableFlags_SpanAllColumns()"},
		{"trigger": "reaper.ImGui_Separator", "contents": "reaper.ImGui_Separator(${1:ctx})"},
		{"trigger": "reaper.ImGui_SetClipboardText", "contents": "reaper.ImGui_SetClipboardText(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_SetColorEditOptions", "contents": "reaper.ImGui_SetColorEditOptions(${1:ctx}, ${2:flags})"},
		{"trigger": "reaper.ImGui_SetConfigFlags", "contents": "reaper.ImGui_SetConfigFlags(${1:ctx}, ${2:flags})"},
		{"trigger": "reaper.ImGui_SetCursorPos", "contents": "reaper.ImGui_SetCursorPos(${1:ctx}, ${2:local_pos_x}, ${3:local_pos_y})"},
		{"trigger": "reaper.ImGui_SetCursorPosX", "contents": "reaper.ImGui_SetCursorPosX(${1:ctx}, ${2:local_x})"},
		{"trigger": "reaper.ImGui_SetCursorPosY", "contents": "reaper.ImGui_SetCursorPosY(${1:ctx}, ${2:local_y})"},
		{"trigger": "reaper.ImGui_SetCursorScreenPos", "contents": "reaper.ImGui_SetCursorScreenPos(${1:ctx}, ${2:pos_x}, ${3:pos_y})"},
		{"trigger": "reaper.ImGui_SetDragDropPayload", "contents": "reaper.ImGui_SetDragDropPayload(${1:ctx}, ${2:type}, ${3:data}, ${4:condIn})"},
		{"trigger": "reaper.ImGui_SetItemAllowOverlap", "contents": "reaper.ImGui_SetItemAllowOverlap(${1:ctx})"},
		{"trigger": "reaper.ImGui_SetItemDefaultFocus", "contents": "reaper.ImGui_SetItemDefaultFocus(${1:ctx})"},
		{"trigger": "reaper.ImGui_SetKeyboardFocusHere", "contents": "reaper.ImGui_SetKeyboardFocusHere(${1:ctx}, ${2:offsetIn})"},
		{"trigger": "reaper.ImGui_SetMouseCursor", "contents": "reaper.ImGui_SetMouseCursor(${1:ctx}, ${2:cursor_type})"},
		{"trigger": "reaper.ImGui_SetNextItemOpen", "contents": "reaper.ImGui_SetNextItemOpen(${1:ctx}, ${2:is_open}, ${3:condIn})"},
		{"trigger": "reaper.ImGui_SetNextItemWidth", "contents": "reaper.ImGui_SetNextItemWidth(${1:ctx}, ${2:item_width})"},
		{"trigger": "reaper.ImGui_SetNextWindowBgAlpha", "contents": "reaper.ImGui_SetNextWindowBgAlpha(${1:ctx}, ${2:alpha})"},
		{"trigger": "reaper.ImGui_SetNextWindowCollapsed", "contents": "reaper.ImGui_SetNextWindowCollapsed(${1:ctx}, ${2:collapsed}, ${3:condIn})"},
		{"trigger": "reaper.ImGui_SetNextWindowContentSize", "contents": "reaper.ImGui_SetNextWindowContentSize(${1:ctx}, ${2:size_w}, ${3:size_h})"},
		{"trigger": "reaper.ImGui_SetNextWindowDockID", "contents": "reaper.ImGui_SetNextWindowDockID(${1:ctx}, ${2:dock_id}, ${3:condIn})"},
		{"trigger": "reaper.ImGui_SetNextWindowFocus", "contents": "reaper.ImGui_SetNextWindowFocus(${1:ctx})"},
		{"trigger": "reaper.ImGui_SetNextWindowPos", "contents": "reaper.ImGui_SetNextWindowPos(${1:ctx}, ${2:pos_x}, ${3:pos_y}, ${4:condIn}, ${5:pivot_xIn}, ${6:pivot_yIn})"},
		{"trigger": "reaper.ImGui_SetNextWindowSize", "contents": "reaper.ImGui_SetNextWindowSize(${1:ctx}, ${2:size_w}, ${3:size_h}, ${4:condIn})"},
		{"trigger": "reaper.ImGui_SetNextWindowSizeConstraints", "contents": "reaper.ImGui_SetNextWindowSizeConstraints(${1:ctx}, ${2:size_min_w}, ${3:size_min_h}, ${4:size_max_w}, ${5:size_max_h})"},
		{"trigger": "reaper.ImGui_SetScrollFromPosX", "contents": "reaper.ImGui_SetScrollFromPosX(${1:ctx}, ${2:local_x}, ${3:center_x_ratioIn})"},
		{"trigger": "reaper.ImGui_SetScrollFromPosY", "contents": "reaper.ImGui_SetScrollFromPosY(${1:ctx}, ${2:local_y}, ${3:center_y_ratioIn})"},
		{"trigger": "reaper.ImGui_SetScrollHereX", "contents": "reaper.ImGui_SetScrollHereX(${1:ctx}, ${2:center_x_ratioIn})"},
		{"trigger": "reaper.ImGui_SetScrollHereY", "contents": "reaper.ImGui_SetScrollHereY(${1:ctx}, ${2:center_y_ratioIn})"},
		{"trigger": "reaper.ImGui_SetScrollX", "contents": "reaper.ImGui_SetScrollX(${1:ctx}, ${2:scroll_x})"},
		{"trigger": "reaper.ImGui_SetScrollY", "contents": "reaper.ImGui_SetScrollY(${1:ctx}, ${2:scroll_y})"},
		{"trigger": "reaper.ImGui_SetTabItemClosed", "contents": "reaper.ImGui_SetTabItemClosed(${1:ctx}, ${2:tab_or_docked_window_label})"},
		{"trigger": "reaper.ImGui_SetTooltip", "contents": "reaper.ImGui_SetTooltip(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_SetWindowCollapsed", "contents": "reaper.ImGui_SetWindowCollapsed(${1:ctx}, ${2:collapsed}, ${3:condIn})"},
		{"trigger": "reaper.ImGui_SetWindowCollapsedEx", "contents": "reaper.ImGui_SetWindowCollapsedEx(${1:ctx}, ${2:name}, ${3:collapsed}, ${4:condIn})"},
		{"trigger": "reaper.ImGui_SetWindowFocus", "contents": "reaper.ImGui_SetWindowFocus(${1:ctx})"},
		{"trigger": "reaper.ImGui_SetWindowFocusEx", "contents": "reaper.ImGui_SetWindowFocusEx(${1:ctx}, ${2:name})"},
		{"trigger": "reaper.ImGui_SetWindowPos", "contents": "reaper.ImGui_SetWindowPos(${1:ctx}, ${2:pos_x}, ${3:pos_y}, ${4:condIn})"},
		{"trigger": "reaper.ImGui_SetWindowPosEx", "contents": "reaper.ImGui_SetWindowPosEx(${1:ctx}, ${2:name}, ${3:pos_x}, ${4:pos_y}, ${5:condIn})"},
		{"trigger": "reaper.ImGui_SetWindowSize", "contents": "reaper.ImGui_SetWindowSize(${1:ctx}, ${2:size_w}, ${3:size_h}, ${4:condIn})"},
		{"trigger": "reaper.ImGui_SetWindowSizeEx", "contents": "reaper.ImGui_SetWindowSizeEx(${1:ctx}, ${2:name}, ${3:size_w}, ${4:size_h}, ${5:condIn})"},
		{"trigger": "reaper.ImGui_ShowMetricsWindow", "contents": "reaper.ImGui_ShowMetricsWindow(${1:ctx})"},
		{"trigger": "reaper.ImGui_SliderAngle", "contents": "reaper.ImGui_SliderAngle(${1:ctx}, ${2:label}, ${3:v_rad}, ${4:v_degrees_minIn}, ${5:v_degrees_maxIn}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderDouble", "contents": "reaper.ImGui_SliderDouble(${1:ctx}, ${2:label}, ${3:v}, ${4:v_min}, ${5:v_max}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderDouble2", "contents": "reaper.ImGui_SliderDouble2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v_min}, ${6:v_max}, ${7:formatIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderDouble3", "contents": "reaper.ImGui_SliderDouble3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v_min}, ${7:v_max}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderDouble4", "contents": "reaper.ImGui_SliderDouble4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:v_min}, ${8:v_max}, ${9:formatIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderDoubleN", "contents": "reaper.ImGui_SliderDoubleN(${1:ctx}, ${2:values}, ${3:v_min}, ${4:v_max}, ${5:formatIn}, ${6:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderFlags_AlwaysClamp", "contents": "reaper.ImGui_SliderFlags_AlwaysClamp()"},
		{"trigger": "reaper.ImGui_SliderFlags_Logarithmic", "contents": "reaper.ImGui_SliderFlags_Logarithmic()"},
		{"trigger": "reaper.ImGui_SliderFlags_NoInput", "contents": "reaper.ImGui_SliderFlags_NoInput()"},
		{"trigger": "reaper.ImGui_SliderFlags_None", "contents": "reaper.ImGui_SliderFlags_None()"},
		{"trigger": "reaper.ImGui_SliderFlags_NoRoundToFormat", "contents": "reaper.ImGui_SliderFlags_NoRoundToFormat()"},
		{"trigger": "reaper.ImGui_SliderInt", "contents": "reaper.ImGui_SliderInt(${1:ctx}, ${2:label}, ${3:v}, ${4:v_min}, ${5:v_max}, ${6:formatIn}, ${7:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderInt2", "contents": "reaper.ImGui_SliderInt2(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v_min}, ${6:v_max}, ${7:formatIn}, ${8:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderInt3", "contents": "reaper.ImGui_SliderInt3(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v_min}, ${7:v_max}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_SliderInt4", "contents": "reaper.ImGui_SliderInt4(${1:ctx}, ${2:label}, ${3:v1}, ${4:v2}, ${5:v3}, ${6:v4}, ${7:v_min}, ${8:v_max}, ${9:formatIn}, ${10:flagsIn})"},
		{"trigger": "reaper.ImGui_SmallButton", "contents": "reaper.ImGui_SmallButton(${1:ctx}, ${2:label})"},
		{"trigger": "reaper.ImGui_SortDirection_Ascending", "contents": "reaper.ImGui_SortDirection_Ascending()"},
		{"trigger": "reaper.ImGui_SortDirection_Descending", "contents": "reaper.ImGui_SortDirection_Descending()"},
		{"trigger": "reaper.ImGui_SortDirection_None", "contents": "reaper.ImGui_SortDirection_None()"},
		{"trigger": "reaper.ImGui_Spacing", "contents": "reaper.ImGui_Spacing(${1:ctx})"},
		{"trigger": "reaper.ImGui_StyleVar_Alpha", "contents": "reaper.ImGui_StyleVar_Alpha()"},
		{"trigger": "reaper.ImGui_StyleVar_ButtonTextAlign", "contents": "reaper.ImGui_StyleVar_ButtonTextAlign()"},
		{"trigger": "reaper.ImGui_StyleVar_CellPadding", "contents": "reaper.ImGui_StyleVar_CellPadding()"},
		{"trigger": "reaper.ImGui_StyleVar_ChildBorderSize", "contents": "reaper.ImGui_StyleVar_ChildBorderSize()"},
		{"trigger": "reaper.ImGui_StyleVar_ChildRounding", "contents": "reaper.ImGui_StyleVar_ChildRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_FrameBorderSize", "contents": "reaper.ImGui_StyleVar_FrameBorderSize()"},
		{"trigger": "reaper.ImGui_StyleVar_FramePadding", "contents": "reaper.ImGui_StyleVar_FramePadding()"},
		{"trigger": "reaper.ImGui_StyleVar_FrameRounding", "contents": "reaper.ImGui_StyleVar_FrameRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_GrabMinSize", "contents": "reaper.ImGui_StyleVar_GrabMinSize()"},
		{"trigger": "reaper.ImGui_StyleVar_GrabRounding", "contents": "reaper.ImGui_StyleVar_GrabRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_IndentSpacing", "contents": "reaper.ImGui_StyleVar_IndentSpacing()"},
		{"trigger": "reaper.ImGui_StyleVar_ItemInnerSpacing", "contents": "reaper.ImGui_StyleVar_ItemInnerSpacing()"},
		{"trigger": "reaper.ImGui_StyleVar_ItemSpacing", "contents": "reaper.ImGui_StyleVar_ItemSpacing()"},
		{"trigger": "reaper.ImGui_StyleVar_PopupBorderSize", "contents": "reaper.ImGui_StyleVar_PopupBorderSize()"},
		{"trigger": "reaper.ImGui_StyleVar_PopupRounding", "contents": "reaper.ImGui_StyleVar_PopupRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_ScrollbarRounding", "contents": "reaper.ImGui_StyleVar_ScrollbarRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_ScrollbarSize", "contents": "reaper.ImGui_StyleVar_ScrollbarSize()"},
		{"trigger": "reaper.ImGui_StyleVar_SelectableTextAlign", "contents": "reaper.ImGui_StyleVar_SelectableTextAlign()"},
		{"trigger": "reaper.ImGui_StyleVar_TabRounding", "contents": "reaper.ImGui_StyleVar_TabRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_WindowBorderSize", "contents": "reaper.ImGui_StyleVar_WindowBorderSize()"},
		{"trigger": "reaper.ImGui_StyleVar_WindowMinSize", "contents": "reaper.ImGui_StyleVar_WindowMinSize()"},
		{"trigger": "reaper.ImGui_StyleVar_WindowPadding", "contents": "reaper.ImGui_StyleVar_WindowPadding()"},
		{"trigger": "reaper.ImGui_StyleVar_WindowRounding", "contents": "reaper.ImGui_StyleVar_WindowRounding()"},
		{"trigger": "reaper.ImGui_StyleVar_WindowTitleAlign", "contents": "reaper.ImGui_StyleVar_WindowTitleAlign()"},
		{"trigger": "reaper.ImGui_TabBarFlags_AutoSelectNewTabs", "contents": "reaper.ImGui_TabBarFlags_AutoSelectNewTabs()"},
		{"trigger": "reaper.ImGui_TabBarFlags_FittingPolicyResizeDown", "contents": "reaper.ImGui_TabBarFlags_FittingPolicyResizeDown()"},
		{"trigger": "reaper.ImGui_TabBarFlags_FittingPolicyScroll", "contents": "reaper.ImGui_TabBarFlags_FittingPolicyScroll()"},
		{"trigger": "reaper.ImGui_TabBarFlags_NoCloseWithMiddleMouseButton", "contents": "reaper.ImGui_TabBarFlags_NoCloseWithMiddleMouseButton()"},
		{"trigger": "reaper.ImGui_TabBarFlags_None", "contents": "reaper.ImGui_TabBarFlags_None()"},
		{"trigger": "reaper.ImGui_TabBarFlags_NoTabListScrollingButtons", "contents": "reaper.ImGui_TabBarFlags_NoTabListScrollingButtons()"},
		{"trigger": "reaper.ImGui_TabBarFlags_NoTooltip", "contents": "reaper.ImGui_TabBarFlags_NoTooltip()"},
		{"trigger": "reaper.ImGui_TabBarFlags_Reorderable", "contents": "reaper.ImGui_TabBarFlags_Reorderable()"},
		{"trigger": "reaper.ImGui_TabBarFlags_TabListPopupButton", "contents": "reaper.ImGui_TabBarFlags_TabListPopupButton()"},
		{"trigger": "reaper.ImGui_TabItemButton", "contents": "reaper.ImGui_TabItemButton(${1:ctx}, ${2:label}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_TabItemFlags_Leading", "contents": "reaper.ImGui_TabItemFlags_Leading()"},
		{"trigger": "reaper.ImGui_TabItemFlags_NoCloseWithMiddleMouseButton", "contents": "reaper.ImGui_TabItemFlags_NoCloseWithMiddleMouseButton()"},
		{"trigger": "reaper.ImGui_TabItemFlags_None", "contents": "reaper.ImGui_TabItemFlags_None()"},
		{"trigger": "reaper.ImGui_TabItemFlags_NoPushId", "contents": "reaper.ImGui_TabItemFlags_NoPushId()"},
		{"trigger": "reaper.ImGui_TabItemFlags_NoReorder", "contents": "reaper.ImGui_TabItemFlags_NoReorder()"},
		{"trigger": "reaper.ImGui_TabItemFlags_NoTooltip", "contents": "reaper.ImGui_TabItemFlags_NoTooltip()"},
		{"trigger": "reaper.ImGui_TabItemFlags_SetSelected", "contents": "reaper.ImGui_TabItemFlags_SetSelected()"},
		{"trigger": "reaper.ImGui_TabItemFlags_Trailing", "contents": "reaper.ImGui_TabItemFlags_Trailing()"},
		{"trigger": "reaper.ImGui_TabItemFlags_UnsavedDocument", "contents": "reaper.ImGui_TabItemFlags_UnsavedDocument()"},
		{"trigger": "reaper.ImGui_TableBgTarget_CellBg", "contents": "reaper.ImGui_TableBgTarget_CellBg()"},
		{"trigger": "reaper.ImGui_TableBgTarget_None", "contents": "reaper.ImGui_TableBgTarget_None()"},
		{"trigger": "reaper.ImGui_TableBgTarget_RowBg0", "contents": "reaper.ImGui_TableBgTarget_RowBg0()"},
		{"trigger": "reaper.ImGui_TableBgTarget_RowBg1", "contents": "reaper.ImGui_TableBgTarget_RowBg1()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_DefaultHide", "contents": "reaper.ImGui_TableColumnFlags_DefaultHide()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_DefaultSort", "contents": "reaper.ImGui_TableColumnFlags_DefaultSort()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IndentDisable", "contents": "reaper.ImGui_TableColumnFlags_IndentDisable()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IndentEnable", "contents": "reaper.ImGui_TableColumnFlags_IndentEnable()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IsEnabled", "contents": "reaper.ImGui_TableColumnFlags_IsEnabled()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IsHovered", "contents": "reaper.ImGui_TableColumnFlags_IsHovered()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IsSorted", "contents": "reaper.ImGui_TableColumnFlags_IsSorted()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_IsVisible", "contents": "reaper.ImGui_TableColumnFlags_IsVisible()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoClip", "contents": "reaper.ImGui_TableColumnFlags_NoClip()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoHeaderWidth", "contents": "reaper.ImGui_TableColumnFlags_NoHeaderWidth()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoHide", "contents": "reaper.ImGui_TableColumnFlags_NoHide()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_None", "contents": "reaper.ImGui_TableColumnFlags_None()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoReorder", "contents": "reaper.ImGui_TableColumnFlags_NoReorder()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoResize", "contents": "reaper.ImGui_TableColumnFlags_NoResize()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoSort", "contents": "reaper.ImGui_TableColumnFlags_NoSort()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoSortAscending", "contents": "reaper.ImGui_TableColumnFlags_NoSortAscending()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_NoSortDescending", "contents": "reaper.ImGui_TableColumnFlags_NoSortDescending()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_PreferSortAscending", "contents": "reaper.ImGui_TableColumnFlags_PreferSortAscending()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_PreferSortDescending", "contents": "reaper.ImGui_TableColumnFlags_PreferSortDescending()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_WidthFixed", "contents": "reaper.ImGui_TableColumnFlags_WidthFixed()"},
		{"trigger": "reaper.ImGui_TableColumnFlags_WidthStretch", "contents": "reaper.ImGui_TableColumnFlags_WidthStretch()"},
		{"trigger": "reaper.ImGui_TableFlags_Borders", "contents": "reaper.ImGui_TableFlags_Borders()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersH", "contents": "reaper.ImGui_TableFlags_BordersH()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersInner", "contents": "reaper.ImGui_TableFlags_BordersInner()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersInnerH", "contents": "reaper.ImGui_TableFlags_BordersInnerH()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersInnerV", "contents": "reaper.ImGui_TableFlags_BordersInnerV()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersOuter", "contents": "reaper.ImGui_TableFlags_BordersOuter()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersOuterH", "contents": "reaper.ImGui_TableFlags_BordersOuterH()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersOuterV", "contents": "reaper.ImGui_TableFlags_BordersOuterV()"},
		{"trigger": "reaper.ImGui_TableFlags_BordersV", "contents": "reaper.ImGui_TableFlags_BordersV()"},
		{"trigger": "reaper.ImGui_TableFlags_ContextMenuInBody", "contents": "reaper.ImGui_TableFlags_ContextMenuInBody()"},
		{"trigger": "reaper.ImGui_TableFlags_Hideable", "contents": "reaper.ImGui_TableFlags_Hideable()"},
		{"trigger": "reaper.ImGui_TableFlags_NoClip", "contents": "reaper.ImGui_TableFlags_NoClip()"},
		{"trigger": "reaper.ImGui_TableFlags_NoKeepColumnsVisible", "contents": "reaper.ImGui_TableFlags_NoKeepColumnsVisible()"},
		{"trigger": "reaper.ImGui_TableFlags_None", "contents": "reaper.ImGui_TableFlags_None()"},
		{"trigger": "reaper.ImGui_TableFlags_NoPadInnerX", "contents": "reaper.ImGui_TableFlags_NoPadInnerX()"},
		{"trigger": "reaper.ImGui_TableFlags_NoPadOuterX", "contents": "reaper.ImGui_TableFlags_NoPadOuterX()"},
		{"trigger": "reaper.ImGui_TableFlags_NoSavedSettings", "contents": "reaper.ImGui_TableFlags_NoSavedSettings()"},
		{"trigger": "reaper.ImGui_TableFlags_PadOuterX", "contents": "reaper.ImGui_TableFlags_PadOuterX()"},
		{"trigger": "reaper.ImGui_TableFlags_PreciseWidths", "contents": "reaper.ImGui_TableFlags_PreciseWidths()"},
		{"trigger": "reaper.ImGui_TableFlags_Reorderable", "contents": "reaper.ImGui_TableFlags_Reorderable()"},
		{"trigger": "reaper.ImGui_TableFlags_Resizable", "contents": "reaper.ImGui_TableFlags_Resizable()"},
		{"trigger": "reaper.ImGui_TableFlags_RowBg", "contents": "reaper.ImGui_TableFlags_RowBg()"},
		{"trigger": "reaper.ImGui_TableFlags_ScrollX", "contents": "reaper.ImGui_TableFlags_ScrollX()"},
		{"trigger": "reaper.ImGui_TableFlags_ScrollY", "contents": "reaper.ImGui_TableFlags_ScrollY()"},
		{"trigger": "reaper.ImGui_TableFlags_SizingFixedFit", "contents": "reaper.ImGui_TableFlags_SizingFixedFit()"},
		{"trigger": "reaper.ImGui_TableFlags_SizingFixedSame", "contents": "reaper.ImGui_TableFlags_SizingFixedSame()"},
		{"trigger": "reaper.ImGui_TableFlags_SizingStretchProp", "contents": "reaper.ImGui_TableFlags_SizingStretchProp()"},
		{"trigger": "reaper.ImGui_TableFlags_SizingStretchSame", "contents": "reaper.ImGui_TableFlags_SizingStretchSame()"},
		{"trigger": "reaper.ImGui_TableFlags_Sortable", "contents": "reaper.ImGui_TableFlags_Sortable()"},
		{"trigger": "reaper.ImGui_TableFlags_SortMulti", "contents": "reaper.ImGui_TableFlags_SortMulti()"},
		{"trigger": "reaper.ImGui_TableFlags_SortTristate", "contents": "reaper.ImGui_TableFlags_SortTristate()"},
		{"trigger": "reaper.ImGui_TableGetColumnCount", "contents": "reaper.ImGui_TableGetColumnCount(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableGetColumnFlags", "contents": "reaper.ImGui_TableGetColumnFlags(${1:ctx}, ${2:column_nIn})"},
		{"trigger": "reaper.ImGui_TableGetColumnIndex", "contents": "reaper.ImGui_TableGetColumnIndex(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableGetColumnName", "contents": "reaper.ImGui_TableGetColumnName(${1:ctx}, ${2:column_nIn})"},
		{"trigger": "reaper.ImGui_TableGetColumnSortSpecs", "contents": "reaper.ImGui_TableGetColumnSortSpecs(${1:ctx}, ${2:id})"},
		{"trigger": "reaper.ImGui_TableGetRowIndex", "contents": "reaper.ImGui_TableGetRowIndex(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableHeader", "contents": "reaper.ImGui_TableHeader(${1:ctx}, ${2:label})"},
		{"trigger": "reaper.ImGui_TableHeadersRow", "contents": "reaper.ImGui_TableHeadersRow(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableNeedSort", "contents": "reaper.ImGui_TableNeedSort(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableNextColumn", "contents": "reaper.ImGui_TableNextColumn(${1:ctx})"},
		{"trigger": "reaper.ImGui_TableNextRow", "contents": "reaper.ImGui_TableNextRow(${1:ctx}, ${2:row_flagsIn}, ${3:min_row_heightIn})"},
		{"trigger": "reaper.ImGui_TableRowFlags_Headers", "contents": "reaper.ImGui_TableRowFlags_Headers()"},
		{"trigger": "reaper.ImGui_TableRowFlags_None", "contents": "reaper.ImGui_TableRowFlags_None()"},
		{"trigger": "reaper.ImGui_TableSetBgColor", "contents": "reaper.ImGui_TableSetBgColor(${1:ctx}, ${2:target}, ${3:color_rgba}, ${4:column_nIn})"},
		{"trigger": "reaper.ImGui_TableSetColumnEnabled", "contents": "reaper.ImGui_TableSetColumnEnabled(${1:ctx}, ${2:column_n}, ${3:v})"},
		{"trigger": "reaper.ImGui_TableSetColumnIndex", "contents": "reaper.ImGui_TableSetColumnIndex(${1:ctx}, ${2:column_n})"},
		{"trigger": "reaper.ImGui_TableSetupColumn", "contents": "reaper.ImGui_TableSetupColumn(${1:ctx}, ${2:label}, ${3:flagsIn}, ${4:init_width_or_weightIn}, ${5:user_idIn})"},
		{"trigger": "reaper.ImGui_TableSetupScrollFreeze", "contents": "reaper.ImGui_TableSetupScrollFreeze(${1:ctx}, ${2:cols}, ${3:rows})"},
		{"trigger": "reaper.ImGui_Text", "contents": "reaper.ImGui_Text(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_TextColored", "contents": "reaper.ImGui_TextColored(${1:ctx}, ${2:col_rgba}, ${3:text})"},
		{"trigger": "reaper.ImGui_TextDisabled", "contents": "reaper.ImGui_TextDisabled(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_TextWrapped", "contents": "reaper.ImGui_TextWrapped(${1:ctx}, ${2:text})"},
		{"trigger": "reaper.ImGui_TreeNode", "contents": "reaper.ImGui_TreeNode(${1:ctx}, ${2:label}, ${3:flagsIn})"},
		{"trigger": "reaper.ImGui_TreeNodeEx", "contents": "reaper.ImGui_TreeNodeEx(${1:ctx}, ${2:str_id}, ${3:label}, ${4:flagsIn})"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_AllowItemOverlap", "contents": "reaper.ImGui_TreeNodeFlags_AllowItemOverlap()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_Bullet", "contents": "reaper.ImGui_TreeNodeFlags_Bullet()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_CollapsingHeader", "contents": "reaper.ImGui_TreeNodeFlags_CollapsingHeader()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_DefaultOpen", "contents": "reaper.ImGui_TreeNodeFlags_DefaultOpen()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_Framed", "contents": "reaper.ImGui_TreeNodeFlags_Framed()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_FramePadding", "contents": "reaper.ImGui_TreeNodeFlags_FramePadding()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_Leaf", "contents": "reaper.ImGui_TreeNodeFlags_Leaf()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_NoAutoOpenOnLog", "contents": "reaper.ImGui_TreeNodeFlags_NoAutoOpenOnLog()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_None", "contents": "reaper.ImGui_TreeNodeFlags_None()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_NoTreePushOnOpen", "contents": "reaper.ImGui_TreeNodeFlags_NoTreePushOnOpen()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_OpenOnArrow", "contents": "reaper.ImGui_TreeNodeFlags_OpenOnArrow()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_OpenOnDoubleClick", "contents": "reaper.ImGui_TreeNodeFlags_OpenOnDoubleClick()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_Selected", "contents": "reaper.ImGui_TreeNodeFlags_Selected()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_SpanAvailWidth", "contents": "reaper.ImGui_TreeNodeFlags_SpanAvailWidth()"},
		{"trigger": "reaper.ImGui_TreeNodeFlags_SpanFullWidth", "contents": "reaper.ImGui_TreeNodeFlags_SpanFullWidth()"},
		{"trigger": "reaper.ImGui_TreePop", "contents": "reaper.ImGui_TreePop(${1:ctx})"},
		{"trigger": "reaper.ImGui_TreePush", "contents": "reaper.ImGui_TreePush(${1:ctx}, ${2:str_id})"},
		{"trigger": "reaper.ImGui_Unindent", "contents": "reaper.ImGui_Unindent(${1:ctx}, ${2:indent_wIn})"},
		{"trigger": "reaper.ImGui_ValidatePtr", "contents": "reaper.ImGui_ValidatePtr(${1:pointer}, ${2:type})"},
		{"trigger": "reaper.ImGui_Viewport_GetCenter", "contents": "reaper.ImGui_Viewport_GetCenter(${1:viewport})"},
		{"trigger": "reaper.ImGui_Viewport_GetPos", "contents": "reaper.ImGui_Viewport_GetPos(${1:viewport})"},
		{"trigger": "reaper.ImGui_Viewport_GetSize", "contents": "reaper.ImGui_Viewport_GetSize(${1:viewport})"},
		{"trigger": "reaper.ImGui_Viewport_GetWorkCenter", "contents": "reaper.ImGui_Viewport_GetWorkCenter(${1:viewport})"},
		{"trigger": "reaper.ImGui_Viewport_GetWorkPos", "contents": "reaper.ImGui_Viewport_GetWorkPos(${1:viewport})"},
		{"trigger": "reaper.ImGui_Viewport_GetWorkSize", "contents": "reaper.ImGui_Viewport_GetWorkSize(${1:viewport})"},
		{"trigger": "reaper.ImGui_VSliderDouble", "contents": "reaper.ImGui_VSliderDouble(${1:ctx}, ${2:label}, ${3:size_w}, ${4:size_h}, ${5:v}, ${6:v_min}, ${7:v_max}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_VSliderInt", "contents": "reaper.ImGui_VSliderInt(${1:ctx}, ${2:label}, ${3:size_w}, ${4:size_h}, ${5:v}, ${6:v_min}, ${7:v_max}, ${8:formatIn}, ${9:flagsIn})"},
		{"trigger": "reaper.ImGui_WindowFlags_AlwaysAutoResize", "contents": "reaper.ImGui_WindowFlags_AlwaysAutoResize()"},
		{"trigger": "reaper.ImGui_WindowFlags_AlwaysHorizontalScrollbar", "contents": "reaper.ImGui_WindowFlags_AlwaysHorizontalScrollbar()"},
		{"trigger": "reaper.ImGui_WindowFlags_AlwaysUseWindowPadding", "contents": "reaper.ImGui_WindowFlags_AlwaysUseWindowPadding()"},
		{"trigger": "reaper.ImGui_WindowFlags_AlwaysVerticalScrollbar", "contents": "reaper.ImGui_WindowFlags_AlwaysVerticalScrollbar()"},
		{"trigger": "reaper.ImGui_WindowFlags_HorizontalScrollbar", "contents": "reaper.ImGui_WindowFlags_HorizontalScrollbar()"},
		{"trigger": "reaper.ImGui_WindowFlags_MenuBar", "contents": "reaper.ImGui_WindowFlags_MenuBar()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoBackground", "contents": "reaper.ImGui_WindowFlags_NoBackground()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoBringToFrontOnFocus", "contents": "reaper.ImGui_WindowFlags_NoBringToFrontOnFocus()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoCollapse", "contents": "reaper.ImGui_WindowFlags_NoCollapse()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoDecoration", "contents": "reaper.ImGui_WindowFlags_NoDecoration()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoDocking", "contents": "reaper.ImGui_WindowFlags_NoDocking()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoFocusOnAppearing", "contents": "reaper.ImGui_WindowFlags_NoFocusOnAppearing()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoInputs", "contents": "reaper.ImGui_WindowFlags_NoInputs()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoMouseInputs", "contents": "reaper.ImGui_WindowFlags_NoMouseInputs()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoMove", "contents": "reaper.ImGui_WindowFlags_NoMove()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoNav", "contents": "reaper.ImGui_WindowFlags_NoNav()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoNavFocus", "contents": "reaper.ImGui_WindowFlags_NoNavFocus()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoNavInputs", "contents": "reaper.ImGui_WindowFlags_NoNavInputs()"},
		{"trigger": "reaper.ImGui_WindowFlags_None", "contents": "reaper.ImGui_WindowFlags_None()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoResize", "contents": "reaper.ImGui_WindowFlags_NoResize()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoSavedSettings", "contents": "reaper.ImGui_WindowFlags_NoSavedSettings()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoScrollbar", "contents": "reaper.ImGui_WindowFlags_NoScrollbar()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoScrollWithMouse", "contents": "reaper.ImGui_WindowFlags_NoScrollWithMouse()"},
		{"trigger": "reaper.ImGui_WindowFlags_NoTitleBar", "contents": "reaper.ImGui_WindowFlags_NoTitleBar()"},
		{"trigger": "reaper.ImGui_WindowFlags_UnsavedDocument", "contents": "reaper.ImGui_WindowFlags_UnsavedDocument()"},
		{"trigger": "gfx.init", "contents": "gfx.init(${1:name}, ${2:width}, ${3:height}, ${4:dockstate}, ${5:xpos}, ${6:ypos})"},
		{"trigger": "reaper.InsertAutomationItem", "contents": "reaper.InsertAutomationItem(${1:env}, ${2:pool_id}, ${3:position}, ${4:length})"},
		{"trigger": "reaper.InsertEnvelopePoint", "contents": "reaper.InsertEnvelopePoint(${1:envelope}, ${2:time}, ${3:value}, ${4:shape}, ${5:tension}, ${6:selected}, ${7:noSortIn})"},
		{"trigger": "reaper.InsertEnvelopePointEx", "contents": "reaper.InsertEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:time}, ${4:value}, ${5:shape}, ${6:tension}, ${7:selected}, ${8:noSortIn})"},
		{"trigger": "reaper.InsertMedia", "contents": "reaper.InsertMedia(${1:file}, ${2:mode})"},
		{"trigger": "reaper.InsertMediaSection", "contents": "reaper.InsertMediaSection(${1:file}, ${2:mode}, ${3:startpct}, ${4:endpct}, ${5:pitchshift})"},
		{"trigger": "reaper.InsertTrackAtIndex", "contents": "reaper.InsertTrackAtIndex(${1:idx}, ${2:wantDefaults})"},
		{"trigger": "reaper.IsMediaExtension", "contents": "reaper.IsMediaExtension(${1:ext}, ${2:wantOthers})"},
		{"trigger": "reaper.IsMediaItemSelected", "contents": "reaper.IsMediaItemSelected(${1:item})"},
		{"trigger": "reaper.IsProjectDirty", "contents": "reaper.IsProjectDirty(${1:proj})"},
		{"trigger": "reaper.IsTrackSelected", "contents": "reaper.IsTrackSelected(${1:track})"},
		{"trigger": "reaper.IsTrackVisible", "contents": "reaper.IsTrackVisible(${1:track}, ${2:mixer})"},
		{"trigger": "reaper.joystick_create", "contents": "reaper.joystick_create(${1:guidGUID})"},
		{"trigger": "reaper.joystick_destroy", "contents": "reaper.joystick_destroy(${1:device})"},
		{"trigger": "reaper.joystick_enum", "contents": "reaper.joystick_enum(${1:index})"},
		{"trigger": "reaper.joystick_getaxis", "contents": "reaper.joystick_getaxis(${1:dev}, ${2:axis})"},
		{"trigger": "reaper.joystick_getbuttonmask", "contents": "reaper.joystick_getbuttonmask(${1:dev})"},
		{"trigger": "reaper.joystick_getinfo", "contents": "reaper.joystick_getinfo(${1:dev})"},
		{"trigger": "reaper.joystick_getpov", "contents": "reaper.joystick_getpov(${1:dev}, ${2:pov})"},
		{"trigger": "reaper.joystick_update", "contents": "reaper.joystick_update(${1:dev})"},
		{"trigger": "reaper.JS_Actions_CountShortcuts", "contents": "reaper.JS_Actions_CountShortcuts(${1:section}, ${2:cmdID})"},
		{"trigger": "reaper.JS_Actions_DeleteShortcut", "contents": "reaper.JS_Actions_DeleteShortcut(${1:section}, ${2:cmdID}, ${3:shortcutidx})"},
		{"trigger": "reaper.JS_Actions_DoShortcutDialog", "contents": "reaper.JS_Actions_DoShortcutDialog(${1:section}, ${2:cmdID}, ${3:shortcutidx})"},
		{"trigger": "reaper.JS_Actions_GetShortcutDesc", "contents": "reaper.JS_Actions_GetShortcutDesc(${1:section}, ${2:cmdID}, ${3:shortcutidx})"},
		{"trigger": "reaper.JS_Byte", "contents": "reaper.JS_Byte(${1:pointer}, ${2:offset})"},
		{"trigger": "reaper.JS_Composite", "contents": "reaper.JS_Composite(${1:windowHWND}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:sysBitmap}, ${7:srcx}, ${8:srcy}, ${9:srcw}, ${10:srch}, ${11:autoUpdate})"},
		{"trigger": "reaper.JS_Composite_Delay", "contents": "reaper.JS_Composite_Delay(${1:windowHWND}, ${2:minTime}, ${3:maxTime}, ${4:numBitmapsWhenMax})"},
		{"trigger": "reaper.JS_Composite_ListBitmaps", "contents": "reaper.JS_Composite_ListBitmaps(${1:windowHWND})"},
		{"trigger": "reaper.JS_Composite_Unlink", "contents": "reaper.JS_Composite_Unlink(${1:windowHWND}, ${2:bitmap}, ${3:autoUpdate})"},
		{"trigger": "reaper.JS_Dialog_BrowseForFolder", "contents": "reaper.JS_Dialog_BrowseForFolder(${1:caption}, ${2:initialFolder})"},
		{"trigger": "reaper.JS_Dialog_BrowseForOpenFiles", "contents": "reaper.JS_Dialog_BrowseForOpenFiles(${1:windowTitle}, ${2:initialFolder}, ${3:initialFile}, ${4:extensionList}, ${5:allowMultiple})"},
		{"trigger": "reaper.JS_Dialog_BrowseForSaveFile", "contents": "reaper.JS_Dialog_BrowseForSaveFile(${1:windowTitle}, ${2:initialFolder}, ${3:initialFile}, ${4:extensionList})"},
		{"trigger": "reaper.JS_Double", "contents": "reaper.JS_Double(${1:pointer}, ${2:offset})"},
		{"trigger": "reaper.JS_File_Stat", "contents": "reaper.JS_File_Stat(${1:filePath})"},
		{"trigger": "reaper.JS_GDI_Blit", "contents": "reaper.JS_GDI_Blit(${1:destHDC}, ${2:dstx}, ${3:dsty}, ${4:sourceHDC}, ${5:srcx}, ${6:srxy}, ${7:width}, ${8:height}, ${9:mode})"},
		{"trigger": "reaper.JS_GDI_CreateFillBrush", "contents": "reaper.JS_GDI_CreateFillBrush(${1:color})"},
		{"trigger": "reaper.JS_GDI_CreateFont", "contents": "reaper.JS_GDI_CreateFont(${1:height}, ${2:weight}, ${3:angle}, ${4:italic}, ${5:underline}, ${6:strike}, ${7:fontName})"},
		{"trigger": "reaper.JS_GDI_CreatePen", "contents": "reaper.JS_GDI_CreatePen(${1:width}, ${2:color})"},
		{"trigger": "reaper.JS_GDI_DeleteObject", "contents": "reaper.JS_GDI_DeleteObject(${1:GDIObject})"},
		{"trigger": "reaper.JS_GDI_DrawText", "contents": "reaper.JS_GDI_DrawText(${1:deviceHDC}, ${2:text}, ${3:len}, ${4:left}, ${5:top}, ${6:right}, ${7:bottom}, ${8:align})"},
		{"trigger": "reaper.JS_GDI_FillEllipse", "contents": "reaper.JS_GDI_FillEllipse(${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "reaper.JS_GDI_FillPolygon", "contents": "reaper.JS_GDI_FillPolygon(${1:deviceHDC}, ${2:packedX}, ${3:packedY}, ${4:numPoints})"},
		{"trigger": "reaper.JS_GDI_FillRect", "contents": "reaper.JS_GDI_FillRect(${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "reaper.JS_GDI_FillRoundRect", "contents": "reaper.JS_GDI_FillRoundRect(${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom}, ${6:xrnd}, ${7:yrnd})"},
		{"trigger": "reaper.JS_GDI_GetClientDC", "contents": "reaper.JS_GDI_GetClientDC(${1:windowHWND})"},
		{"trigger": "reaper.JS_GDI_GetScreenDC", "contents": "reaper.JS_GDI_GetScreenDC()"},
		{"trigger": "reaper.JS_GDI_GetSysColor", "contents": "reaper.JS_GDI_GetSysColor(${1:GUIElement})"},
		{"trigger": "reaper.JS_GDI_GetTextColor", "contents": "reaper.JS_GDI_GetTextColor(${1:deviceHDC})"},
		{"trigger": "reaper.JS_GDI_GetWindowDC", "contents": "reaper.JS_GDI_GetWindowDC(${1:windowHWND})"},
		{"trigger": "reaper.JS_GDI_Line", "contents": "reaper.JS_GDI_Line(${1:deviceHDC}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2})"},
		{"trigger": "reaper.JS_GDI_Polyline", "contents": "reaper.JS_GDI_Polyline(${1:deviceHDC}, ${2:packedX}, ${3:packedY}, ${4:numPoints})"},
		{"trigger": "reaper.JS_GDI_ReleaseDC", "contents": "reaper.JS_GDI_ReleaseDC(${1:deviceHDC}, ${2:windowHWND})"},
		{"trigger": "reaper.JS_GDI_SelectObject", "contents": "reaper.JS_GDI_SelectObject(${1:deviceHDC}, ${2:GDIObject})"},
		{"trigger": "reaper.JS_GDI_SetPixel", "contents": "reaper.JS_GDI_SetPixel(${1:deviceHDC}, ${2:x}, ${3:y}, ${4:color})"},
		{"trigger": "reaper.JS_GDI_SetTextBkColor", "contents": "reaper.JS_GDI_SetTextBkColor(${1:deviceHDC}, ${2:color})"},
		{"trigger": "reaper.JS_GDI_SetTextBkMode", "contents": "reaper.JS_GDI_SetTextBkMode(${1:deviceHDC}, ${2:mode})"},
		{"trigger": "reaper.JS_GDI_SetTextColor", "contents": "reaper.JS_GDI_SetTextColor(${1:deviceHDC}, ${2:color})"},
		{"trigger": "reaper.JS_GDI_StretchBlit", "contents": "reaper.JS_GDI_StretchBlit(${1:destHDC}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:sourceHDC}, ${7:srcx}, ${8:srxy}, ${9:srcw}, ${10:srch}, ${11:mode})"},
		{"trigger": "reaper.JS_Int", "contents": "reaper.JS_Int(${1:pointer}, ${2:offset})"},
		{"trigger": "reaper.JS_LICE_AlterBitmapHSV", "contents": "reaper.JS_LICE_AlterBitmapHSV(${1:bitmap}, ${2:hue}, ${3:saturation}, ${4:value})"},
		{"trigger": "reaper.JS_LICE_AlterRectHSV", "contents": "reaper.JS_LICE_AlterRectHSV(${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:hue}, ${7:saturation}, ${8:value})"},
		{"trigger": "reaper.JS_LICE_Arc", "contents": "reaper.JS_LICE_Arc(${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:minAngle}, ${6:maxAngle}, ${7:color}, ${8:alpha}, ${9:mode}, ${10:antialias})"},
		{"trigger": "reaper.JS_LICE_ArrayAllBitmaps", "contents": "reaper.JS_LICE_ArrayAllBitmaps(${1:reaperarray})"},
		{"trigger": "reaper.JS_LICE_Bezier", "contents": "reaper.JS_LICE_Bezier(${1:bitmap}, ${2:xstart}, ${3:ystart}, ${4:xctl1}, ${5:yctl1}, ${6:xctl2}, ${7:yctl2}, ${8:xend}, ${9:yend}, ${10:tol}, ${11:color}, ${12:alpha}, ${13:mode}, ${14:antialias})"},
		{"trigger": "reaper.JS_LICE_Blit", "contents": "reaper.JS_LICE_Blit(${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:sourceBitmap}, ${5:srcx}, ${6:srcy}, ${7:width}, ${8:height}, ${9:alpha}, ${10:mode})"},
		{"trigger": "reaper.JS_LICE_Circle", "contents": "reaper.JS_LICE_Circle(${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:color}, ${6:alpha}, ${7:mode}, ${8:antialias})"},
		{"trigger": "reaper.JS_LICE_Clear", "contents": "reaper.JS_LICE_Clear(${1:bitmap}, ${2:color})"},
		{"trigger": "reaper.JS_LICE_CreateBitmap", "contents": "reaper.JS_LICE_CreateBitmap(${1:isSysBitmap}, ${2:width}, ${3:height})"},
		{"trigger": "reaper.JS_LICE_CreateFont", "contents": "reaper.JS_LICE_CreateFont()"},
		{"trigger": "reaper.JS_LICE_DestroyBitmap", "contents": "reaper.JS_LICE_DestroyBitmap(${1:bitmap})"},
		{"trigger": "reaper.JS_LICE_DestroyFont", "contents": "reaper.JS_LICE_DestroyFont(${1:LICEFont})"},
		{"trigger": "reaper.JS_LICE_DrawChar", "contents": "reaper.JS_LICE_DrawChar(${1:bitmap}, ${2:x}, ${3:y}, ${4:c}, ${5:color}, ${6:alpha}, ${7:mode})"},
		{"trigger": "reaper.JS_LICE_DrawText", "contents": "reaper.JS_LICE_DrawText(${1:bitmap}, ${2:LICEFont}, ${3:text}, ${4:textLen}, ${5:x1}, ${6:y1}, ${7:x2}, ${8:y2})"},
		{"trigger": "reaper.JS_LICE_FillCircle", "contents": "reaper.JS_LICE_FillCircle(${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:color}, ${6:alpha}, ${7:mode}, ${8:antialias})"},
		{"trigger": "reaper.JS_LICE_FillPolygon", "contents": "reaper.JS_LICE_FillPolygon(${1:bitmap}, ${2:packedX}, ${3:packedY}, ${4:numPoints}, ${5:color}, ${6:alpha}, ${7:mode})"},
		{"trigger": "reaper.JS_LICE_FillRect", "contents": "reaper.JS_LICE_FillRect(${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:color}, ${7:alpha}, ${8:mode})"},
		{"trigger": "reaper.JS_LICE_FillTriangle", "contents": "reaper.JS_LICE_FillTriangle(${1:bitmap}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3}, ${8:color}, ${9:alpha}, ${10:mode})"},
		{"trigger": "reaper.JS_LICE_GetDC", "contents": "reaper.JS_LICE_GetDC(${1:bitmap})"},
		{"trigger": "reaper.JS_LICE_GetHeight", "contents": "reaper.JS_LICE_GetHeight(${1:bitmap})"},
		{"trigger": "reaper.JS_LICE_GetPixel", "contents": "reaper.JS_LICE_GetPixel(${1:bitmap}, ${2:x}, ${3:y})"},
		{"trigger": "reaper.JS_LICE_GetWidth", "contents": "reaper.JS_LICE_GetWidth(${1:bitmap})"},
		{"trigger": "reaper.JS_LICE_GradRect", "contents": "reaper.JS_LICE_GradRect(${1:bitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:ir}, ${7:ig}, ${8:ib}, ${9:ia}, ${10:drdx}, ${11:dgdx}, ${12:dbdx}, ${13:dadx}, ${14:drdy}, ${15:dgdy}, ${16:dbdy}, ${17:dady}, ${18:mode})"},
		{"trigger": "reaper.JS_LICE_IsFlipped", "contents": "reaper.JS_LICE_IsFlipped(${1:bitmap})"},
		{"trigger": "reaper.JS_LICE_Line", "contents": "reaper.JS_LICE_Line(${1:bitmap}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color}, ${7:alpha}, ${8:mode}, ${9:antialias})"},
		{"trigger": "reaper.JS_LICE_ListAllBitmaps", "contents": "reaper.JS_LICE_ListAllBitmaps()"},
		{"trigger": "reaper.JS_LICE_LoadJPG", "contents": "reaper.JS_LICE_LoadJPG(${1:filename})"},
		{"trigger": "reaper.JS_LICE_LoadPNG", "contents": "reaper.JS_LICE_LoadPNG(${1:filename})"},
		{"trigger": "reaper.JS_LICE_MeasureText", "contents": "reaper.JS_LICE_MeasureText(${1:text})"},
		{"trigger": "reaper.JS_LICE_ProcessRect", "contents": "reaper.JS_LICE_ProcessRect(${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:mode}, ${7:operand})"},
		{"trigger": "reaper.JS_LICE_PutPixel", "contents": "reaper.JS_LICE_PutPixel(${1:bitmap}, ${2:x}, ${3:y}, ${4:color}, ${5:alpha}, ${6:mode})"},
		{"trigger": "reaper.JS_LICE_Resize", "contents": "reaper.JS_LICE_Resize(${1:bitmap}, ${2:width}, ${3:height})"},
		{"trigger": "reaper.JS_LICE_RotatedBlit", "contents": "reaper.JS_LICE_RotatedBlit(${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:sourceBitmap}, ${7:srcx}, ${8:srcy}, ${9:srcw}, ${10:srch}, ${11:angle}, ${12:rotxcent}, ${13:rotycent}, ${14:cliptosourcerect}, ${15:alpha}, ${16:mode})"},
		{"trigger": "reaper.JS_LICE_RoundRect", "contents": "reaper.JS_LICE_RoundRect(${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:cornerradius}, ${7:color}, ${8:alpha}, ${9:mode}, ${10:antialias})"},
		{"trigger": "reaper.JS_LICE_ScaledBlit", "contents": "reaper.JS_LICE_ScaledBlit(${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:srcBitmap}, ${7:srcx}, ${8:srcy}, ${9:srcw}, ${10:srch}, ${11:alpha}, ${12:mode})"},
		{"trigger": "reaper.JS_LICE_SetAlphaFromColorMask", "contents": "reaper.JS_LICE_SetAlphaFromColorMask(${1:bitmap}, ${2:colorRGB})"},
		{"trigger": "reaper.JS_LICE_SetFontBkColor", "contents": "reaper.JS_LICE_SetFontBkColor(${1:LICEFont}, ${2:color})"},
		{"trigger": "reaper.JS_LICE_SetFontColor", "contents": "reaper.JS_LICE_SetFontColor(${1:LICEFont}, ${2:color})"},
		{"trigger": "reaper.JS_LICE_SetFontFromGDI", "contents": "reaper.JS_LICE_SetFontFromGDI(${1:LICEFont}, ${2:GDIFont}, ${3:moreFormats})"},
		{"trigger": "reaper.JS_LICE_WriteJPG", "contents": "reaper.JS_LICE_WriteJPG(${1:bitmap}, ${2:quality}, ${3:forceBaseline})"},
		{"trigger": "reaper.JS_LICE_WritePNG", "contents": "reaper.JS_LICE_WritePNG(${1:bitmap}, ${2:wantAlpha})"},
		{"trigger": "reaper.JS_ListView_EnsureVisible", "contents": "reaper.JS_ListView_EnsureVisible(${1:listviewHWND}, ${2:index}, ${3:partialOK})"},
		{"trigger": "reaper.JS_ListView_EnumSelItems", "contents": "reaper.JS_ListView_EnumSelItems(${1:listviewHWND}, ${2:index})"},
		{"trigger": "reaper.JS_ListView_GetFocusedItem", "contents": "reaper.JS_ListView_GetFocusedItem(${1:listviewHWND})"},
		{"trigger": "reaper.JS_ListView_GetItem", "contents": "reaper.JS_ListView_GetItem(${1:listviewHWND}, ${2:index}, ${3:subItem})"},
		{"trigger": "reaper.JS_ListView_GetItemCount", "contents": "reaper.JS_ListView_GetItemCount(${1:listviewHWND})"},
		{"trigger": "reaper.JS_ListView_GetItemRect", "contents": "reaper.JS_ListView_GetItemRect(${1:listviewHWND}, ${2:index})"},
		{"trigger": "reaper.JS_ListView_GetItemState", "contents": "reaper.JS_ListView_GetItemState(${1:listviewHWND}, ${2:index})"},
		{"trigger": "reaper.JS_ListView_GetItemText", "contents": "reaper.JS_ListView_GetItemText(${1:listviewHWND}, ${2:index}, ${3:subItem})"},
		{"trigger": "reaper.JS_ListView_GetSelectedCount", "contents": "reaper.JS_ListView_GetSelectedCount(${1:listviewHWND})"},
		{"trigger": "reaper.JS_ListView_GetTopIndex", "contents": "reaper.JS_ListView_GetTopIndex(${1:listviewHWND})"},
		{"trigger": "reaper.JS_ListView_HitTest", "contents": "reaper.JS_ListView_HitTest(${1:listviewHWND}, ${2:clientX}, ${3:clientY})"},
		{"trigger": "reaper.JS_ListView_ListAllSelItems", "contents": "reaper.JS_ListView_ListAllSelItems(${1:listviewHWND})"},
		{"trigger": "reaper.JS_ListView_SetItemState", "contents": "reaper.JS_ListView_SetItemState(${1:listviewHWND}, ${2:index}, ${3:state}, ${4:mask})"},
		{"trigger": "reaper.JS_ListView_SetItemText", "contents": "reaper.JS_ListView_SetItemText(${1:listviewHWND}, ${2:index}, ${3:subItem}, ${4:text})"},
		{"trigger": "reaper.JS_Localize", "contents": "reaper.JS_Localize(${1:USEnglish}, ${2:LangPackSection})"},
		{"trigger": "reaper.JS_Mem_Alloc", "contents": "reaper.JS_Mem_Alloc(${1:sizeBytes})"},
		{"trigger": "reaper.JS_Mem_Free", "contents": "reaper.JS_Mem_Free(${1:mallocPointer})"},
		{"trigger": "reaper.JS_Mem_FromString", "contents": "reaper.JS_Mem_FromString(${1:mallocPointer}, ${2:offset}, ${3:packedString}, ${4:stringLength})"},
		{"trigger": "reaper.JS_MIDIEditor_ArrayAll", "contents": "reaper.JS_MIDIEditor_ArrayAll(${1:reaperarray})"},
		{"trigger": "reaper.JS_MIDIEditor_ListAll", "contents": "reaper.JS_MIDIEditor_ListAll()"},
		{"trigger": "reaper.JS_Mouse_GetCursor", "contents": "reaper.JS_Mouse_GetCursor()"},
		{"trigger": "reaper.JS_Mouse_GetState", "contents": "reaper.JS_Mouse_GetState(${1:flags})"},
		{"trigger": "reaper.JS_Mouse_LoadCursor", "contents": "reaper.JS_Mouse_LoadCursor(${1:cursorNumber})"},
		{"trigger": "reaper.JS_Mouse_LoadCursorFromFile", "contents": "reaper.JS_Mouse_LoadCursorFromFile(${1:pathAndFileName}, ${2:forceNewLoad})"},
		{"trigger": "reaper.JS_Mouse_SetCursor", "contents": "reaper.JS_Mouse_SetCursor(${1:cursorHandle})"},
		{"trigger": "reaper.JS_Mouse_SetPosition", "contents": "reaper.JS_Mouse_SetPosition(${1:x}, ${2:y})"},
		{"trigger": "reaper.JS_ReaScriptAPI_Version", "contents": "reaper.JS_ReaScriptAPI_Version()"},
		{"trigger": "reaper.JS_String", "contents": "reaper.JS_String(${1:pointer}, ${2:offset}, ${3:lengthChars})"},
		{"trigger": "reaper.JS_VKeys_GetDown", "contents": "reaper.JS_VKeys_GetDown(${1:cutoffTime})"},
		{"trigger": "reaper.JS_VKeys_GetState", "contents": "reaper.JS_VKeys_GetState(${1:cutoffTime})"},
		{"trigger": "reaper.JS_VKeys_GetUp", "contents": "reaper.JS_VKeys_GetUp(${1:cutoffTime})"},
		{"trigger": "reaper.JS_VKeys_Intercept", "contents": "reaper.JS_VKeys_Intercept(${1:keyCode}, ${2:intercept})"},
		{"trigger": "reaper.JS_Window_AddressFromHandle", "contents": "reaper.JS_Window_AddressFromHandle(${1:handle})"},
		{"trigger": "reaper.JS_Window_ArrayAllChild", "contents": "reaper.JS_Window_ArrayAllChild(${1:parentHWND}, ${2:reaperarray})"},
		{"trigger": "reaper.JS_Window_ArrayAllTop", "contents": "reaper.JS_Window_ArrayAllTop(${1:reaperarray})"},
		{"trigger": "reaper.JS_Window_ArrayFind", "contents": "reaper.JS_Window_ArrayFind(${1:title}, ${2:exact}, ${3:reaperarray})"},
		{"trigger": "reaper.JS_Window_AttachResizeGrip", "contents": "reaper.JS_Window_AttachResizeGrip(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_AttachTopmostPin", "contents": "reaper.JS_Window_AttachTopmostPin(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_ClientToScreen", "contents": "reaper.JS_Window_ClientToScreen(${1:windowHWND}, ${2:x}, ${3:y})"},
		{"trigger": "reaper.JS_Window_Create", "contents": "reaper.JS_Window_Create(${1:title}, ${2:className}, ${3:x}, ${4:y}, ${5:w}, ${6:h}, ${7:style}, ${8:ownerHWND})"},
		{"trigger": "reaper.JS_Window_Destroy", "contents": "reaper.JS_Window_Destroy(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_Enable", "contents": "reaper.JS_Window_Enable(${1:windowHWND}, ${2:enable})"},
		{"trigger": "reaper.JS_Window_EnableMetal", "contents": "reaper.JS_Window_EnableMetal(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_Find", "contents": "reaper.JS_Window_Find(${1:title}, ${2:exact})"},
		{"trigger": "reaper.JS_Window_FindChild", "contents": "reaper.JS_Window_FindChild(${1:parentHWND}, ${2:title}, ${3:exact})"},
		{"trigger": "reaper.JS_Window_FindChildByID", "contents": "reaper.JS_Window_FindChildByID(${1:parentHWND}, ${2:ID})"},
		{"trigger": "reaper.JS_Window_FindEx", "contents": "reaper.JS_Window_FindEx(${1:parentHWND}, ${2:childHWND}, ${3:className}, ${4:title})"},
		{"trigger": "reaper.JS_Window_FindTop", "contents": "reaper.JS_Window_FindTop(${1:title}, ${2:exact})"},
		{"trigger": "reaper.JS_Window_FromPoint", "contents": "reaper.JS_Window_FromPoint(${1:x}, ${2:y})"},
		{"trigger": "reaper.JS_Window_GetClassName", "contents": "reaper.JS_Window_GetClassName(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetClientRect", "contents": "reaper.JS_Window_GetClientRect(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetClientSize", "contents": "reaper.JS_Window_GetClientSize(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetFocus", "contents": "reaper.JS_Window_GetFocus()"},
		{"trigger": "reaper.JS_Window_GetForeground", "contents": "reaper.JS_Window_GetForeground()"},
		{"trigger": "reaper.JS_Window_GetLong", "contents": "reaper.JS_Window_GetLong(${1:windowHWND}, ${2:info})"},
		{"trigger": "reaper.JS_Window_GetLongPtr", "contents": "reaper.JS_Window_GetLongPtr(${1:windowHWND}, ${2:info})"},
		{"trigger": "reaper.JS_Window_GetParent", "contents": "reaper.JS_Window_GetParent(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetRect", "contents": "reaper.JS_Window_GetRect(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetRelated", "contents": "reaper.JS_Window_GetRelated(${1:windowHWND}, ${2:relation})"},
		{"trigger": "reaper.JS_Window_GetScrollInfo", "contents": "reaper.JS_Window_GetScrollInfo(${1:windowHWND}, ${2:scrollbar})"},
		{"trigger": "reaper.JS_Window_GetTitle", "contents": "reaper.JS_Window_GetTitle(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_GetViewportFromRect", "contents": "reaper.JS_Window_GetViewportFromRect(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:wantWork})"},
		{"trigger": "reaper.JS_Window_HandleFromAddress", "contents": "reaper.JS_Window_HandleFromAddress(${1:address})"},
		{"trigger": "reaper.JS_Window_InvalidateRect", "contents": "reaper.JS_Window_InvalidateRect(${1:windowHWND}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom}, ${6:eraseBackground})"},
		{"trigger": "reaper.JS_Window_IsChild", "contents": "reaper.JS_Window_IsChild(${1:parentHWND}, ${2:childHWND})"},
		{"trigger": "reaper.JS_Window_IsVisible", "contents": "reaper.JS_Window_IsVisible(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_IsWindow", "contents": "reaper.JS_Window_IsWindow(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_ListAllChild", "contents": "reaper.JS_Window_ListAllChild(${1:parentHWND})"},
		{"trigger": "reaper.JS_Window_ListAllTop", "contents": "reaper.JS_Window_ListAllTop()"},
		{"trigger": "reaper.JS_Window_ListFind", "contents": "reaper.JS_Window_ListFind(${1:title}, ${2:exact})"},
		{"trigger": "reaper.JS_Window_MonitorFromRect", "contents": "reaper.JS_Window_MonitorFromRect(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:wantWork})"},
		{"trigger": "reaper.JS_Window_Move", "contents": "reaper.JS_Window_Move(${1:windowHWND}, ${2:left}, ${3:top})"},
		{"trigger": "reaper.JS_Window_OnCommand", "contents": "reaper.JS_Window_OnCommand(${1:windowHWND}, ${2:commandID})"},
		{"trigger": "reaper.JS_Window_Resize", "contents": "reaper.JS_Window_Resize(${1:windowHWND}, ${2:width}, ${3:height})"},
		{"trigger": "reaper.JS_Window_ScreenToClient", "contents": "reaper.JS_Window_ScreenToClient(${1:windowHWND}, ${2:x}, ${3:y})"},
		{"trigger": "reaper.JS_Window_SetFocus", "contents": "reaper.JS_Window_SetFocus(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_SetForeground", "contents": "reaper.JS_Window_SetForeground(${1:windowHWND})"},
		{"trigger": "reaper.JS_Window_SetLong", "contents": "reaper.JS_Window_SetLong(${1:windowHWND}, ${2:info}, ${3:value})"},
		{"trigger": "reaper.JS_Window_SetOpacity", "contents": "reaper.JS_Window_SetOpacity(${1:windowHWND}, ${2:mode}, ${3:value})"},
		{"trigger": "reaper.JS_Window_SetParent", "contents": "reaper.JS_Window_SetParent(${1:childHWND}, ${2:parentHWND})"},
		{"trigger": "reaper.JS_Window_SetPosition", "contents": "reaper.JS_Window_SetPosition(${1:windowHWND}, ${2:left}, ${3:top}, ${4:width}, ${5:height}, ${6:ZOrder}, ${7:flags})"},
		{"trigger": "reaper.JS_Window_SetScrollPos", "contents": "reaper.JS_Window_SetScrollPos(${1:windowHWND}, ${2:scrollbar}, ${3:position})"},
		{"trigger": "reaper.JS_Window_SetStyle", "contents": "reaper.JS_Window_SetStyle(${1:windowHWND}, ${2:style})"},
		{"trigger": "reaper.JS_Window_SetTitle", "contents": "reaper.JS_Window_SetTitle(${1:windowHWND}, ${2:title})"},
		{"trigger": "reaper.JS_Window_SetZOrder", "contents": "reaper.JS_Window_SetZOrder(${1:windowHWND}, ${2:ZOrder}, ${3:insertAfterHWND})"},
		{"trigger": "reaper.JS_Window_Show", "contents": "reaper.JS_Window_Show(${1:windowHWND}, ${2:state})"},
		{"trigger": "reaper.JS_Window_Update", "contents": "reaper.JS_Window_Update(${1:windowHWND})"},
		{"trigger": "reaper.JS_WindowMessage_Intercept", "contents": "reaper.JS_WindowMessage_Intercept(${1:windowHWND}, ${2:message}, ${3:passThrough})"},
		{"trigger": "reaper.JS_WindowMessage_InterceptList", "contents": "reaper.JS_WindowMessage_InterceptList(${1:windowHWND}, ${2:messages})"},
		{"trigger": "reaper.JS_WindowMessage_ListIntercepts", "contents": "reaper.JS_WindowMessage_ListIntercepts(${1:windowHWND})"},
		{"trigger": "reaper.JS_WindowMessage_PassThrough", "contents": "reaper.JS_WindowMessage_PassThrough(${1:windowHWND}, ${2:message}, ${3:passThrough})"},
		{"trigger": "reaper.JS_WindowMessage_Peek", "contents": "reaper.JS_WindowMessage_Peek(${1:windowHWND}, ${2:message})"},
		{"trigger": "reaper.JS_WindowMessage_Post", "contents": "reaper.JS_WindowMessage_Post(${1:windowHWND}, ${2:message}, ${3:wParam}, ${4:wParamHighWord}, ${5:lParam}, ${6:lParamHighWord})"},
		{"trigger": "reaper.JS_WindowMessage_Release", "contents": "reaper.JS_WindowMessage_Release(${1:windowHWND}, ${2:messages})"},
		{"trigger": "reaper.JS_WindowMessage_ReleaseAll", "contents": "reaper.JS_WindowMessage_ReleaseAll()"},
		{"trigger": "reaper.JS_WindowMessage_ReleaseWindow", "contents": "reaper.JS_WindowMessage_ReleaseWindow(${1:windowHWND})"},
		{"trigger": "reaper.JS_WindowMessage_Send", "contents": "reaper.JS_WindowMessage_Send(${1:windowHWND}, ${2:message}, ${3:wParam}, ${4:wParamHighWord}, ${5:lParam}, ${6:lParamHighWord})"},
		{"trigger": "reaper.LICE_ClipLine", "contents": "reaper.LICE_ClipLine(${1:pX1}, ${2:pY1}, ${3:pX2}, ${4:pY2}, ${5:xLo}, ${6:yLo}, ${7:xHi}, ${8:yHi})"},
		{"trigger": "gfx.line", "contents": "gfx.line(${1:x}, ${2:y}, ${3:x2}, ${4:y2}, ${5:aa})"},
		{"trigger": "gfx.lineto", "contents": "gfx.lineto(${1:x}, ${2:y}, ${3:aa})"},
		{"trigger": "gfx.loadimg", "contents": "gfx.loadimg(${1:image}, ${2:filename})"},
		{"trigger": "reaper.LocalizeString", "contents": "reaper.LocalizeString(${1:src_string}, ${2:section}, ${3:flags})"},
		{"trigger": "reaper.Loop_OnArrow", "contents": "reaper.Loop_OnArrow(${1:project}, ${2:direction})"},
		{"trigger": "reaper.Main_OnCommand", "contents": "reaper.Main_OnCommand(${1:command}, ${2:flag})"},
		{"trigger": "reaper.Main_OnCommandEx", "contents": "reaper.Main_OnCommandEx(${1:command}, ${2:flag}, ${3:proj})"},
		{"trigger": "reaper.Main_openProject", "contents": "reaper.Main_openProject(${1:name})"},
		{"trigger": "reaper.Main_SaveProject", "contents": "reaper.Main_SaveProject(${1:proj}, ${2:forceSaveAsIn})"},
		{"trigger": "reaper.Main_UpdateLoopInfo", "contents": "reaper.Main_UpdateLoopInfo(${1:ignoremask})"},
		{"trigger": "reaper.MarkProjectDirty", "contents": "reaper.MarkProjectDirty(${1:proj})"},
		{"trigger": "reaper.MarkTrackItemsDirty", "contents": "reaper.MarkTrackItemsDirty(${1:track}, ${2:item})"},
		{"trigger": "reaper.Master_GetPlayRate", "contents": "reaper.Master_GetPlayRate(${1:project})"},
		{"trigger": "reaper.Master_GetPlayRateAtTime", "contents": "reaper.Master_GetPlayRateAtTime(${1:time_s}, ${2:proj})"},
		{"trigger": "reaper.Master_GetTempo", "contents": "reaper.Master_GetTempo()"},
		{"trigger": "reaper.Master_NormalizePlayRate", "contents": "reaper.Master_NormalizePlayRate(${1:playrate}, ${2:isnormalized})"},
		{"trigger": "reaper.Master_NormalizeTempo", "contents": "reaper.Master_NormalizeTempo(${1:bpm}, ${2:isnormalized})"},
		{"trigger": "reaper.MB", "contents": "reaper.MB(${1:msg}, ${2:title}, ${3:type})"},
		{"trigger": "gfx.measurechar", "contents": "gfx.measurechar(${1:char})"},
		{"trigger": "gfx.measurestr", "contents": "gfx.measurestr(${1:str})"},
		{"trigger": "reaper.MediaItemDescendsFromTrack", "contents": "reaper.MediaItemDescendsFromTrack(${1:item}, ${2:track})"},
		{"trigger": "reaper.MIDI_CountEvts", "contents": "reaper.MIDI_CountEvts(${1:take})"},
		{"trigger": "reaper.MIDI_DeleteCC", "contents": "reaper.MIDI_DeleteCC(${1:take}, ${2:ccidx})"},
		{"trigger": "reaper.MIDI_DeleteEvt", "contents": "reaper.MIDI_DeleteEvt(${1:take}, ${2:evtidx})"},
		{"trigger": "reaper.MIDI_DeleteNote", "contents": "reaper.MIDI_DeleteNote(${1:take}, ${2:noteidx})"},
		{"trigger": "reaper.MIDI_DeleteTextSysexEvt", "contents": "reaper.MIDI_DeleteTextSysexEvt(${1:take}, ${2:textsyxevtidx})"},
		{"trigger": "reaper.MIDI_DisableSort", "contents": "reaper.MIDI_DisableSort(${1:take})"},
		{"trigger": "reaper.MIDI_EnumSelCC", "contents": "reaper.MIDI_EnumSelCC(${1:take}, ${2:ccidx})"},
		{"trigger": "reaper.MIDI_EnumSelEvts", "contents": "reaper.MIDI_EnumSelEvts(${1:take}, ${2:evtidx})"},
		{"trigger": "reaper.MIDI_EnumSelNotes", "contents": "reaper.MIDI_EnumSelNotes(${1:take}, ${2:noteidx})"},
		{"trigger": "reaper.MIDI_EnumSelTextSysexEvts", "contents": "reaper.MIDI_EnumSelTextSysexEvts(${1:take}, ${2:textsyxidx})"},
		{"trigger": "reaper.MIDI_GetAllEvts", "contents": "reaper.MIDI_GetAllEvts(${1:take}, ${2:buf})"},
		{"trigger": "reaper.MIDI_GetCC", "contents": "reaper.MIDI_GetCC(${1:take}, ${2:ccidx})"},
		{"trigger": "reaper.MIDI_GetCCShape", "contents": "reaper.MIDI_GetCCShape(${1:take}, ${2:ccidx})"},
		{"trigger": "reaper.MIDI_GetEvt", "contents": "reaper.MIDI_GetEvt(${1:take}, ${2:evtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:msg})"},
		{"trigger": "reaper.MIDI_GetGrid", "contents": "reaper.MIDI_GetGrid(${1:take})"},
		{"trigger": "reaper.MIDI_GetHash", "contents": "reaper.MIDI_GetHash(${1:take}, ${2:notesonly}, ${3:hash})"},
		{"trigger": "reaper.MIDI_GetNote", "contents": "reaper.MIDI_GetNote(${1:take}, ${2:noteidx})"},
		{"trigger": "reaper.MIDI_GetPPQPos_EndOfMeasure", "contents": "reaper.MIDI_GetPPQPos_EndOfMeasure(${1:take}, ${2:ppqpos})"},
		{"trigger": "reaper.MIDI_GetPPQPos_StartOfMeasure", "contents": "reaper.MIDI_GetPPQPos_StartOfMeasure(${1:take}, ${2:ppqpos})"},
		{"trigger": "reaper.MIDI_GetPPQPosFromProjQN", "contents": "reaper.MIDI_GetPPQPosFromProjQN(${1:take}, ${2:projqn})"},
		{"trigger": "reaper.MIDI_GetPPQPosFromProjTime", "contents": "reaper.MIDI_GetPPQPosFromProjTime(${1:take}, ${2:projtime})"},
		{"trigger": "reaper.MIDI_GetProjQNFromPPQPos", "contents": "reaper.MIDI_GetProjQNFromPPQPos(${1:take}, ${2:ppqpos})"},
		{"trigger": "reaper.MIDI_GetProjTimeFromPPQPos", "contents": "reaper.MIDI_GetProjTimeFromPPQPos(${1:take}, ${2:ppqpos})"},
		{"trigger": "reaper.MIDI_GetScale", "contents": "reaper.MIDI_GetScale(${1:take}, ${2:root}, ${3:scale}, ${4:name})"},
		{"trigger": "reaper.MIDI_GetTextSysexEvt", "contents": "reaper.MIDI_GetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:type}, ${7:msg})"},
		{"trigger": "reaper.MIDI_GetTrackHash", "contents": "reaper.MIDI_GetTrackHash(${1:track}, ${2:notesonly}, ${3:hash})"},
		{"trigger": "reaper.MIDI_InsertCC", "contents": "reaper.MIDI_InsertCC(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:chanmsg}, ${6:chan}, ${7:msg2}, ${8:msg3})"},
		{"trigger": "reaper.MIDI_InsertEvt", "contents": "reaper.MIDI_InsertEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:bytestr})"},
		{"trigger": "reaper.MIDI_InsertNote", "contents": "reaper.MIDI_InsertNote(${1:take}, ${2:selected}, ${3:muted}, ${4:startppqpos}, ${5:endppqpos}, ${6:chan}, ${7:pitch}, ${8:vel}, ${9:noSortIn})"},
		{"trigger": "reaper.MIDI_InsertTextSysexEvt", "contents": "reaper.MIDI_InsertTextSysexEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:type}, ${6:bytestr})"},
		{"trigger": "reaper.midi_reinit", "contents": "reaper.midi_reinit()"},
		{"trigger": "reaper.MIDI_SelectAll", "contents": "reaper.MIDI_SelectAll(${1:take}, ${2:select})"},
		{"trigger": "reaper.MIDI_SetAllEvts", "contents": "reaper.MIDI_SetAllEvts(${1:take}, ${2:buf})"},
		{"trigger": "reaper.MIDI_SetCC", "contents": "reaper.MIDI_SetCC(${1:take}, ${2:ccidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:chanmsgIn}, ${7:chanIn}, ${8:msg2In}, ${9:msg3In}, ${10:noSortIn})"},
		{"trigger": "reaper.MIDI_SetCCShape", "contents": "reaper.MIDI_SetCCShape(${1:take}, ${2:ccidx}, ${3:shape}, ${4:beztension}, ${5:noSortIn})"},
		{"trigger": "reaper.MIDI_SetEvt", "contents": "reaper.MIDI_SetEvt(${1:take}, ${2:evtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:msg}, ${7:noSortIn})"},
		{"trigger": "reaper.MIDI_SetItemExtents", "contents": "reaper.MIDI_SetItemExtents(${1:item}, ${2:startQN}, ${3:endQN})"},
		{"trigger": "reaper.MIDI_SetNote", "contents": "reaper.MIDI_SetNote(${1:take}, ${2:noteidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:startppqposIn}, ${6:endppqposIn}, ${7:chanIn}, ${8:pitchIn}, ${9:velIn}, ${10:noSortIn})"},
		{"trigger": "reaper.MIDI_SetTextSysexEvt", "contents": "reaper.MIDI_SetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:typeIn}, ${7:msg}, ${8:noSortIn})"},
		{"trigger": "reaper.MIDI_Sort", "contents": "reaper.MIDI_Sort(${1:take})"},
		{"trigger": "reaper.MIDIEditor_GetActive", "contents": "reaper.MIDIEditor_GetActive()"},
		{"trigger": "reaper.MIDIEditor_GetMode", "contents": "reaper.MIDIEditor_GetMode(${1:midieditor})"},
		{"trigger": "reaper.MIDIEditor_GetSetting_int", "contents": "reaper.MIDIEditor_GetSetting_int(${1:midieditor}, ${2:setting_desc})"},
		{"trigger": "reaper.MIDIEditor_GetSetting_str", "contents": "reaper.MIDIEditor_GetSetting_str(${1:midieditor}, ${2:setting_desc}, ${3:buf})"},
		{"trigger": "reaper.MIDIEditor_GetTake", "contents": "reaper.MIDIEditor_GetTake(${1:midieditor})"},
		{"trigger": "reaper.MIDIEditor_LastFocused_OnCommand", "contents": "reaper.MIDIEditor_LastFocused_OnCommand(${1:command_id}, ${2:islistviewcommand})"},
		{"trigger": "reaper.MIDIEditor_OnCommand", "contents": "reaper.MIDIEditor_OnCommand(${1:midieditor}, ${2:command_id})"},
		{"trigger": "reaper.MIDIEditor_SetSetting_int", "contents": "reaper.MIDIEditor_SetSetting_int(${1:midieditor}, ${2:setting_desc}, ${3:setting})"},
		{"trigger": "reaper.mkpanstr", "contents": "reaper.mkpanstr(${1:strNeed64}, ${2:pan})"},
		{"trigger": "reaper.mkvolpanstr", "contents": "reaper.mkvolpanstr(${1:strNeed64}, ${2:vol}, ${3:pan})"},
		{"trigger": "reaper.mkvolstr", "contents": "reaper.mkvolstr(${1:strNeed64}, ${2:vol})"},
		{"trigger": "reaper.MoveEditCursor", "contents": "reaper.MoveEditCursor(${1:adjamt}, ${2:dosel})"},
		{"trigger": "reaper.MoveMediaItemToTrack", "contents": "reaper.MoveMediaItemToTrack(${1:item}, ${2:desttr})"},
		{"trigger": "gfx.muladdrect", "contents": "gfx.muladdrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:mul_r}, ${6:mul_g}, ${7:mul_b}, ${8:mul_a}, ${9:add_r}, ${10:add_g}, ${11:add_b}, ${12:add_a})"},
		{"trigger": "multiply", "contents": "multiply(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"},
		{"trigger": "reaper.MuteAllTracks", "contents": "reaper.MuteAllTracks(${1:mute})"},
		{"trigger": "reaper.my_getViewport", "contents": "reaper.my_getViewport(${1:numberr.left}, ${2:numberr.top}, ${3:numberr.right}, ${4:numberr.bot}, ${5:sr.left}, ${6:sr.top}, ${7:sr.right}, ${8:sr.bot}, ${9:wantWorkArea})"},
		{"trigger": "reaper.NamedCommandLookup", "contents": "reaper.NamedCommandLookup(${1:command_name})"},
		{"trigger": "reaper.new_array", "contents": "reaper.new_array(${1:table|arraysize})"},
		{"trigger": "reaper.NF_AnalyzeMediaItemPeakAndRMS", "contents": "reaper.NF_AnalyzeMediaItemPeakAndRMS(${1:item}, ${2:windowSize}, ${3:reaper.array_peaks}, ${4:reaper.array_peakpositions}, ${5:reaper.array_RMSs}, ${6:reaper.array_RMSpositions})"},
		{"trigger": "reaper.NF_AnalyzeTakeLoudness", "contents": "reaper.NF_AnalyzeTakeLoudness(${1:take}, ${2:analyzeTruePeak})"},
		{"trigger": "reaper.NF_AnalyzeTakeLoudness2", "contents": "reaper.NF_AnalyzeTakeLoudness2(${1:take}, ${2:analyzeTruePeak})"},
		{"trigger": "reaper.NF_AnalyzeTakeLoudness_IntegratedOnly", "contents": "reaper.NF_AnalyzeTakeLoudness_IntegratedOnly(${1:take})"},
		{"trigger": "reaper.NF_GetMediaItemAverageRMS", "contents": "reaper.NF_GetMediaItemAverageRMS(${1:item})"},
		{"trigger": "reaper.NF_GetMediaItemMaxPeak", "contents": "reaper.NF_GetMediaItemMaxPeak(${1:item})"},
		{"trigger": "reaper.NF_GetMediaItemMaxPeakAndMaxPeakPos", "contents": "reaper.NF_GetMediaItemMaxPeakAndMaxPeakPos(${1:item})"},
		{"trigger": "reaper.NF_GetMediaItemPeakRMS_NonWindowed", "contents": "reaper.NF_GetMediaItemPeakRMS_NonWindowed(${1:item})"},
		{"trigger": "reaper.NF_GetMediaItemPeakRMS_Windowed", "contents": "reaper.NF_GetMediaItemPeakRMS_Windowed(${1:item})"},
		{"trigger": "reaper.NF_GetSWS_RMSoptions", "contents": "reaper.NF_GetSWS_RMSoptions()"},
		{"trigger": "reaper.NF_GetSWSMarkerRegionSub", "contents": "reaper.NF_GetSWSMarkerRegionSub(${1:markerRegionIdx})"},
		{"trigger": "reaper.NF_GetSWSTrackNotes", "contents": "reaper.NF_GetSWSTrackNotes(${1:track})"},
		{"trigger": "reaper.NF_SetSWS_RMSoptions", "contents": "reaper.NF_SetSWS_RMSoptions(${1:targetLevel}, ${2:windowSize})"},
		{"trigger": "reaper.NF_SetSWSMarkerRegionSub", "contents": "reaper.NF_SetSWSMarkerRegionSub(${1:markerRegionSub}, ${2:markerRegionIdx})"},
		{"trigger": "reaper.NF_SetSWSTrackNotes", "contents": "reaper.NF_SetSWSTrackNotes(${1:track}, ${2:str})"},
		{"trigger": "reaper.NF_TakeFX_GetFXModuleName", "contents": "reaper.NF_TakeFX_GetFXModuleName(${1:item}, ${2:fx})"},
		{"trigger": "reaper.NF_UpdateSWSMarkerRegionSubWindow", "contents": "reaper.NF_UpdateSWSMarkerRegionSubWindow()"},
		{"trigger": "reaper.NF_Win32_GetSystemMetrics", "contents": "reaper.NF_Win32_GetSystemMetrics(${1:nIndex})"},
		{"trigger": "reaper.OnPauseButton", "contents": "reaper.OnPauseButton()"},
		{"trigger": "reaper.OnPauseButtonEx", "contents": "reaper.OnPauseButtonEx(${1:proj})"},
		{"trigger": "reaper.OnPlayButton", "contents": "reaper.OnPlayButton()"},
		{"trigger": "reaper.OnPlayButtonEx", "contents": "reaper.OnPlayButtonEx(${1:proj})"},
		{"trigger": "reaper.OnStopButton", "contents": "reaper.OnStopButton()"},
		{"trigger": "reaper.OnStopButtonEx", "contents": "reaper.OnStopButtonEx(${1:proj})"},
		{"trigger": "reaper.OpenColorThemeFile", "contents": "reaper.OpenColorThemeFile(${1:fn})"},
		{"trigger": "reaper.OpenMediaExplorer", "contents": "reaper.OpenMediaExplorer(${1:mediafn}, ${2:play})"},
		{"trigger": "reaper.OscLocalMessageToHost", "contents": "reaper.OscLocalMessageToHost(${1:message}, ${2:valueIn})"},
		{"trigger": "reaper.parse_timestr", "contents": "reaper.parse_timestr(${1:buf})"},
		{"trigger": "reaper.parse_timestr_len", "contents": "reaper.parse_timestr_len(${1:buf}, ${2:offset}, ${3:modeoverride})"},
		{"trigger": "reaper.parse_timestr_pos", "contents": "reaper.parse_timestr_pos(${1:buf}, ${2:modeoverride})"},
		{"trigger": "reaper.parsepanstr", "contents": "reaper.parsepanstr(${1:str})"},
		{"trigger": "reaper.PCM_Sink_Enum", "contents": "reaper.PCM_Sink_Enum(${1:idx})"},
		{"trigger": "reaper.PCM_Sink_GetExtension", "contents": "reaper.PCM_Sink_GetExtension(${1:data})"},
		{"trigger": "reaper.PCM_Sink_ShowConfig", "contents": "reaper.PCM_Sink_ShowConfig(${1:cfg}, ${2:hwndParent})"},
		{"trigger": "reaper.PCM_Source_CreateFromFile", "contents": "reaper.PCM_Source_CreateFromFile(${1:filename})"},
		{"trigger": "reaper.PCM_Source_CreateFromFileEx", "contents": "reaper.PCM_Source_CreateFromFileEx(${1:filename}, ${2:forcenoMidiImp})"},
		{"trigger": "reaper.PCM_Source_CreateFromType", "contents": "reaper.PCM_Source_CreateFromType(${1:sourcetype})"},
		{"trigger": "reaper.PCM_Source_Destroy", "contents": "reaper.PCM_Source_Destroy(${1:src})"},
		{"trigger": "reaper.PCM_Source_GetPeaks", "contents": "reaper.PCM_Source_GetPeaks(${1:src}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"},
		{"trigger": "reaper.PCM_Source_GetSectionInfo", "contents": "reaper.PCM_Source_GetSectionInfo(${1:src})"},
		{"trigger": "reaper.PluginWantsAlwaysRunFx", "contents": "reaper.PluginWantsAlwaysRunFx(${1:amt})"},
		{"trigger": "reaper.PreventUIRefresh", "contents": "reaper.PreventUIRefresh(${1:prevent_count})"},
		{"trigger": "gfx.printf", "contents": "gfx.printf(${1:format})"},
		{"trigger": "reaper.PromptForAction", "contents": "reaper.PromptForAction(${1:session_mode}, ${2:init_id}, ${3:section_id})"},
		{"trigger": "gfx.quit", "contents": "gfx.quit()"},
		{"trigger": "reaper.ReaPack_AboutInstalledPackage", "contents": "reaper.ReaPack_AboutInstalledPackage(${1:entry})"},
		{"trigger": "reaper.ReaPack_AboutRepository", "contents": "reaper.ReaPack_AboutRepository(${1:repoName})"},
		{"trigger": "reaper.ReaPack_AddSetRepository", "contents": "reaper.ReaPack_AddSetRepository(${1:name}, ${2:url}, ${3:enable}, ${4:autoInstall})"},
		{"trigger": "reaper.ReaPack_BrowsePackages", "contents": "reaper.ReaPack_BrowsePackages(${1:filter})"},
		{"trigger": "reaper.ReaPack_CompareVersions", "contents": "reaper.ReaPack_CompareVersions(${1:ver1}, ${2:ver2})"},
		{"trigger": "reaper.ReaPack_EnumOwnedFiles", "contents": "reaper.ReaPack_EnumOwnedFiles(${1:entry}, ${2:index})"},
		{"trigger": "reaper.ReaPack_FreeEntry", "contents": "reaper.ReaPack_FreeEntry(${1:entry})"},
		{"trigger": "reaper.ReaPack_GetEntryInfo", "contents": "reaper.ReaPack_GetEntryInfo(${1:entry})"},
		{"trigger": "reaper.ReaPack_GetOwner", "contents": "reaper.ReaPack_GetOwner(${1:fn})"},
		{"trigger": "reaper.ReaPack_GetRepositoryInfo", "contents": "reaper.ReaPack_GetRepositoryInfo(${1:name})"},
		{"trigger": "reaper.ReaPack_ProcessQueue", "contents": "reaper.ReaPack_ProcessQueue(${1:refreshUI})"},
		{"trigger": "reaper.ReaScriptError", "contents": "reaper.ReaScriptError(${1:errmsg})"},
		{"trigger": "gfx.rect", "contents": "gfx.rect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:filled})"},
		{"trigger": "gfx.rectto", "contents": "gfx.rectto(${1:x}, ${2:y})"},
		{"trigger": "reaper.RecursiveCreateDirectory", "contents": "reaper.RecursiveCreateDirectory(${1:path}, ${2:ignored})"},
		{"trigger": "reaper.reduce_open_files", "contents": "reaper.reduce_open_files(${1:flags})"},
		{"trigger": "reaper.RefreshToolbar", "contents": "reaper.RefreshToolbar(${1:command_id})"},
		{"trigger": "reaper.RefreshToolbar2", "contents": "reaper.RefreshToolbar2(${1:section_id}, ${2:command_id})"},
		{"trigger": "reaper.relative_fn", "contents": "reaper.relative_fn(${1:in}, ${2:out})"},
		{"trigger": "reaper.RemoveTrackSend", "contents": "reaper.RemoveTrackSend(${1:tr}, ${2:category}, ${3:sendidx})"},
		{"trigger": "reaper.RenderFileSection", "contents": "reaper.RenderFileSection(${1:source_filename}, ${2:target_filename}, ${3:start_percent}, ${4:end_percent}, ${5:playrate})"},
		{"trigger": "reaper.ReorderSelectedTracks", "contents": "reaper.ReorderSelectedTracks(${1:beforeTrackIdx}, ${2:makePrevFolder})"},
		{"trigger": "reaper.Resample_EnumModes", "contents": "reaper.Resample_EnumModes(${1:mode})"},
		{"trigger": "resize", "contents": "resize(${1:size})"},
		{"trigger": "reaper.resolve_fn", "contents": "reaper.resolve_fn(${1:in}, ${2:out})"},
		{"trigger": "reaper.resolve_fn2", "contents": "reaper.resolve_fn2(${1:in}, ${2:out}, ${3:checkSubDir})"},
		{"trigger": "reaper.ReverseNamedCommandLookup", "contents": "reaper.ReverseNamedCommandLookup(${1:command_id})"},
		{"trigger": "gfx.roundrect", "contents": "gfx.roundrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:radius}, ${6:antialias})"},
		{"trigger": "reaper.runloop", "contents": "reaper.runloop(${1:function})"},
		{"trigger": "reaper.ScaleFromEnvelopeMode", "contents": "reaper.ScaleFromEnvelopeMode(${1:scaling_mode}, ${2:val})"},
		{"trigger": "reaper.ScaleToEnvelopeMode", "contents": "reaper.ScaleToEnvelopeMode(${1:scaling_mode}, ${2:val})"},
		{"trigger": "gfx.screentoclient", "contents": "gfx.screentoclient(${1:x}, ${2:y})"},
		{"trigger": "reaper.SelectAllMediaItems", "contents": "reaper.SelectAllMediaItems(${1:proj}, ${2:selected})"},
		{"trigger": "reaper.SelectProjectInstance", "contents": "reaper.SelectProjectInstance(${1:proj})"},
		{"trigger": "gfx.set", "contents": "gfx.set(${1:r}, ${2:g}, ${3:b}, ${4:a}, ${5:mode}, ${6:dest}, ${7:a2})"},
		{"trigger": "reaper.SetActiveTake", "contents": "reaper.SetActiveTake(${1:take})"},
		{"trigger": "reaper.SetAutomationMode", "contents": "reaper.SetAutomationMode(${1:mode}, ${2:onlySel})"},
		{"trigger": "reaper.SetCurrentBPM", "contents": "reaper.SetCurrentBPM(${1:__proj}, ${2:bpm}, ${3:wantUndo})"},
		{"trigger": "gfx.setcursor", "contents": "gfx.setcursor(${1:resource_id}, ${2:custom_cursor_name})"},
		{"trigger": "reaper.SetCursorContext", "contents": "reaper.SetCursorContext(${1:mode}, ${2:envIn})"},
		{"trigger": "reaper.SetEditCurPos", "contents": "reaper.SetEditCurPos(${1:time}, ${2:moveview}, ${3:seekplay})"},
		{"trigger": "reaper.SetEditCurPos2", "contents": "reaper.SetEditCurPos2(${1:proj}, ${2:time}, ${3:moveview}, ${4:seekplay})"},
		{"trigger": "reaper.SetEnvelopePoint", "contents": "reaper.SetEnvelopePoint(${1:envelope}, ${2:ptidx}, ${3:timeIn}, ${4:valueIn}, ${5:shapeIn}, ${6:tensionIn}, ${7:selectedIn}, ${8:noSortIn})"},
		{"trigger": "reaper.SetEnvelopePointEx", "contents": "reaper.SetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx}, ${4:timeIn}, ${5:valueIn}, ${6:shapeIn}, ${7:tensionIn}, ${8:selectedIn}, ${9:noSortIn})"},
		{"trigger": "reaper.SetEnvelopeStateChunk", "contents": "reaper.SetEnvelopeStateChunk(${1:env}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.SetExtState", "contents": "reaper.SetExtState(${1:section}, ${2:key}, ${3:value}, ${4:persist})"},
		{"trigger": "gfx.setfont", "contents": "gfx.setfont(${1:idx}, ${2:fontface}, ${3:sz}, ${4:flags})"},
		{"trigger": "reaper.SetGlobalAutomationOverride", "contents": "reaper.SetGlobalAutomationOverride(${1:mode})"},
		{"trigger": "gfx.setimgdim", "contents": "gfx.setimgdim(${1:image}, ${2:w}, ${3:h})"},
		{"trigger": "reaper.SetItemStateChunk", "contents": "reaper.SetItemStateChunk(${1:item}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.SetMasterTrackVisibility", "contents": "reaper.SetMasterTrackVisibility(${1:flag})"},
		{"trigger": "reaper.SetMediaItemInfo_Value", "contents": "reaper.SetMediaItemInfo_Value(${1:item}, ${2:parmname}, ${3:newvalue})"},
		{"trigger": "reaper.SetMediaItemLength", "contents": "reaper.SetMediaItemLength(${1:item}, ${2:length}, ${3:refreshUI})"},
		{"trigger": "reaper.SetMediaItemPosition", "contents": "reaper.SetMediaItemPosition(${1:item}, ${2:position}, ${3:refreshUI})"},
		{"trigger": "reaper.SetMediaItemSelected", "contents": "reaper.SetMediaItemSelected(${1:item}, ${2:selected})"},
		{"trigger": "reaper.SetMediaItemTake_Source", "contents": "reaper.SetMediaItemTake_Source(${1:take}, ${2:source})"},
		{"trigger": "reaper.SetMediaItemTakeInfo_Value", "contents": "reaper.SetMediaItemTakeInfo_Value(${1:take}, ${2:parmname}, ${3:newvalue})"},
		{"trigger": "reaper.SetMediaTrackInfo_Value", "contents": "reaper.SetMediaTrackInfo_Value(${1:tr}, ${2:parmname}, ${3:newvalue})"},
		{"trigger": "reaper.SetMIDIEditorGrid", "contents": "reaper.SetMIDIEditorGrid(${1:project}, ${2:division})"},
		{"trigger": "reaper.SetMixerScroll", "contents": "reaper.SetMixerScroll(${1:leftmosttrack})"},
		{"trigger": "reaper.SetMouseModifier", "contents": "reaper.SetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:action})"},
		{"trigger": "reaper.SetOnlyTrackSelected", "contents": "reaper.SetOnlyTrackSelected(${1:track})"},
		{"trigger": "gfx.setpixel", "contents": "gfx.setpixel(${1:r}, ${2:g}, ${3:b})"},
		{"trigger": "reaper.SetProjectGrid", "contents": "reaper.SetProjectGrid(${1:project}, ${2:division})"},
		{"trigger": "reaper.SetProjectMarker", "contents": "reaper.SetProjectMarker(${1:markrgnindexnumber}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name})"},
		{"trigger": "reaper.SetProjectMarker2", "contents": "reaper.SetProjectMarker2(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name})"},
		{"trigger": "reaper.SetProjectMarker3", "contents": "reaper.SetProjectMarker3(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color})"},
		{"trigger": "reaper.SetProjectMarker4", "contents": "reaper.SetProjectMarker4(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color}, ${8:flags})"},
		{"trigger": "reaper.SetProjectMarkerByIndex", "contents": "reaper.SetProjectMarkerByIndex(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color})"},
		{"trigger": "reaper.SetProjectMarkerByIndex2", "contents": "reaper.SetProjectMarkerByIndex2(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color}, ${9:flags})"},
		{"trigger": "reaper.SetProjExtState", "contents": "reaper.SetProjExtState(${1:proj}, ${2:extname}, ${3:key}, ${4:value})"},
		{"trigger": "reaper.SetRegionRenderMatrix", "contents": "reaper.SetRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:track}, ${4:addorremove})"},
		{"trigger": "reaper.SetTakeMarker", "contents": "reaper.SetTakeMarker(${1:take}, ${2:idx}, ${3:nameIn}, ${4:srcposIn}, ${5:colorIn})"},
		{"trigger": "reaper.SetTakeStretchMarker", "contents": "reaper.SetTakeStretchMarker(${1:take}, ${2:idx}, ${3:pos}, ${4:srcposIn})"},
		{"trigger": "reaper.SetTakeStretchMarkerSlope", "contents": "reaper.SetTakeStretchMarkerSlope(${1:take}, ${2:idx}, ${3:slope})"},
		{"trigger": "reaper.SetTempoTimeSigMarker", "contents": "reaper.SetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timepos}, ${4:measurepos}, ${5:beatpos}, ${6:bpm}, ${7:timesig_num}, ${8:timesig_denom}, ${9:lineartempo})"},
		{"trigger": "reaper.SetThemeColor", "contents": "reaper.SetThemeColor(${1:ini_key}, ${2:color}, ${3:flags})"},
		{"trigger": "reaper.SetToggleCommandState", "contents": "reaper.SetToggleCommandState(${1:section_id}, ${2:command_id}, ${3:state})"},
		{"trigger": "reaper.SetTrackAutomationMode", "contents": "reaper.SetTrackAutomationMode(${1:tr}, ${2:mode})"},
		{"trigger": "reaper.SetTrackColor", "contents": "reaper.SetTrackColor(${1:track}, ${2:color})"},
		{"trigger": "reaper.SetTrackMIDILyrics", "contents": "reaper.SetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:str})"},
		{"trigger": "reaper.SetTrackMIDINoteName", "contents": "reaper.SetTrackMIDINoteName(${1:track}, ${2:pitch}, ${3:chan}, ${4:name})"},
		{"trigger": "reaper.SetTrackMIDINoteNameEx", "contents": "reaper.SetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:pitch}, ${4:chan}, ${5:name})"},
		{"trigger": "reaper.SetTrackSelected", "contents": "reaper.SetTrackSelected(${1:track}, ${2:selected})"},
		{"trigger": "reaper.SetTrackSendInfo_Value", "contents": "reaper.SetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:parmname}, ${5:newvalue})"},
		{"trigger": "reaper.SetTrackSendUIPan", "contents": "reaper.SetTrackSendUIPan(${1:track}, ${2:send_idx}, ${3:pan}, ${4:isend})"},
		{"trigger": "reaper.SetTrackSendUIVol", "contents": "reaper.SetTrackSendUIVol(${1:track}, ${2:send_idx}, ${3:vol}, ${4:isend})"},
		{"trigger": "reaper.SetTrackStateChunk", "contents": "reaper.SetTrackStateChunk(${1:track}, ${2:str}, ${3:isundo})"},
		{"trigger": "reaper.ShowActionList", "contents": "reaper.ShowActionList(${1:caller}, ${2:callerWnd})"},
		{"trigger": "reaper.ShowConsoleMsg", "contents": "reaper.ShowConsoleMsg(${1:msg})"},
		{"trigger": "gfx.showmenu", "contents": "gfx.showmenu(${1:str})"},
		{"trigger": "reaper.ShowMessageBox", "contents": "reaper.ShowMessageBox(${1:msg}, ${2:title}, ${3:type})"},
		{"trigger": "reaper.ShowPopupMenu", "contents": "reaper.ShowPopupMenu(${1:name}, ${2:x}, ${3:y}, ${4:hwndParent}, ${5:ctx}, ${6:ctx2}, ${7:ctx3})"},
		{"trigger": "reaper.SLIDER2DB", "contents": "reaper.SLIDER2DB(${1:y})"},
		{"trigger": "reaper.SN_FocusMIDIEditor", "contents": "reaper.SN_FocusMIDIEditor()"},
		{"trigger": "reaper.SnapToGrid", "contents": "reaper.SnapToGrid(${1:project}, ${2:time_pos})"},
		{"trigger": "reaper.SNM_AddReceive", "contents": "reaper.SNM_AddReceive(${1:src}, ${2:dest}, ${3:type})"},
		{"trigger": "reaper.SNM_AddTCPFXParm", "contents": "reaper.SNM_AddTCPFXParm(${1:tr}, ${2:fxId}, ${3:prmId})"},
		{"trigger": "reaper.SNM_CreateFastString", "contents": "reaper.SNM_CreateFastString(${1:str})"},
		{"trigger": "reaper.SNM_DeleteFastString", "contents": "reaper.SNM_DeleteFastString(${1:str})"},
		{"trigger": "reaper.SNM_GetDoubleConfigVar", "contents": "reaper.SNM_GetDoubleConfigVar(${1:varname}, ${2:errvalue})"},
		{"trigger": "reaper.SNM_GetFastString", "contents": "reaper.SNM_GetFastString(${1:str})"},
		{"trigger": "reaper.SNM_GetFastStringLength", "contents": "reaper.SNM_GetFastStringLength(${1:str})"},
		{"trigger": "reaper.SNM_GetIntConfigVar", "contents": "reaper.SNM_GetIntConfigVar(${1:varname}, ${2:errvalue})"},
		{"trigger": "reaper.SNM_GetLongConfigVar", "contents": "reaper.SNM_GetLongConfigVar(${1:varname})"},
		{"trigger": "reaper.SNM_GetMediaItemTakeByGUID", "contents": "reaper.SNM_GetMediaItemTakeByGUID(${1:project}, ${2:guid})"},
		{"trigger": "reaper.SNM_GetProjectMarkerName", "contents": "reaper.SNM_GetProjectMarkerName(${1:proj}, ${2:num}, ${3:name})"},
		{"trigger": "reaper.SNM_GetSetObjectState", "contents": "reaper.SNM_GetSetObjectState(${1:state}, ${2:setnewvalue}, ${3:wantminimalstate})"},
		{"trigger": "reaper.SNM_GetSetSourceState", "contents": "reaper.SNM_GetSetSourceState(${1:item}, ${2:state}, ${3:setnewvalue})"},
		{"trigger": "reaper.SNM_GetSetSourceState2", "contents": "reaper.SNM_GetSetSourceState2(${1:state}, ${2:setnewvalue})"},
		{"trigger": "reaper.SNM_GetSourceType", "contents": "reaper.SNM_GetSourceType(${1:type})"},
		{"trigger": "reaper.SNM_MoveOrRemoveTrackFX", "contents": "reaper.SNM_MoveOrRemoveTrackFX(${1:tr}, ${2:fxId}, ${3:what})"},
		{"trigger": "reaper.SNM_ReadMediaFileTag", "contents": "reaper.SNM_ReadMediaFileTag(${1:fn}, ${2:tag})"},
		{"trigger": "reaper.SNM_RemoveReceive", "contents": "reaper.SNM_RemoveReceive(${1:tr}, ${2:rcvidx})"},
		{"trigger": "reaper.SNM_RemoveReceivesFrom", "contents": "reaper.SNM_RemoveReceivesFrom(${1:tr}, ${2:srctr})"},
		{"trigger": "reaper.SNM_SelectResourceBookmark", "contents": "reaper.SNM_SelectResourceBookmark(${1:name})"},
		{"trigger": "reaper.SNM_SetDoubleConfigVar", "contents": "reaper.SNM_SetDoubleConfigVar(${1:varname}, ${2:newvalue})"},
		{"trigger": "reaper.SNM_SetFastString", "contents": "reaper.SNM_SetFastString(${1:str}, ${2:newstr})"},
		{"trigger": "reaper.SNM_SetIntConfigVar", "contents": "reaper.SNM_SetIntConfigVar(${1:varname}, ${2:newvalue})"},
		{"trigger": "reaper.SNM_SetLongConfigVar", "contents": "reaper.SNM_SetLongConfigVar(${1:varname}, ${2:newHighValue}, ${3:newLowValue})"},
		{"trigger": "reaper.SNM_SetProjectMarker", "contents": "reaper.SNM_SetProjectMarker(${1:proj}, ${2:num}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color})"},
		{"trigger": "reaper.SNM_TagMediaFile", "contents": "reaper.SNM_TagMediaFile(${1:fn}, ${2:tag}, ${3:tagval})"},
		{"trigger": "reaper.SNM_TieResourceSlotActions", "contents": "reaper.SNM_TieResourceSlotActions(${1:bookmarkId})"},
		{"trigger": "reaper.SoloAllTracks", "contents": "reaper.SoloAllTracks(${1:solo})"},
		{"trigger": "reaper.Splash_GetWnd", "contents": "reaper.Splash_GetWnd()"},
		{"trigger": "reaper.SplitMediaItem", "contents": "reaper.SplitMediaItem(${1:item}, ${2:position})"},
		{"trigger": "reaper.stringToGuid", "contents": "reaper.stringToGuid(${1:str}, ${2:gGUID})"},
		{"trigger": "reaper.StuffMIDIMessage", "contents": "reaper.StuffMIDIMessage(${1:mode}, ${2:msg1}, ${3:msg2}, ${4:msg3})"},
		{"trigger": "table", "contents": "table(${1:offset}, ${2:size})"},
		{"trigger": "reaper.TakeFX_AddByName", "contents": "reaper.TakeFX_AddByName(${1:take}, ${2:fxname}, ${3:instantiate})"},
		{"trigger": "reaper.TakeFX_CopyToTake", "contents": "reaper.TakeFX_CopyToTake(${1:src_take}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "reaper.TakeFX_CopyToTrack", "contents": "reaper.TakeFX_CopyToTrack(${1:src_take}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "reaper.TakeFX_Delete", "contents": "reaper.TakeFX_Delete(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_EndParamEdit", "contents": "reaper.TakeFX_EndParamEdit(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TakeFX_FormatParamValue", "contents": "reaper.TakeFX_FormatParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:val}, ${5:buf})"},
		{"trigger": "reaper.TakeFX_FormatParamValueNormalized", "contents": "reaper.TakeFX_FormatParamValueNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value}, ${5:buf})"},
		{"trigger": "reaper.TakeFX_GetChainVisible", "contents": "reaper.TakeFX_GetChainVisible(${1:take})"},
		{"trigger": "reaper.TakeFX_GetCount", "contents": "reaper.TakeFX_GetCount(${1:take})"},
		{"trigger": "reaper.TakeFX_GetEnabled", "contents": "reaper.TakeFX_GetEnabled(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetEnvelope", "contents": "reaper.TakeFX_GetEnvelope(${1:take}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"},
		{"trigger": "reaper.TakeFX_GetFloatingWindow", "contents": "reaper.TakeFX_GetFloatingWindow(${1:take}, ${2:index})"},
		{"trigger": "reaper.TakeFX_GetFormattedParamValue", "contents": "reaper.TakeFX_GetFormattedParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:buf})"},
		{"trigger": "reaper.TakeFX_GetFXGUID", "contents": "reaper.TakeFX_GetFXGUID(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetFXName", "contents": "reaper.TakeFX_GetFXName(${1:take}, ${2:fx}, ${3:buf})"},
		{"trigger": "reaper.TakeFX_GetIOSize", "contents": "reaper.TakeFX_GetIOSize(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetNamedConfigParm", "contents": "reaper.TakeFX_GetNamedConfigParm(${1:take}, ${2:fx}, ${3:parmname})"},
		{"trigger": "reaper.TakeFX_GetNumParams", "contents": "reaper.TakeFX_GetNumParams(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetOffline", "contents": "reaper.TakeFX_GetOffline(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetOpen", "contents": "reaper.TakeFX_GetOpen(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetParam", "contents": "reaper.TakeFX_GetParam(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TakeFX_GetParameterStepSizes", "contents": "reaper.TakeFX_GetParameterStepSizes(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TakeFX_GetParamEx", "contents": "reaper.TakeFX_GetParamEx(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TakeFX_GetParamName", "contents": "reaper.TakeFX_GetParamName(${1:take}, ${2:fx}, ${3:param}, ${4:buf})"},
		{"trigger": "reaper.TakeFX_GetParamNormalized", "contents": "reaper.TakeFX_GetParamNormalized(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TakeFX_GetPinMappings", "contents": "reaper.TakeFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin})"},
		{"trigger": "reaper.TakeFX_GetPreset", "contents": "reaper.TakeFX_GetPreset(${1:take}, ${2:fx}, ${3:presetname})"},
		{"trigger": "reaper.TakeFX_GetPresetIndex", "contents": "reaper.TakeFX_GetPresetIndex(${1:take}, ${2:fx})"},
		{"trigger": "reaper.TakeFX_GetUserPresetFilename", "contents": "reaper.TakeFX_GetUserPresetFilename(${1:take}, ${2:fx}, ${3:fn})"},
		{"trigger": "reaper.TakeFX_NavigatePresets", "contents": "reaper.TakeFX_NavigatePresets(${1:take}, ${2:fx}, ${3:presetmove})"},
		{"trigger": "reaper.TakeFX_SetEnabled", "contents": "reaper.TakeFX_SetEnabled(${1:take}, ${2:fx}, ${3:enabled})"},
		{"trigger": "reaper.TakeFX_SetNamedConfigParm", "contents": "reaper.TakeFX_SetNamedConfigParm(${1:take}, ${2:fx}, ${3:parmname}, ${4:value})"},
		{"trigger": "reaper.TakeFX_SetOffline", "contents": "reaper.TakeFX_SetOffline(${1:take}, ${2:fx}, ${3:offline})"},
		{"trigger": "reaper.TakeFX_SetOpen", "contents": "reaper.TakeFX_SetOpen(${1:take}, ${2:fx}, ${3:open})"},
		{"trigger": "reaper.TakeFX_SetParam", "contents": "reaper.TakeFX_SetParam(${1:take}, ${2:fx}, ${3:param}, ${4:val})"},
		{"trigger": "reaper.TakeFX_SetParamNormalized", "contents": "reaper.TakeFX_SetParamNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value})"},
		{"trigger": "reaper.TakeFX_SetPinMappings", "contents": "reaper.TakeFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"},
		{"trigger": "reaper.TakeFX_SetPreset", "contents": "reaper.TakeFX_SetPreset(${1:take}, ${2:fx}, ${3:presetname})"},
		{"trigger": "reaper.TakeFX_SetPresetByIndex", "contents": "reaper.TakeFX_SetPresetByIndex(${1:take}, ${2:fx}, ${3:idx})"},
		{"trigger": "reaper.TakeFX_Show", "contents": "reaper.TakeFX_Show(${1:take}, ${2:index}, ${3:showFlag})"},
		{"trigger": "reaper.TakeIsMIDI", "contents": "reaper.TakeIsMIDI(${1:take})"},
		{"trigger": "reaper.ThemeLayout_GetLayout", "contents": "reaper.ThemeLayout_GetLayout(${1:section}, ${2:idx})"},
		{"trigger": "reaper.ThemeLayout_GetParameter", "contents": "reaper.ThemeLayout_GetParameter(${1:wp})"},
		{"trigger": "reaper.ThemeLayout_RefreshAll", "contents": "reaper.ThemeLayout_RefreshAll()"},
		{"trigger": "reaper.ThemeLayout_SetLayout", "contents": "reaper.ThemeLayout_SetLayout(${1:section}, ${2:layout})"},
		{"trigger": "reaper.ThemeLayout_SetParameter", "contents": "reaper.ThemeLayout_SetParameter(${1:wp}, ${2:value}, ${3:persist})"},
		{"trigger": "reaper.time_precise", "contents": "reaper.time_precise()"},
		{"trigger": "reaper.TimeMap2_beatsToTime", "contents": "reaper.TimeMap2_beatsToTime(${1:proj}, ${2:tpos}, ${3:measuresIn})"},
		{"trigger": "reaper.TimeMap2_GetDividedBpmAtTime", "contents": "reaper.TimeMap2_GetDividedBpmAtTime(${1:proj}, ${2:time})"},
		{"trigger": "reaper.TimeMap2_GetNextChangeTime", "contents": "reaper.TimeMap2_GetNextChangeTime(${1:proj}, ${2:time})"},
		{"trigger": "reaper.TimeMap2_QNToTime", "contents": "reaper.TimeMap2_QNToTime(${1:proj}, ${2:qn})"},
		{"trigger": "reaper.TimeMap2_timeToBeats", "contents": "reaper.TimeMap2_timeToBeats(${1:proj}, ${2:tpos})"},
		{"trigger": "reaper.TimeMap2_timeToQN", "contents": "reaper.TimeMap2_timeToQN(${1:proj}, ${2:tpos})"},
		{"trigger": "reaper.TimeMap_curFrameRate", "contents": "reaper.TimeMap_curFrameRate(${1:proj})"},
		{"trigger": "reaper.TimeMap_GetDividedBpmAtTime", "contents": "reaper.TimeMap_GetDividedBpmAtTime(${1:time})"},
		{"trigger": "reaper.TimeMap_GetMeasureInfo", "contents": "reaper.TimeMap_GetMeasureInfo(${1:proj}, ${2:measure})"},
		{"trigger": "reaper.TimeMap_GetMetronomePattern", "contents": "reaper.TimeMap_GetMetronomePattern(${1:proj}, ${2:time}, ${3:pattern})"},
		{"trigger": "reaper.TimeMap_GetTimeSigAtTime", "contents": "reaper.TimeMap_GetTimeSigAtTime(${1:proj}, ${2:time})"},
		{"trigger": "reaper.TimeMap_QNToMeasures", "contents": "reaper.TimeMap_QNToMeasures(${1:proj}, ${2:qn})"},
		{"trigger": "reaper.TimeMap_QNToTime", "contents": "reaper.TimeMap_QNToTime(${1:qn})"},
		{"trigger": "reaper.TimeMap_QNToTime_abs", "contents": "reaper.TimeMap_QNToTime_abs(${1:proj}, ${2:qn})"},
		{"trigger": "reaper.TimeMap_timeToQN", "contents": "reaper.TimeMap_timeToQN(${1:tpos})"},
		{"trigger": "reaper.TimeMap_timeToQN_abs", "contents": "reaper.TimeMap_timeToQN_abs(${1:proj}, ${2:tpos})"},
		{"trigger": "reaper.ToggleTrackSendUIMute", "contents": "reaper.ToggleTrackSendUIMute(${1:track}, ${2:send_idx})"},
		{"trigger": "reaper.Track_GetPeakHoldDB", "contents": "reaper.Track_GetPeakHoldDB(${1:track}, ${2:channel}, ${3:clear})"},
		{"trigger": "reaper.Track_GetPeakInfo", "contents": "reaper.Track_GetPeakInfo(${1:track}, ${2:channel})"},
		{"trigger": "reaper.TrackCtl_SetToolTip", "contents": "reaper.TrackCtl_SetToolTip(${1:fmt}, ${2:xpos}, ${3:ypos}, ${4:topmost})"},
		{"trigger": "reaper.TrackFX_AddByName", "contents": "reaper.TrackFX_AddByName(${1:track}, ${2:fxname}, ${3:recFX}, ${4:instantiate})"},
		{"trigger": "reaper.TrackFX_CopyToTake", "contents": "reaper.TrackFX_CopyToTake(${1:src_track}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "reaper.TrackFX_CopyToTrack", "contents": "reaper.TrackFX_CopyToTrack(${1:src_track}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "reaper.TrackFX_Delete", "contents": "reaper.TrackFX_Delete(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_EndParamEdit", "contents": "reaper.TrackFX_EndParamEdit(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TrackFX_FormatParamValue", "contents": "reaper.TrackFX_FormatParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:val}, ${5:buf})"},
		{"trigger": "reaper.TrackFX_FormatParamValueNormalized", "contents": "reaper.TrackFX_FormatParamValueNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value}, ${5:buf})"},
		{"trigger": "reaper.TrackFX_GetByName", "contents": "reaper.TrackFX_GetByName(${1:track}, ${2:fxname}, ${3:instantiate})"},
		{"trigger": "reaper.TrackFX_GetChainVisible", "contents": "reaper.TrackFX_GetChainVisible(${1:track})"},
		{"trigger": "reaper.TrackFX_GetCount", "contents": "reaper.TrackFX_GetCount(${1:track})"},
		{"trigger": "reaper.TrackFX_GetEnabled", "contents": "reaper.TrackFX_GetEnabled(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetEQ", "contents": "reaper.TrackFX_GetEQ(${1:track}, ${2:instantiate})"},
		{"trigger": "reaper.TrackFX_GetEQBandEnabled", "contents": "reaper.TrackFX_GetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx})"},
		{"trigger": "reaper.TrackFX_GetEQParam", "contents": "reaper.TrackFX_GetEQParam(${1:track}, ${2:fxidx}, ${3:paramidx})"},
		{"trigger": "reaper.TrackFX_GetFloatingWindow", "contents": "reaper.TrackFX_GetFloatingWindow(${1:track}, ${2:index})"},
		{"trigger": "reaper.TrackFX_GetFormattedParamValue", "contents": "reaper.TrackFX_GetFormattedParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:buf})"},
		{"trigger": "reaper.TrackFX_GetFXGUID", "contents": "reaper.TrackFX_GetFXGUID(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetFXName", "contents": "reaper.TrackFX_GetFXName(${1:track}, ${2:fx}, ${3:buf})"},
		{"trigger": "reaper.TrackFX_GetInstrument", "contents": "reaper.TrackFX_GetInstrument(${1:track})"},
		{"trigger": "reaper.TrackFX_GetIOSize", "contents": "reaper.TrackFX_GetIOSize(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetNamedConfigParm", "contents": "reaper.TrackFX_GetNamedConfigParm(${1:track}, ${2:fx}, ${3:parmname})"},
		{"trigger": "reaper.TrackFX_GetNumParams", "contents": "reaper.TrackFX_GetNumParams(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetOffline", "contents": "reaper.TrackFX_GetOffline(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetOpen", "contents": "reaper.TrackFX_GetOpen(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetParam", "contents": "reaper.TrackFX_GetParam(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TrackFX_GetParameterStepSizes", "contents": "reaper.TrackFX_GetParameterStepSizes(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TrackFX_GetParamEx", "contents": "reaper.TrackFX_GetParamEx(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TrackFX_GetParamName", "contents": "reaper.TrackFX_GetParamName(${1:track}, ${2:fx}, ${3:param}, ${4:buf})"},
		{"trigger": "reaper.TrackFX_GetParamNormalized", "contents": "reaper.TrackFX_GetParamNormalized(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "reaper.TrackFX_GetPinMappings", "contents": "reaper.TrackFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin})"},
		{"trigger": "reaper.TrackFX_GetPreset", "contents": "reaper.TrackFX_GetPreset(${1:track}, ${2:fx}, ${3:presetname})"},
		{"trigger": "reaper.TrackFX_GetPresetIndex", "contents": "reaper.TrackFX_GetPresetIndex(${1:track}, ${2:fx})"},
		{"trigger": "reaper.TrackFX_GetRecChainVisible", "contents": "reaper.TrackFX_GetRecChainVisible(${1:track})"},
		{"trigger": "reaper.TrackFX_GetRecCount", "contents": "reaper.TrackFX_GetRecCount(${1:track})"},
		{"trigger": "reaper.TrackFX_GetUserPresetFilename", "contents": "reaper.TrackFX_GetUserPresetFilename(${1:track}, ${2:fx}, ${3:fn})"},
		{"trigger": "reaper.TrackFX_NavigatePresets", "contents": "reaper.TrackFX_NavigatePresets(${1:track}, ${2:fx}, ${3:presetmove})"},
		{"trigger": "reaper.TrackFX_SetEnabled", "contents": "reaper.TrackFX_SetEnabled(${1:track}, ${2:fx}, ${3:enabled})"},
		{"trigger": "reaper.TrackFX_SetEQBandEnabled", "contents": "reaper.TrackFX_SetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:enable})"},
		{"trigger": "reaper.TrackFX_SetEQParam", "contents": "reaper.TrackFX_SetEQParam(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:paramtype}, ${6:val}, ${7:isnorm})"},
		{"trigger": "reaper.TrackFX_SetNamedConfigParm", "contents": "reaper.TrackFX_SetNamedConfigParm(${1:track}, ${2:fx}, ${3:parmname}, ${4:value})"},
		{"trigger": "reaper.TrackFX_SetOffline", "contents": "reaper.TrackFX_SetOffline(${1:track}, ${2:fx}, ${3:offline})"},
		{"trigger": "reaper.TrackFX_SetOpen", "contents": "reaper.TrackFX_SetOpen(${1:track}, ${2:fx}, ${3:open})"},
		{"trigger": "reaper.TrackFX_SetParam", "contents": "reaper.TrackFX_SetParam(${1:track}, ${2:fx}, ${3:param}, ${4:val})"},
		{"trigger": "reaper.TrackFX_SetParamNormalized", "contents": "reaper.TrackFX_SetParamNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value})"},
		{"trigger": "reaper.TrackFX_SetPinMappings", "contents": "reaper.TrackFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"},
		{"trigger": "reaper.TrackFX_SetPreset", "contents": "reaper.TrackFX_SetPreset(${1:track}, ${2:fx}, ${3:presetname})"},
		{"trigger": "reaper.TrackFX_SetPresetByIndex", "contents": "reaper.TrackFX_SetPresetByIndex(${1:track}, ${2:fx}, ${3:idx})"},
		{"trigger": "reaper.TrackFX_Show", "contents": "reaper.TrackFX_Show(${1:track}, ${2:index}, ${3:showFlag})"},
		{"trigger": "reaper.TrackList_AdjustWindows", "contents": "reaper.TrackList_AdjustWindows(${1:isMinor})"},
		{"trigger": "reaper.TrackList_UpdateAllExternalSurfaces", "contents": "reaper.TrackList_UpdateAllExternalSurfaces()"},
		{"trigger": "gfx.transformblit", "contents": "gfx.transformblit(${1:srcimg}, ${2:destx}, ${3:desty}, ${4:destw}, ${5:desth}, ${6:div_w}, ${7:div_h}, ${8:table})"},
		{"trigger": "gfx.triangle", "contents": "gfx.triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3x4}, ${7:y4...})"},
		{"trigger": "reaper.ULT_GetMediaItemNote", "contents": "reaper.ULT_GetMediaItemNote(${1:item})"},
		{"trigger": "reaper.ULT_SetMediaItemNote", "contents": "reaper.ULT_SetMediaItemNote(${1:item}, ${2:note})"},
		{"trigger": "reaper.Undo_BeginBlock", "contents": "reaper.Undo_BeginBlock()"},
		{"trigger": "reaper.Undo_BeginBlock2", "contents": "reaper.Undo_BeginBlock2(${1:proj})"},
		{"trigger": "reaper.Undo_CanRedo2", "contents": "reaper.Undo_CanRedo2(${1:proj})"},
		{"trigger": "reaper.Undo_CanUndo2", "contents": "reaper.Undo_CanUndo2(${1:proj})"},
		{"trigger": "reaper.Undo_DoRedo2", "contents": "reaper.Undo_DoRedo2(${1:proj})"},
		{"trigger": "reaper.Undo_DoUndo2", "contents": "reaper.Undo_DoUndo2(${1:proj})"},
		{"trigger": "reaper.Undo_EndBlock", "contents": "reaper.Undo_EndBlock(${1:descchange}, ${2:extraflags})"},
		{"trigger": "reaper.Undo_EndBlock2", "contents": "reaper.Undo_EndBlock2(${1:proj}, ${2:descchange}, ${3:extraflags})"},
		{"trigger": "reaper.Undo_OnStateChange", "contents": "reaper.Undo_OnStateChange(${1:descchange})"},
		{"trigger": "reaper.Undo_OnStateChange2", "contents": "reaper.Undo_OnStateChange2(${1:proj}, ${2:descchange})"},
		{"trigger": "reaper.Undo_OnStateChange_Item", "contents": "reaper.Undo_OnStateChange_Item(${1:proj}, ${2:name}, ${3:item})"},
		{"trigger": "reaper.Undo_OnStateChangeEx", "contents": "reaper.Undo_OnStateChangeEx(${1:descchange}, ${2:whichStates}, ${3:trackparm})"},
		{"trigger": "reaper.Undo_OnStateChangeEx2", "contents": "reaper.Undo_OnStateChangeEx2(${1:proj}, ${2:descchange}, ${3:whichStates}, ${4:trackparm})"},
		{"trigger": "gfx.update", "contents": "gfx.update()"},
		{"trigger": "reaper.UpdateArrange", "contents": "reaper.UpdateArrange()"},
		{"trigger": "reaper.UpdateItemInProject", "contents": "reaper.UpdateItemInProject(${1:item})"},
		{"trigger": "reaper.UpdateTimeline", "contents": "reaper.UpdateTimeline()"},
		{"trigger": "reaper.ValidatePtr", "contents": "reaper.ValidatePtr(${1:pointer}, ${2:ctypename})"},
		{"trigger": "reaper.ValidatePtr2", "contents": "reaper.ValidatePtr2(${1:proj}, ${2:pointer}, ${3:ctypename})"},
		{"trigger": "reaper.ViewPrefs", "contents": "reaper.ViewPrefs(${1:page}, ${2:pageByName})"},
		{"trigger": "reaper.Xen_AudioWriter_Create", "contents": "reaper.Xen_AudioWriter_Create(${1:filename}, ${2:numchans}, ${3:samplerate})"},
		{"trigger": "reaper.Xen_AudioWriter_Destroy", "contents": "reaper.Xen_AudioWriter_Destroy(${1:writer})"},
		{"trigger": "reaper.Xen_AudioWriter_Write", "contents": "reaper.Xen_AudioWriter_Write(${1:writer}, ${2:numframes}, ${3:data}, ${4:offset})"},
		{"trigger": "reaper.Xen_GetMediaSourceSamples", "contents": "reaper.Xen_GetMediaSourceSamples(${1:src}, ${2:destbuf}, ${3:destbufoffset}, ${4:numframes}, ${5:numchans}, ${6:samplerate}, ${7:sourceposition})"},
		{"trigger": "reaper.Xen_StartSourcePreview", "contents": "reaper.Xen_StartSourcePreview(${1:source}, ${2:gain}, ${3:loop}, ${4:outputchanindexIn})"},
		{"trigger": "reaper.Xen_StopSourcePreview", "contents": "reaper.Xen_StopSourcePreview(${1:preview_id})"},
	]
}
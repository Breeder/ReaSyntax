{
	"scope": "source.lua",
	"completions":
	[
		["reaper.AddMediaItemToTrack", "reaper.AddMediaItemToTrack(${1:tr})"],
		["reaper.AddProjectMarker", "reaper.AddProjectMarker(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx})"],
		["reaper.AddProjectMarker2", "reaper.AddProjectMarker2(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx}, ${7:color})"],
		["reaper.AddRemoveReaScript", "reaper.AddRemoveReaScript(${1:add}, ${2:sectionID}, ${3:scriptfn}, ${4:commit})"],
		["reaper.AddTakeToMediaItem", "reaper.AddTakeToMediaItem(${1:item})"],
		["reaper.AddTempoTimeSigMarker", "reaper.AddTempoTimeSigMarker(${1:proj}, ${2:timepos}, ${3:bpm}, ${4:timesig_num}, ${5:timesig_denom}, ${6:lineartempochange})"],
		["reaper.adjustZoom", "reaper.adjustZoom(${1:amt}, ${2:forceset}, ${3:doupd}, ${4:centermode})"],
		["reaper.AnyTrackSolo", "reaper.AnyTrackSolo(${1:proj})"],
		["reaper.APIExists", "reaper.APIExists(${1:function_name})"],
		["reaper.APITest", "reaper.APITest()"],
		["reaper.ApplyNudge", "reaper.ApplyNudge(${1:project}, ${2:nudgeflag}, ${3:nudgewhat}, ${4:nudgeunits}, ${5:value}, ${6:reverse}, ${7:copies})"],
		["gfx.arc", "gfx.arc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2}, ${6:antialias})"],
		["reaper.ArmCommand", "reaper.ArmCommand(${1:cmd}, ${2:sectionname})"],
		["reaper.atexit", "reaper.atexit(${1:function})"],
		["reaper.Audio_Init", "reaper.Audio_Init()"],
		["reaper.Audio_IsPreBuffer", "reaper.Audio_IsPreBuffer()"],
		["reaper.Audio_IsRunning", "reaper.Audio_IsRunning()"],
		["reaper.Audio_Quit", "reaper.Audio_Quit()"],
		["reaper.AudioAccessorStateChanged", "reaper.AudioAccessorStateChanged(${1:accessor})"],
		["reaper.AudioAccessorUpdate", "reaper.AudioAccessorUpdate(${1:accessor})"],
		["reaper.AudioAccessorValidateState", "reaper.AudioAccessorValidateState(${1:accessor})"],
		["gfx.blit", "gfx.blit(${1:source}, ${2:scale}, ${3:rotation}, ${4:srcx}, ${5:srcy}, ${6:srcw}, ${7:srch}, ${8:destx}, ${9:desty}, ${10:destw}, ${11:desth}, ${12:rotxoffs}, ${13:rotyoffs})"],
		["gfx.blit", "gfx.blit(${1:source}, ${2:scale}, ${3:rotation})"],
		["gfx.blitext", "gfx.blitext(${1:source}, ${2:coordinatelist}, ${3:rotation})"],
		["gfx.blurto", "gfx.blurto(${1:x}, ${2:y})"],
		["reaper.BR_EnvAlloc", "reaper.BR_EnvAlloc(${1:envelope}, ${2:takeEnvelopesUseProjectTime})"],
		["reaper.BR_EnvCountPoints", "reaper.BR_EnvCountPoints(${1:envelope})"],
		["reaper.BR_EnvDeletePoint", "reaper.BR_EnvDeletePoint(${1:envelope}, ${2:id})"],
		["reaper.BR_EnvFind", "reaper.BR_EnvFind(${1:envelope}, ${2:position}, ${3:delta})"],
		["reaper.BR_EnvFindNext", "reaper.BR_EnvFindNext(${1:envelope}, ${2:position})"],
		["reaper.BR_EnvFindPrevious", "reaper.BR_EnvFindPrevious(${1:envelope}, ${2:position})"],
		["reaper.BR_EnvFree", "reaper.BR_EnvFree(${1:envelope}, ${2:commit})"],
		["reaper.BR_EnvGetParentTake", "reaper.BR_EnvGetParentTake(${1:envelope})"],
		["reaper.BR_EnvGetParentTrack", "reaper.BR_EnvGetParentTrack(${1:envelope})"],
		["reaper.BR_EnvGetPoint", "reaper.BR_EnvGetPoint(${1:envelope}, ${2:id})"],
		["reaper.BR_EnvGetProperties", "reaper.BR_EnvGetProperties(${1:envelope})"],
		["reaper.BR_EnvSetPoint", "reaper.BR_EnvSetPoint(${1:envelope}, ${2:id}, ${3:position}, ${4:value}, ${5:shape}, ${6:selected}, ${7:bezier})"],
		["reaper.BR_EnvSetProperties", "reaper.BR_EnvSetProperties(${1:envelope}, ${2:active}, ${3:visible}, ${4:armed}, ${5:inLane}, ${6:laneHeight}, ${7:defaultShape}, ${8:faderScaling})"],
		["reaper.BR_EnvSortPoints", "reaper.BR_EnvSortPoints(${1:envelope})"],
		["reaper.BR_EnvValueAtPos", "reaper.BR_EnvValueAtPos(${1:envelope}, ${2:position})"],
		["reaper.BR_GetArrangeView", "reaper.BR_GetArrangeView(${1:proj})"],
		["reaper.BR_GetClosestGridDivision", "reaper.BR_GetClosestGridDivision(${1:position})"],
		["reaper.BR_GetCurrentTheme", "reaper.BR_GetCurrentTheme()"],
		["reaper.BR_GetMediaItemByGUID", "reaper.BR_GetMediaItemByGUID(${1:proj}, ${2:guidStringIn})"],
		["reaper.BR_GetMediaItemGUID", "reaper.BR_GetMediaItemGUID(${1:item})"],
		["reaper.BR_GetMediaItemImageResource", "reaper.BR_GetMediaItemImageResource(${1:item})"],
		["reaper.BR_GetMediaItemTakeGUID", "reaper.BR_GetMediaItemTakeGUID(${1:take})"],
		["reaper.BR_GetMediaSourceProperties", "reaper.BR_GetMediaSourceProperties(${1:take})"],
		["reaper.BR_GetMediaTrackByGUID", "reaper.BR_GetMediaTrackByGUID(${1:proj}, ${2:guidStringIn})"],
		["reaper.BR_GetMediaTrackFreezeCount", "reaper.BR_GetMediaTrackFreezeCount(${1:track})"],
		["reaper.BR_GetMediaTrackGUID", "reaper.BR_GetMediaTrackGUID(${1:track})"],
		["reaper.BR_GetMediaTrackLayouts", "reaper.BR_GetMediaTrackLayouts(${1:track})"],
		["reaper.BR_GetMediaTrackSendInfo_Envelope", "reaper.BR_GetMediaTrackSendInfo_Envelope(${1:track}, ${2:category}, ${3:sendidx}, ${4:envelopeType})"],
		["reaper.BR_GetMediaTrackSendInfo_Track", "reaper.BR_GetMediaTrackSendInfo_Track(${1:track}, ${2:category}, ${3:sendidx}, ${4:trackType})"],
		["reaper.BR_GetMidiSourceLenPPQ", "reaper.BR_GetMidiSourceLenPPQ(${1:take})"],
		["reaper.BR_GetMidiTakePoolGUID", "reaper.BR_GetMidiTakePoolGUID(${1:take})"],
		["reaper.BR_GetMidiTakeTempoInfo", "reaper.BR_GetMidiTakeTempoInfo(${1:take})"],
		["reaper.BR_GetMouseCursorContext", "reaper.BR_GetMouseCursorContext()"],
		["reaper.BR_GetMouseCursorContext_Envelope", "reaper.BR_GetMouseCursorContext_Envelope()"],
		["reaper.BR_GetMouseCursorContext_Item", "reaper.BR_GetMouseCursorContext_Item()"],
		["reaper.BR_GetMouseCursorContext_MIDI", "reaper.BR_GetMouseCursorContext_MIDI()"],
		["reaper.BR_GetMouseCursorContext_Position", "reaper.BR_GetMouseCursorContext_Position()"],
		["reaper.BR_GetMouseCursorContext_StretchMarker", "reaper.BR_GetMouseCursorContext_StretchMarker()"],
		["reaper.BR_GetMouseCursorContext_Take", "reaper.BR_GetMouseCursorContext_Take()"],
		["reaper.BR_GetMouseCursorContext_Track", "reaper.BR_GetMouseCursorContext_Track()"],
		["reaper.BR_GetNextGridDivision", "reaper.BR_GetNextGridDivision(${1:position})"],
		["reaper.BR_GetPrevGridDivision", "reaper.BR_GetPrevGridDivision(${1:position})"],
		["reaper.BR_GetSetTrackSendInfo", "reaper.BR_GetSetTrackSendInfo(${1:track}, ${2:category}, ${3:sendidx}, ${4:parmname}, ${5:setNewValue}, ${6:newValue})"],
		["reaper.BR_GetTakeFXCount", "reaper.BR_GetTakeFXCount(${1:take})"],
		["reaper.BR_IsMidiOpenInInlineEditor", "reaper.BR_IsMidiOpenInInlineEditor(${1:take})"],
		["reaper.BR_IsTakeMidi", "reaper.BR_IsTakeMidi(${1:take})"],
		["reaper.BR_ItemAtMouseCursor", "reaper.BR_ItemAtMouseCursor()"],
		["reaper.BR_MIDI_CCLaneRemove", "reaper.BR_MIDI_CCLaneRemove(${1:midiEditor}, ${2:laneId})"],
		["reaper.BR_MIDI_CCLaneReplace", "reaper.BR_MIDI_CCLaneReplace(${1:midiEditor}, ${2:laneId}, ${3:newCC})"],
		["reaper.BR_PositionAtMouseCursor", "reaper.BR_PositionAtMouseCursor(${1:checkRuler})"],
		["reaper.BR_SetArrangeView", "reaper.BR_SetArrangeView(${1:proj}, ${2:startTime}, ${3:endTime})"],
		["reaper.BR_SetItemEdges", "reaper.BR_SetItemEdges(${1:item}, ${2:startTime}, ${3:endTime})"],
		["reaper.BR_SetMediaItemImageResource", "reaper.BR_SetMediaItemImageResource(${1:item}, ${2:imageIn}, ${3:imageFlags})"],
		["reaper.BR_SetMediaSourceProperties", "reaper.BR_SetMediaSourceProperties(${1:take}, ${2:section}, ${3:start}, ${4:length}, ${5:fade}, ${6:reverse})"],
		["reaper.BR_SetMediaTrackLayouts", "reaper.BR_SetMediaTrackLayouts(${1:track}, ${2:mcpLayoutNameIn}, ${3:tcpLayoutNameIn})"],
		["reaper.BR_SetMidiTakeTempoInfo", "reaper.BR_SetMidiTakeTempoInfo(${1:take}, ${2:ignoreProjTempo}, ${3:bpm}, ${4:num}, ${5:den})"],
		["reaper.BR_SetTakeSourceFromFile", "reaper.BR_SetTakeSourceFromFile(${1:take}, ${2:filenameIn}, ${3:inProjectData})"],
		["reaper.BR_SetTakeSourceFromFile2", "reaper.BR_SetTakeSourceFromFile2(${1:take}, ${2:filenameIn}, ${3:inProjectData}, ${4:keepSourceProperties})"],
		["reaper.BR_TakeAtMouseCursor", "reaper.BR_TakeAtMouseCursor()"],
		["reaper.BR_TrackAtMouseCursor", "reaper.BR_TrackAtMouseCursor()"],
		["reaper.BR_TrackFX_GetFXModuleName", "reaper.BR_TrackFX_GetFXModuleName(${1:track}, ${2:fx})"],
		["reaper.BR_Win32_GetPrivateProfileString", "reaper.BR_Win32_GetPrivateProfileString(${1:sectionName}, ${2:keyName}, ${3:defaultString}, ${4:filePath})"],
		["reaper.BR_Win32_ShellExecute", "reaper.BR_Win32_ShellExecute(${1:operation}, ${2:file}, ${3:parameters}, ${4:directory}, ${5:showFlags})"],
		["reaper.BR_Win32_WritePrivateProfileString", "reaper.BR_Win32_WritePrivateProfileString(${1:sectionName}, ${2:keyName}, ${3:value}, ${4:filePath})"],
		["reaper.BypassFxAllTracks", "reaper.BypassFxAllTracks(${1:bypass})"],
		["reaper.CF_GetClipboard", "reaper.CF_GetClipboard(${1:buf})"],
		["reaper.CF_GetClipboardBig", "reaper.CF_GetClipboardBig(${1:output})"],
		["reaper.CF_LocateInExplorer", "reaper.CF_LocateInExplorer(${1:file})"],
		["reaper.CF_SetClipboard", "reaper.CF_SetClipboard(${1:str})"],
		["reaper.CF_ShellExecute", "reaper.CF_ShellExecute(${1:file})"],
		["gfx.circle", "gfx.circle(${1:x}, ${2:y}, ${3:r}, ${4:fill}, ${5:antialias})"],
		["clear", "clear(${1:value}, ${2:offset}, ${3:size})"],
		["reaper.ClearAllRecArmed", "reaper.ClearAllRecArmed()"],
		["reaper.ClearConsole", "reaper.ClearConsole()"],
		["reaper.ClearPeakCache", "reaper.ClearPeakCache()"],
		["gfx.clienttoscreen", "gfx.clienttoscreen(${1:x}, ${2:y})"],
		["reaper.ColorFromNative", "reaper.ColorFromNative(${1:col})"],
		["reaper.ColorToNative", "reaper.ColorToNative(${1:r}, ${2:g}, ${3:b})"],
		["convolve", "convolve(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"],
		["copy", "copy(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"],
		["reaper.CountAutomationItems", "reaper.CountAutomationItems(${1:env})"],
		["reaper.CountEnvelopePoints", "reaper.CountEnvelopePoints(${1:envelope})"],
		["reaper.CountEnvelopePointsEx", "reaper.CountEnvelopePointsEx(${1:envelope}, ${2:autoitem_idx})"],
		["reaper.CountMediaItems", "reaper.CountMediaItems(${1:proj})"],
		["reaper.CountProjectMarkers", "reaper.CountProjectMarkers(${1:proj})"],
		["reaper.CountSelectedMediaItems", "reaper.CountSelectedMediaItems(${1:proj})"],
		["reaper.CountSelectedTracks", "reaper.CountSelectedTracks(${1:proj})"],
		["reaper.CountSelectedTracks2", "reaper.CountSelectedTracks2(${1:proj}, ${2:wantmaster})"],
		["reaper.CountTakeEnvelopes", "reaper.CountTakeEnvelopes(${1:take})"],
		["reaper.CountTakes", "reaper.CountTakes(${1:item})"],
		["reaper.CountTCPFXParms", "reaper.CountTCPFXParms(${1:project}, ${2:track})"],
		["reaper.CountTempoTimeSigMarkers", "reaper.CountTempoTimeSigMarkers(${1:proj})"],
		["reaper.CountTrackEnvelopes", "reaper.CountTrackEnvelopes(${1:track})"],
		["reaper.CountTrackMediaItems", "reaper.CountTrackMediaItems(${1:track})"],
		["reaper.CountTracks", "reaper.CountTracks(${1:proj})"],
		["reaper.CreateNewMIDIItemInProj", "reaper.CreateNewMIDIItemInProj(${1:track}, ${2:starttime}, ${3:endtime}, ${4:qnIn})"],
		["reaper.CreateTakeAudioAccessor", "reaper.CreateTakeAudioAccessor(${1:take})"],
		["reaper.CreateTrackAudioAccessor", "reaper.CreateTrackAudioAccessor(${1:track})"],
		["reaper.CreateTrackSend", "reaper.CreateTrackSend(${1:tr}, ${2:desttrIn})"],
		["reaper.CSurf_FlushUndo", "reaper.CSurf_FlushUndo(${1:force})"],
		["reaper.CSurf_GetTouchState", "reaper.CSurf_GetTouchState(${1:trackid}, ${2:isPan})"],
		["reaper.CSurf_GoEnd", "reaper.CSurf_GoEnd()"],
		["reaper.CSurf_GoStart", "reaper.CSurf_GoStart()"],
		["reaper.CSurf_NumTracks", "reaper.CSurf_NumTracks(${1:mcpView})"],
		["reaper.CSurf_OnArrow", "reaper.CSurf_OnArrow(${1:whichdir}, ${2:wantzoom})"],
		["reaper.CSurf_OnFwd", "reaper.CSurf_OnFwd(${1:seekplay})"],
		["reaper.CSurf_OnFXChange", "reaper.CSurf_OnFXChange(${1:trackid}, ${2:en})"],
		["reaper.CSurf_OnInputMonitorChange", "reaper.CSurf_OnInputMonitorChange(${1:trackid}, ${2:monitor})"],
		["reaper.CSurf_OnInputMonitorChangeEx", "reaper.CSurf_OnInputMonitorChangeEx(${1:trackid}, ${2:monitor}, ${3:allowgang})"],
		["reaper.CSurf_OnMuteChange", "reaper.CSurf_OnMuteChange(${1:trackid}, ${2:mute})"],
		["reaper.CSurf_OnMuteChangeEx", "reaper.CSurf_OnMuteChangeEx(${1:trackid}, ${2:mute}, ${3:allowgang})"],
		["reaper.CSurf_OnPanChange", "reaper.CSurf_OnPanChange(${1:trackid}, ${2:pan}, ${3:relative})"],
		["reaper.CSurf_OnPanChangeEx", "reaper.CSurf_OnPanChangeEx(${1:trackid}, ${2:pan}, ${3:relative}, ${4:allowGang})"],
		["reaper.CSurf_OnPause", "reaper.CSurf_OnPause()"],
		["reaper.CSurf_OnPlay", "reaper.CSurf_OnPlay()"],
		["reaper.CSurf_OnPlayRateChange", "reaper.CSurf_OnPlayRateChange(${1:playrate})"],
		["reaper.CSurf_OnRecArmChange", "reaper.CSurf_OnRecArmChange(${1:trackid}, ${2:recarm})"],
		["reaper.CSurf_OnRecArmChangeEx", "reaper.CSurf_OnRecArmChangeEx(${1:trackid}, ${2:recarm}, ${3:allowgang})"],
		["reaper.CSurf_OnRecord", "reaper.CSurf_OnRecord()"],
		["reaper.CSurf_OnRecvPanChange", "reaper.CSurf_OnRecvPanChange(${1:trackid}, ${2:recv_index}, ${3:pan}, ${4:relative})"],
		["reaper.CSurf_OnRecvVolumeChange", "reaper.CSurf_OnRecvVolumeChange(${1:trackid}, ${2:recv_index}, ${3:volume}, ${4:relative})"],
		["reaper.CSurf_OnRew", "reaper.CSurf_OnRew(${1:seekplay})"],
		["reaper.CSurf_OnRewFwd", "reaper.CSurf_OnRewFwd(${1:seekplay}, ${2:dir})"],
		["reaper.CSurf_OnScroll", "reaper.CSurf_OnScroll(${1:xdir}, ${2:ydir})"],
		["reaper.CSurf_OnSelectedChange", "reaper.CSurf_OnSelectedChange(${1:trackid}, ${2:selected})"],
		["reaper.CSurf_OnSendPanChange", "reaper.CSurf_OnSendPanChange(${1:trackid}, ${2:send_index}, ${3:pan}, ${4:relative})"],
		["reaper.CSurf_OnSendVolumeChange", "reaper.CSurf_OnSendVolumeChange(${1:trackid}, ${2:send_index}, ${3:volume}, ${4:relative})"],
		["reaper.CSurf_OnSoloChange", "reaper.CSurf_OnSoloChange(${1:trackid}, ${2:solo})"],
		["reaper.CSurf_OnSoloChangeEx", "reaper.CSurf_OnSoloChangeEx(${1:trackid}, ${2:solo}, ${3:allowgang})"],
		["reaper.CSurf_OnStop", "reaper.CSurf_OnStop()"],
		["reaper.CSurf_OnTempoChange", "reaper.CSurf_OnTempoChange(${1:bpm})"],
		["reaper.CSurf_OnTrackSelection", "reaper.CSurf_OnTrackSelection(${1:trackid})"],
		["reaper.CSurf_OnVolumeChange", "reaper.CSurf_OnVolumeChange(${1:trackid}, ${2:volume}, ${3:relative})"],
		["reaper.CSurf_OnVolumeChangeEx", "reaper.CSurf_OnVolumeChangeEx(${1:trackid}, ${2:volume}, ${3:relative}, ${4:allowGang})"],
		["reaper.CSurf_OnWidthChange", "reaper.CSurf_OnWidthChange(${1:trackid}, ${2:width}, ${3:relative})"],
		["reaper.CSurf_OnWidthChangeEx", "reaper.CSurf_OnWidthChangeEx(${1:trackid}, ${2:width}, ${3:relative}, ${4:allowGang})"],
		["reaper.CSurf_OnZoom", "reaper.CSurf_OnZoom(${1:xdir}, ${2:ydir})"],
		["reaper.CSurf_ResetAllCachedVolPanStates", "reaper.CSurf_ResetAllCachedVolPanStates()"],
		["reaper.CSurf_ScrubAmt", "reaper.CSurf_ScrubAmt(${1:amt})"],
		["reaper.CSurf_SetAutoMode", "reaper.CSurf_SetAutoMode(${1:mode}, ${2:ignoresurf})"],
		["reaper.CSurf_SetPlayState", "reaper.CSurf_SetPlayState(${1:play}, ${2:pause}, ${3:rec}, ${4:ignoresurf})"],
		["reaper.CSurf_SetRepeatState", "reaper.CSurf_SetRepeatState(${1:rep}, ${2:ignoresurf})"],
		["reaper.CSurf_SetSurfaceMute", "reaper.CSurf_SetSurfaceMute(${1:trackid}, ${2:mute}, ${3:ignoresurf})"],
		["reaper.CSurf_SetSurfacePan", "reaper.CSurf_SetSurfacePan(${1:trackid}, ${2:pan}, ${3:ignoresurf})"],
		["reaper.CSurf_SetSurfaceRecArm", "reaper.CSurf_SetSurfaceRecArm(${1:trackid}, ${2:recarm}, ${3:ignoresurf})"],
		["reaper.CSurf_SetSurfaceSelected", "reaper.CSurf_SetSurfaceSelected(${1:trackid}, ${2:selected}, ${3:ignoresurf})"],
		["reaper.CSurf_SetSurfaceSolo", "reaper.CSurf_SetSurfaceSolo(${1:trackid}, ${2:solo}, ${3:ignoresurf})"],
		["reaper.CSurf_SetSurfaceVolume", "reaper.CSurf_SetSurfaceVolume(${1:trackid}, ${2:volume}, ${3:ignoresurf})"],
		["reaper.CSurf_SetTrackListChange", "reaper.CSurf_SetTrackListChange()"],
		["reaper.CSurf_TrackFromID", "reaper.CSurf_TrackFromID(${1:idx}, ${2:mcpView})"],
		["reaper.CSurf_TrackToID", "reaper.CSurf_TrackToID(${1:track}, ${2:mcpView})"],
		["reaper.DB2SLIDER", "reaper.DB2SLIDER(${1:x})"],
		["reaper.defer", "reaper.defer(${1:function})"],
		["reaper.DeleteEnvelopePointRange", "reaper.DeleteEnvelopePointRange(${1:envelope}, ${2:time_start}, ${3:time_end})"],
		["reaper.DeleteEnvelopePointRangeEx", "reaper.DeleteEnvelopePointRangeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time_start}, ${4:time_end})"],
		["reaper.DeleteExtState", "reaper.DeleteExtState(${1:section}, ${2:key}, ${3:persist})"],
		["reaper.DeleteProjectMarker", "reaper.DeleteProjectMarker(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn})"],
		["reaper.DeleteProjectMarkerByIndex", "reaper.DeleteProjectMarkerByIndex(${1:proj}, ${2:markrgnidx})"],
		["reaper.DeleteTakeStretchMarkers", "reaper.DeleteTakeStretchMarkers(${1:take}, ${2:idx}, ${3:countIn})"],
		["reaper.DeleteTempoTimeSigMarker", "reaper.DeleteTempoTimeSigMarker(${1:project}, ${2:markerindex})"],
		["reaper.DeleteTrack", "reaper.DeleteTrack(${1:tr})"],
		["reaper.DeleteTrackMediaItem", "reaper.DeleteTrackMediaItem(${1:tr}, ${2:it})"],
		["gfx.deltablit", "gfx.deltablit(${1:srcimg}, ${2:srcs}, ${3:srct}, ${4:srcw}, ${5:srch}, ${6:destx}, ${7:desty}, ${8:destw}, ${9:desth}, ${10:dsdx}, ${11:dtdx}, ${12:dsdy}, ${13:dtdy}, ${14:dsdxdy}, ${15:dtdxdy}, ${16:usecliprect=1})"],
		["reaper.DestroyAudioAccessor", "reaper.DestroyAudioAccessor(${1:accessor})"],
		["gfx.dock", "gfx.dock(${1:v}, ${2:wx}, ${3:wy}, ${4:ww}, ${5:wh})"],
		["reaper.Dock_UpdateDockID", "reaper.Dock_UpdateDockID(${1:ident_str}, ${2:whichDock})"],
		["reaper.DockIsChildOfDock", "reaper.DockIsChildOfDock(${1:hwnd})"],
		["reaper.DockWindowActivate", "reaper.DockWindowActivate(${1:hwnd})"],
		["reaper.DockWindowAdd", "reaper.DockWindowAdd(${1:hwnd}, ${2:name}, ${3:pos}, ${4:allowShow})"],
		["reaper.DockWindowAddEx", "reaper.DockWindowAddEx(${1:hwnd}, ${2:name}, ${3:identstr}, ${4:allowShow})"],
		["reaper.DockWindowRefresh", "reaper.DockWindowRefresh()"],
		["reaper.DockWindowRefreshForHWND", "reaper.DockWindowRefreshForHWND(${1:hwnd})"],
		["reaper.DockWindowRemove", "reaper.DockWindowRemove(${1:hwnd})"],
		["gfx.drawchar", "gfx.drawchar(${1:char})"],
		["gfx.drawnumber", "gfx.drawnumber(${1:n}, ${2:ndigits})"],
		["gfx.drawstr", "gfx.drawstr(${1:str}, ${2:flags}, ${3:right}, ${4:bottom})"],
		["reaper.EditTempoTimeSigMarker", "reaper.EditTempoTimeSigMarker(${1:project}, ${2:markerindex})"],
		["reaper.EnsureNotCompletelyOffscreen", "reaper.EnsureNotCompletelyOffscreen()"],
		["reaper.EnumerateFiles", "reaper.EnumerateFiles(${1:path}, ${2:fileindex})"],
		["reaper.EnumerateSubdirectories", "reaper.EnumerateSubdirectories(${1:path}, ${2:subdirindex})"],
		["reaper.EnumPitchShiftModes", "reaper.EnumPitchShiftModes(${1:mode})"],
		["reaper.EnumPitchShiftSubModes", "reaper.EnumPitchShiftSubModes(${1:mode}, ${2:submode})"],
		["reaper.EnumProjectMarkers", "reaper.EnumProjectMarkers(${1:idx})"],
		["reaper.EnumProjectMarkers2", "reaper.EnumProjectMarkers2(${1:proj}, ${2:idx})"],
		["reaper.EnumProjectMarkers3", "reaper.EnumProjectMarkers3(${1:proj}, ${2:idx})"],
		["reaper.EnumProjects", "reaper.EnumProjects(${1:idx}, ${2:projfn})"],
		["reaper.EnumProjExtState", "reaper.EnumProjExtState(${1:proj}, ${2:extname}, ${3:idx})"],
		["reaper.EnumRegionRenderMatrix", "reaper.EnumRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:rendertrack})"],
		["reaper.EnumTrackMIDIProgramNames", "reaper.EnumTrackMIDIProgramNames(${1:track}, ${2:programNumber}, ${3:programName})"],
		["reaper.EnumTrackMIDIProgramNamesEx", "reaper.EnumTrackMIDIProgramNamesEx(${1:proj}, ${2:track}, ${3:programNumber}, ${4:programName})"],
		["reaper.Envelope_Evaluate", "reaper.Envelope_Evaluate(${1:envelope}, ${2:time}, ${3:samplerate}, ${4:samplesRequested})"],
		["reaper.Envelope_FormatValue", "reaper.Envelope_FormatValue(${1:env}, ${2:value})"],
		["reaper.Envelope_GetParentTake", "reaper.Envelope_GetParentTake(${1:env})"],
		["reaper.Envelope_GetParentTrack", "reaper.Envelope_GetParentTrack(${1:env})"],
		["reaper.Envelope_SortPoints", "reaper.Envelope_SortPoints(${1:envelope})"],
		["reaper.Envelope_SortPointsEx", "reaper.Envelope_SortPointsEx(${1:envelope}, ${2:autoitem_idx})"],
		["reaper.ExecProcess", "reaper.ExecProcess(${1:cmdline}, ${2:timeoutmsec})"],
		["fft", "fft(${1:size}, ${2:permute}, ${3:offset})"],
		["fft_real", "fft_real(${1:size}, ${2:permute}, ${3:offset})"],
		["reaper.file_exists", "reaper.file_exists(${1:path})"],
		["reaper.FindTempoTimeSigMarker", "reaper.FindTempoTimeSigMarker(${1:project}, ${2:time})"],
		["reaper.FNG_AddMidiNote", "reaper.FNG_AddMidiNote(${1:midiTake})"],
		["reaper.FNG_AllocMidiTake", "reaper.FNG_AllocMidiTake(${1:take})"],
		["reaper.FNG_CountMidiNotes", "reaper.FNG_CountMidiNotes(${1:midiTake})"],
		["reaper.FNG_FreeMidiTake", "reaper.FNG_FreeMidiTake(${1:midiTake})"],
		["reaper.FNG_GetMidiNote", "reaper.FNG_GetMidiNote(${1:midiTake}, ${2:index})"],
		["reaper.FNG_GetMidiNoteIntProperty", "reaper.FNG_GetMidiNoteIntProperty(${1:midiNote}, ${2:property})"],
		["reaper.FNG_SetMidiNoteIntProperty", "reaper.FNG_SetMidiNoteIntProperty(${1:midiNote}, ${2:property}, ${3:value})"],
		["reaper.format_timestr", "reaper.format_timestr(${1:tpos}, ${2:buf})"],
		["reaper.format_timestr_len", "reaper.format_timestr_len(${1:tpos}, ${2:buf}, ${3:offset}, ${4:modeoverride})"],
		["reaper.format_timestr_pos", "reaper.format_timestr_pos(${1:tpos}, ${2:buf}, ${3:modeoverride})"],
		["reaper.genGuid", "reaper.genGuid(${1:gGUID})"],
		["reaper.get_action_context", "reaper.get_action_context()"],
		["get_alloc", "get_alloc()"],
		["reaper.get_config_var_string", "reaper.get_config_var_string(${1:name})"],
		["reaper.get_ini_file", "reaper.get_ini_file()"],
		["reaper.GetActiveTake", "reaper.GetActiveTake(${1:item})"],
		["reaper.GetAllProjectPlayStates", "reaper.GetAllProjectPlayStates(${1:ignoreProject})"],
		["reaper.GetAppVersion", "reaper.GetAppVersion()"],
		["reaper.GetArmedCommand", "reaper.GetArmedCommand()"],
		["reaper.GetAudioAccessorEndTime", "reaper.GetAudioAccessorEndTime(${1:accessor})"],
		["reaper.GetAudioAccessorHash", "reaper.GetAudioAccessorHash(${1:accessor}, ${2:hashNeed128})"],
		["reaper.GetAudioAccessorSamples", "reaper.GetAudioAccessorSamples(${1:accessor}, ${2:samplerate}, ${3:numchannels}, ${4:starttime_sec}, ${5:numsamplesperchannel}, ${6:samplebuffer})"],
		["reaper.GetAudioAccessorStartTime", "reaper.GetAudioAccessorStartTime(${1:accessor})"],
		["reaper.GetAudioDeviceInfo", "reaper.GetAudioDeviceInfo(${1:attribute}, ${2:desc})"],
		["gfx.getchar", "gfx.getchar(${1:char})"],
		["reaper.GetConfigWantsDock", "reaper.GetConfigWantsDock(${1:ident_str})"],
		["reaper.GetCurrentProjectInLoadSave", "reaper.GetCurrentProjectInLoadSave()"],
		["reaper.GetCursorContext", "reaper.GetCursorContext()"],
		["reaper.GetCursorContext2", "reaper.GetCursorContext2(${1:want_last_valid})"],
		["reaper.GetCursorPosition", "reaper.GetCursorPosition()"],
		["reaper.GetCursorPositionEx", "reaper.GetCursorPositionEx(${1:proj})"],
		["reaper.GetDisplayedMediaItemColor", "reaper.GetDisplayedMediaItemColor(${1:item})"],
		["reaper.GetDisplayedMediaItemColor2", "reaper.GetDisplayedMediaItemColor2(${1:item}, ${2:take})"],
		["gfx.getdropfile", "gfx.getdropfile(${1:idx})"],
		["reaper.GetEnvelopeName", "reaper.GetEnvelopeName(${1:env}, ${2:buf})"],
		["reaper.GetEnvelopePoint", "reaper.GetEnvelopePoint(${1:envelope}, ${2:ptidx})"],
		["reaper.GetEnvelopePointByTime", "reaper.GetEnvelopePointByTime(${1:envelope}, ${2:time})"],
		["reaper.GetEnvelopePointByTimeEx", "reaper.GetEnvelopePointByTimeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time})"],
		["reaper.GetEnvelopePointEx", "reaper.GetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx})"],
		["reaper.GetEnvelopeScalingMode", "reaper.GetEnvelopeScalingMode(${1:env})"],
		["reaper.GetEnvelopeStateChunk", "reaper.GetEnvelopeStateChunk(${1:env}, ${2:str}, ${3:isundo})"],
		["reaper.GetExePath", "reaper.GetExePath()"],
		["reaper.GetExtState", "reaper.GetExtState(${1:section}, ${2:key})"],
		["reaper.GetFocusedFX", "reaper.GetFocusedFX()"],
		["gfx.getfont", "gfx.getfont()"],
		["reaper.GetFreeDiskSpaceForRecordPath", "reaper.GetFreeDiskSpaceForRecordPath(${1:proj}, ${2:pathidx})"],
		["reaper.GetFXEnvelope", "reaper.GetFXEnvelope(${1:track}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"],
		["reaper.GetGlobalAutomationOverride", "reaper.GetGlobalAutomationOverride()"],
		["reaper.GetHZoomLevel", "reaper.GetHZoomLevel()"],
		["gfx.getimgdim", "gfx.getimgdim(${1:handle})"],
		["reaper.GetInputChannelName", "reaper.GetInputChannelName(${1:channelIndex})"],
		["reaper.GetInputOutputLatency", "reaper.GetInputOutputLatency()"],
		["reaper.GetItemEditingTime2", "reaper.GetItemEditingTime2()"],
		["reaper.GetItemProjectContext", "reaper.GetItemProjectContext(${1:item})"],
		["reaper.GetItemStateChunk", "reaper.GetItemStateChunk(${1:item}, ${2:str}, ${3:isundo})"],
		["reaper.GetLastColorThemeFile", "reaper.GetLastColorThemeFile()"],
		["reaper.GetLastMarkerAndCurRegion", "reaper.GetLastMarkerAndCurRegion(${1:proj}, ${2:time})"],
		["reaper.GetLastTouchedFX", "reaper.GetLastTouchedFX()"],
		["reaper.GetLastTouchedTrack", "reaper.GetLastTouchedTrack()"],
		["reaper.GetMainHwnd", "reaper.GetMainHwnd()"],
		["reaper.GetMasterMuteSoloFlags", "reaper.GetMasterMuteSoloFlags()"],
		["reaper.GetMasterTrack", "reaper.GetMasterTrack(${1:proj})"],
		["reaper.GetMasterTrackVisibility", "reaper.GetMasterTrackVisibility()"],
		["reaper.GetMaxMidiInputs", "reaper.GetMaxMidiInputs()"],
		["reaper.GetMaxMidiOutputs", "reaper.GetMaxMidiOutputs()"],
		["reaper.GetMediaItem", "reaper.GetMediaItem(${1:proj}, ${2:itemidx})"],
		["reaper.GetMediaItem_Track", "reaper.GetMediaItem_Track(${1:item})"],
		["reaper.GetMediaItemInfo_Value", "reaper.GetMediaItemInfo_Value(${1:item}, ${2:parmname})"],
		["reaper.GetMediaItemNumTakes", "reaper.GetMediaItemNumTakes(${1:item})"],
		["reaper.GetMediaItemTake", "reaper.GetMediaItemTake(${1:item}, ${2:tk})"],
		["reaper.GetMediaItemTake_Item", "reaper.GetMediaItemTake_Item(${1:take})"],
		["reaper.GetMediaItemTake_Peaks", "reaper.GetMediaItemTake_Peaks(${1:take}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"],
		["reaper.GetMediaItemTake_Source", "reaper.GetMediaItemTake_Source(${1:take})"],
		["reaper.GetMediaItemTake_Track", "reaper.GetMediaItemTake_Track(${1:take})"],
		["reaper.GetMediaItemTakeByGUID", "reaper.GetMediaItemTakeByGUID(${1:project}, ${2:guidGUID})"],
		["reaper.GetMediaItemTakeInfo_Value", "reaper.GetMediaItemTakeInfo_Value(${1:take}, ${2:parmname})"],
		["reaper.GetMediaItemTrack", "reaper.GetMediaItemTrack(${1:item})"],
		["reaper.GetMediaSourceFileName", "reaper.GetMediaSourceFileName(${1:source}, ${2:filenamebuf})"],
		["reaper.GetMediaSourceLength", "reaper.GetMediaSourceLength(${1:source})"],
		["reaper.GetMediaSourceNumChannels", "reaper.GetMediaSourceNumChannels(${1:source})"],
		["reaper.GetMediaSourceParent", "reaper.GetMediaSourceParent(${1:src})"],
		["reaper.GetMediaSourceSampleRate", "reaper.GetMediaSourceSampleRate(${1:source})"],
		["reaper.GetMediaSourceType", "reaper.GetMediaSourceType(${1:source}, ${2:typebuf})"],
		["reaper.GetMediaTrackInfo_Value", "reaper.GetMediaTrackInfo_Value(${1:tr}, ${2:parmname})"],
		["reaper.GetMIDIInputName", "reaper.GetMIDIInputName(${1:dev}, ${2:nameout})"],
		["reaper.GetMIDIOutputName", "reaper.GetMIDIOutputName(${1:dev}, ${2:nameout})"],
		["reaper.GetMixerScroll", "reaper.GetMixerScroll()"],
		["reaper.GetMouseModifier", "reaper.GetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:action})"],
		["reaper.GetMousePosition", "reaper.GetMousePosition()"],
		["reaper.GetNumAudioInputs", "reaper.GetNumAudioInputs()"],
		["reaper.GetNumAudioOutputs", "reaper.GetNumAudioOutputs()"],
		["reaper.GetNumMIDIInputs", "reaper.GetNumMIDIInputs()"],
		["reaper.GetNumMIDIOutputs", "reaper.GetNumMIDIOutputs()"],
		["reaper.GetNumTracks", "reaper.GetNumTracks()"],
		["reaper.GetOS", "reaper.GetOS()"],
		["reaper.GetOutputChannelName", "reaper.GetOutputChannelName(${1:channelIndex})"],
		["reaper.GetOutputLatency", "reaper.GetOutputLatency()"],
		["reaper.GetParentTrack", "reaper.GetParentTrack(${1:track})"],
		["reaper.GetPeakFileName", "reaper.GetPeakFileName(${1:fn}, ${2:buf})"],
		["reaper.GetPeakFileNameEx", "reaper.GetPeakFileNameEx(${1:fn}, ${2:buf}, ${3:forWrite})"],
		["reaper.GetPeakFileNameEx2", "reaper.GetPeakFileNameEx2(${1:fn}, ${2:buf}, ${3:forWrite}, ${4:peaksfileextension})"],
		["gfx.getpixel", "gfx.getpixel()"],
		["reaper.GetPlayPosition", "reaper.GetPlayPosition()"],
		["reaper.GetPlayPosition2", "reaper.GetPlayPosition2()"],
		["reaper.GetPlayPosition2Ex", "reaper.GetPlayPosition2Ex(${1:proj})"],
		["reaper.GetPlayPositionEx", "reaper.GetPlayPositionEx(${1:proj})"],
		["reaper.GetPlayState", "reaper.GetPlayState()"],
		["reaper.GetPlayStateEx", "reaper.GetPlayStateEx(${1:proj})"],
		["reaper.GetProjectLength", "reaper.GetProjectLength(${1:proj})"],
		["reaper.GetProjectName", "reaper.GetProjectName(${1:proj}, ${2:buf})"],
		["reaper.GetProjectPath", "reaper.GetProjectPath(${1:buf})"],
		["reaper.GetProjectPathEx", "reaper.GetProjectPathEx(${1:proj}, ${2:buf})"],
		["reaper.GetProjectStateChangeCount", "reaper.GetProjectStateChangeCount(${1:proj})"],
		["reaper.GetProjectTimeOffset", "reaper.GetProjectTimeOffset(${1:proj}, ${2:rndframe})"],
		["reaper.GetProjectTimeSignature", "reaper.GetProjectTimeSignature()"],
		["reaper.GetProjectTimeSignature2", "reaper.GetProjectTimeSignature2(${1:proj})"],
		["reaper.GetProjExtState", "reaper.GetProjExtState(${1:proj}, ${2:extname}, ${3:key})"],
		["reaper.GetResourcePath", "reaper.GetResourcePath()"],
		["reaper.GetSelectedEnvelope", "reaper.GetSelectedEnvelope(${1:proj})"],
		["reaper.GetSelectedMediaItem", "reaper.GetSelectedMediaItem(${1:proj}, ${2:selitem})"],
		["reaper.GetSelectedTrack", "reaper.GetSelectedTrack(${1:proj}, ${2:seltrackidx})"],
		["reaper.GetSelectedTrack2", "reaper.GetSelectedTrack2(${1:proj}, ${2:seltrackidx}, ${3:wantmaster})"],
		["reaper.GetSelectedTrackEnvelope", "reaper.GetSelectedTrackEnvelope(${1:proj})"],
		["reaper.GetSet_ArrangeView2", "reaper.GetSet_ArrangeView2(${1:proj}, ${2:isSet}, ${3:screen_x_start}, ${4:screen_x_end})"],
		["reaper.GetSet_LoopTimeRange", "reaper.GetSet_LoopTimeRange(${1:isSet}, ${2:isLoop}, ${3:start}, ${4:end}, ${5:allowautoseek})"],
		["reaper.GetSet_LoopTimeRange2", "reaper.GetSet_LoopTimeRange2(${1:proj}, ${2:isSet}, ${3:isLoop}, ${4:start}, ${5:end}, ${6:allowautoseek})"],
		["reaper.GetSetAutomationItemInfo", "reaper.GetSetAutomationItemInfo(${1:env}, ${2:autoitem_idx}, ${3:desc}, ${4:value}, ${5:is_set})"],
		["reaper.GetSetEnvelopeState", "reaper.GetSetEnvelopeState(${1:env}, ${2:str})"],
		["reaper.GetSetEnvelopeState2", "reaper.GetSetEnvelopeState2(${1:env}, ${2:str}, ${3:isundo})"],
		["reaper.GetSetItemState", "reaper.GetSetItemState(${1:item}, ${2:str})"],
		["reaper.GetSetItemState2", "reaper.GetSetItemState2(${1:item}, ${2:str}, ${3:isundo})"],
		["reaper.GetSetMediaItemInfo_String", "reaper.GetSetMediaItemInfo_String(${1:item}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"],
		["reaper.GetSetMediaItemTakeInfo_String", "reaper.GetSetMediaItemTakeInfo_String(${1:tk}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"],
		["reaper.GetSetMediaTrackInfo_String", "reaper.GetSetMediaTrackInfo_String(${1:tr}, ${2:parmname}, ${3:stringNeedBig}, ${4:setNewValue})"],
		["reaper.GetSetProjectAuthor", "reaper.GetSetProjectAuthor(${1:proj}, ${2:set}, ${3:author})"],
		["reaper.GetSetProjectGrid", "reaper.GetSetProjectGrid(${1:project}, ${2:set})"],
		["reaper.GetSetProjectNotes", "reaper.GetSetProjectNotes(${1:proj}, ${2:set}, ${3:notes})"],
		["reaper.GetSetRepeat", "reaper.GetSetRepeat(${1:val})"],
		["reaper.GetSetRepeatEx", "reaper.GetSetRepeatEx(${1:proj}, ${2:val})"],
		["reaper.GetSetTrackGroupMembership", "reaper.GetSetTrackGroupMembership(${1:tr}, ${2:groupname}, ${3:setmask}, ${4:setvalue})"],
		["reaper.GetSetTrackGroupMembershipHigh", "reaper.GetSetTrackGroupMembershipHigh(${1:tr}, ${2:groupname}, ${3:setmask}, ${4:setvalue})"],
		["reaper.GetSetTrackState", "reaper.GetSetTrackState(${1:track}, ${2:str})"],
		["reaper.GetSetTrackState2", "reaper.GetSetTrackState2(${1:track}, ${2:str}, ${3:isundo})"],
		["reaper.GetSubProjectFromSource", "reaper.GetSubProjectFromSource(${1:src})"],
		["reaper.GetTake", "reaper.GetTake(${1:item}, ${2:takeidx})"],
		["reaper.GetTakeEnvelope", "reaper.GetTakeEnvelope(${1:take}, ${2:envidx})"],
		["reaper.GetTakeEnvelopeByName", "reaper.GetTakeEnvelopeByName(${1:take}, ${2:envname})"],
		["reaper.GetTakeName", "reaper.GetTakeName(${1:take})"],
		["reaper.GetTakeNumStretchMarkers", "reaper.GetTakeNumStretchMarkers(${1:take})"],
		["reaper.GetTakeStretchMarker", "reaper.GetTakeStretchMarker(${1:take}, ${2:idx})"],
		["reaper.GetTakeStretchMarkerSlope", "reaper.GetTakeStretchMarkerSlope(${1:take}, ${2:idx})"],
		["reaper.GetTCPFXParm", "reaper.GetTCPFXParm(${1:project}, ${2:track}, ${3:index})"],
		["reaper.GetTempoMatchPlayRate", "reaper.GetTempoMatchPlayRate(${1:source}, ${2:srcscale}, ${3:position}, ${4:mult})"],
		["reaper.GetTempoTimeSigMarker", "reaper.GetTempoTimeSigMarker(${1:proj}, ${2:ptidx})"],
		["reaper.GetToggleCommandState", "reaper.GetToggleCommandState(${1:command_id})"],
		["reaper.GetToggleCommandStateEx", "reaper.GetToggleCommandStateEx(${1:section_id}, ${2:command_id})"],
		["reaper.GetTooltipWindow", "reaper.GetTooltipWindow()"],
		["reaper.GetTrack", "reaper.GetTrack(${1:proj}, ${2:trackidx})"],
		["reaper.GetTrackAutomationMode", "reaper.GetTrackAutomationMode(${1:tr})"],
		["reaper.GetTrackColor", "reaper.GetTrackColor(${1:track})"],
		["reaper.GetTrackDepth", "reaper.GetTrackDepth(${1:track})"],
		["reaper.GetTrackEnvelope", "reaper.GetTrackEnvelope(${1:track}, ${2:envidx})"],
		["reaper.GetTrackEnvelopeByChunkName", "reaper.GetTrackEnvelopeByChunkName(${1:tr}, ${2:cfgchunkname})"],
		["reaper.GetTrackEnvelopeByName", "reaper.GetTrackEnvelopeByName(${1:track}, ${2:envname})"],
		["reaper.GetTrackGUID", "reaper.GetTrackGUID(${1:tr})"],
		["reaper.GetTrackMediaItem", "reaper.GetTrackMediaItem(${1:tr}, ${2:itemidx})"],
		["reaper.GetTrackMIDILyrics", "reaper.GetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:bufWant16384})"],
		["reaper.GetTrackMIDINoteName", "reaper.GetTrackMIDINoteName(${1:track}, ${2:pitch}, ${3:chan})"],
		["reaper.GetTrackMIDINoteNameEx", "reaper.GetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:pitch}, ${4:chan})"],
		["reaper.GetTrackMIDINoteRange", "reaper.GetTrackMIDINoteRange(${1:proj}, ${2:track})"],
		["reaper.GetTrackName", "reaper.GetTrackName(${1:track}, ${2:buf})"],
		["reaper.GetTrackNumMediaItems", "reaper.GetTrackNumMediaItems(${1:tr})"],
		["reaper.GetTrackNumSends", "reaper.GetTrackNumSends(${1:tr}, ${2:category})"],
		["reaper.GetTrackReceiveName", "reaper.GetTrackReceiveName(${1:track}, ${2:recv_index}, ${3:buf})"],
		["reaper.GetTrackReceiveUIMute", "reaper.GetTrackReceiveUIMute(${1:track}, ${2:recv_index})"],
		["reaper.GetTrackReceiveUIVolPan", "reaper.GetTrackReceiveUIVolPan(${1:track}, ${2:recv_index})"],
		["reaper.GetTrackSendInfo_Value", "reaper.GetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:parmname})"],
		["reaper.GetTrackSendName", "reaper.GetTrackSendName(${1:track}, ${2:send_index}, ${3:buf})"],
		["reaper.GetTrackSendUIMute", "reaper.GetTrackSendUIMute(${1:track}, ${2:send_index})"],
		["reaper.GetTrackSendUIVolPan", "reaper.GetTrackSendUIVolPan(${1:track}, ${2:send_index})"],
		["reaper.GetTrackState", "reaper.GetTrackState(${1:track})"],
		["reaper.GetTrackStateChunk", "reaper.GetTrackStateChunk(${1:track}, ${2:str}, ${3:isundo})"],
		["reaper.GetTrackUIMute", "reaper.GetTrackUIMute(${1:track})"],
		["reaper.GetTrackUIPan", "reaper.GetTrackUIPan(${1:track})"],
		["reaper.GetTrackUIVolPan", "reaper.GetTrackUIVolPan(${1:track})"],
		["reaper.GetUnderrunTime", "reaper.GetUnderrunTime()"],
		["reaper.GetUserFileNameForRead", "reaper.GetUserFileNameForRead(${1:filenameNeed4096}, ${2:title}, ${3:defext})"],
		["reaper.GetUserInputs", "reaper.GetUserInputs(${1:title}, ${2:num_inputs}, ${3:captions_csv}, ${4:retvals_csv})"],
		["reaper.GoToMarker", "reaper.GoToMarker(${1:proj}, ${2:marker_index}, ${3:use_timeline_order})"],
		["reaper.GoToRegion", "reaper.GoToRegion(${1:proj}, ${2:region_index}, ${3:use_timeline_order})"],
		["reaper.GR_SelectColor", "reaper.GR_SelectColor(${1:hwnd})"],
		["gfx.gradrect", "gfx.gradrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:r}, ${6:g}, ${7:b}, ${8:a}, ${9:drdx}, ${10:dgdx}, ${11:dbdx}, ${12:dadx}, ${13:drdy}, ${14:dgdy}, ${15:dbdy}, ${16:dady})"],
		["reaper.GSC_mainwnd", "reaper.GSC_mainwnd(${1:t})"],
		["reaper.guidToString", "reaper.guidToString(${1:gGUID}, ${2:destNeed64})"],
		["reaper.HasExtState", "reaper.HasExtState(${1:section}, ${2:key})"],
		["reaper.HasTrackMIDIPrograms", "reaper.HasTrackMIDIPrograms(${1:track})"],
		["reaper.HasTrackMIDIProgramsEx", "reaper.HasTrackMIDIProgramsEx(${1:proj}, ${2:track})"],
		["reaper.Help_Set", "reaper.Help_Set(${1:helpstring}, ${2:is_temporary_help})"],
		["ifft", "ifft(${1:size}, ${2:permute}, ${3:offset})"],
		["ifft_real", "ifft_real(${1:size}, ${2:permute}, ${3:offset})"],
		["reaper.image_resolve_fn", "reaper.image_resolve_fn(${1:in}, ${2:out})"],
		["gfx.init", "gfx.init(${1:name}, ${2:width}, ${3:height}, ${4:dockstate}, ${5:xpos}, ${6:ypos})"],
		["reaper.InsertAutomationItem", "reaper.InsertAutomationItem(${1:env}, ${2:pool_id}, ${3:position}, ${4:length})"],
		["reaper.InsertEnvelopePoint", "reaper.InsertEnvelopePoint(${1:envelope}, ${2:time}, ${3:value}, ${4:shape}, ${5:tension}, ${6:selected}, ${7:noSortIn})"],
		["reaper.InsertEnvelopePointEx", "reaper.InsertEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:time}, ${4:value}, ${5:shape}, ${6:tension}, ${7:selected}, ${8:noSortIn})"],
		["reaper.InsertMedia", "reaper.InsertMedia(${1:file}, ${2:mode})"],
		["reaper.InsertMediaSection", "reaper.InsertMediaSection(${1:file}, ${2:mode}, ${3:startpct}, ${4:endpct}, ${5:pitchshift})"],
		["reaper.InsertTrackAtIndex", "reaper.InsertTrackAtIndex(${1:idx}, ${2:wantDefaults})"],
		["reaper.IsMediaExtension", "reaper.IsMediaExtension(${1:ext}, ${2:wantOthers})"],
		["reaper.IsMediaItemSelected", "reaper.IsMediaItemSelected(${1:item})"],
		["reaper.IsProjectDirty", "reaper.IsProjectDirty(${1:proj})"],
		["reaper.IsTrackSelected", "reaper.IsTrackSelected(${1:track})"],
		["reaper.IsTrackVisible", "reaper.IsTrackVisible(${1:track}, ${2:mixer})"],
		["reaper.joystick_create", "reaper.joystick_create(${1:guidGUID})"],
		["reaper.joystick_destroy", "reaper.joystick_destroy(${1:device})"],
		["reaper.joystick_enum", "reaper.joystick_enum(${1:index})"],
		["reaper.joystick_getaxis", "reaper.joystick_getaxis(${1:dev}, ${2:axis})"],
		["reaper.joystick_getbuttonmask", "reaper.joystick_getbuttonmask(${1:dev})"],
		["reaper.joystick_getinfo", "reaper.joystick_getinfo(${1:dev})"],
		["reaper.joystick_getpov", "reaper.joystick_getpov(${1:dev}, ${2:pov})"],
		["reaper.joystick_update", "reaper.joystick_update(${1:dev})"],
		["reaper.LICE_ClipLine", "reaper.LICE_ClipLine(${1:pX1}, ${2:pY1}, ${3:pX2}, ${4:pY2}, ${5:xLo}, ${6:yLo}, ${7:xHi}, ${8:yHi})"],
		["gfx.line", "gfx.line(${1:x}, ${2:y}, ${3:x2}, ${4:y2}, ${5:aa})"],
		["gfx.lineto", "gfx.lineto(${1:x}, ${2:y}, ${3:aa})"],
		["gfx.loadimg", "gfx.loadimg(${1:image}, ${2:filename})"],
		["reaper.Loop_OnArrow", "reaper.Loop_OnArrow(${1:project}, ${2:direction})"],
		["reaper.Main_OnCommand", "reaper.Main_OnCommand(${1:command}, ${2:flag})"],
		["reaper.Main_OnCommandEx", "reaper.Main_OnCommandEx(${1:command}, ${2:flag}, ${3:proj})"],
		["reaper.Main_openProject", "reaper.Main_openProject(${1:name})"],
		["reaper.Main_SaveProject", "reaper.Main_SaveProject(${1:proj}, ${2:forceSaveAsIn})"],
		["reaper.Main_UpdateLoopInfo", "reaper.Main_UpdateLoopInfo(${1:ignoremask})"],
		["reaper.MarkProjectDirty", "reaper.MarkProjectDirty(${1:proj})"],
		["reaper.MarkTrackItemsDirty", "reaper.MarkTrackItemsDirty(${1:track}, ${2:item})"],
		["reaper.Master_GetPlayRate", "reaper.Master_GetPlayRate(${1:project})"],
		["reaper.Master_GetPlayRateAtTime", "reaper.Master_GetPlayRateAtTime(${1:time_s}, ${2:proj})"],
		["reaper.Master_GetTempo", "reaper.Master_GetTempo()"],
		["reaper.Master_NormalizePlayRate", "reaper.Master_NormalizePlayRate(${1:playrate}, ${2:isnormalized})"],
		["reaper.Master_NormalizeTempo", "reaper.Master_NormalizeTempo(${1:bpm}, ${2:isnormalized})"],
		["reaper.MB", "reaper.MB(${1:msg}, ${2:title}, ${3:type})"],
		["gfx.measurechar", "gfx.measurechar(${1:char})"],
		["gfx.measurestr", "gfx.measurestr(${1:str})"],
		["reaper.MediaItemDescendsFromTrack", "reaper.MediaItemDescendsFromTrack(${1:item}, ${2:track})"],
		["reaper.MIDI_CountEvts", "reaper.MIDI_CountEvts(${1:take})"],
		["reaper.MIDI_DeleteCC", "reaper.MIDI_DeleteCC(${1:take}, ${2:ccidx})"],
		["reaper.MIDI_DeleteEvt", "reaper.MIDI_DeleteEvt(${1:take}, ${2:evtidx})"],
		["reaper.MIDI_DeleteNote", "reaper.MIDI_DeleteNote(${1:take}, ${2:noteidx})"],
		["reaper.MIDI_DeleteTextSysexEvt", "reaper.MIDI_DeleteTextSysexEvt(${1:take}, ${2:textsyxevtidx})"],
		["reaper.MIDI_EnumSelCC", "reaper.MIDI_EnumSelCC(${1:take}, ${2:ccidx})"],
		["reaper.MIDI_EnumSelEvts", "reaper.MIDI_EnumSelEvts(${1:take}, ${2:evtidx})"],
		["reaper.MIDI_EnumSelNotes", "reaper.MIDI_EnumSelNotes(${1:take}, ${2:noteidx})"],
		["reaper.MIDI_EnumSelTextSysexEvts", "reaper.MIDI_EnumSelTextSysexEvts(${1:take}, ${2:textsyxidx})"],
		["reaper.MIDI_GetAllEvts", "reaper.MIDI_GetAllEvts(${1:take}, ${2:buf})"],
		["reaper.MIDI_GetCC", "reaper.MIDI_GetCC(${1:take}, ${2:ccidx})"],
		["reaper.MIDI_GetEvt", "reaper.MIDI_GetEvt(${1:take}, ${2:evtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:msg})"],
		["reaper.MIDI_GetGrid", "reaper.MIDI_GetGrid(${1:take})"],
		["reaper.MIDI_GetHash", "reaper.MIDI_GetHash(${1:take}, ${2:notesonly}, ${3:hash})"],
		["reaper.MIDI_GetNote", "reaper.MIDI_GetNote(${1:take}, ${2:noteidx})"],
		["reaper.MIDI_GetPPQPos_EndOfMeasure", "reaper.MIDI_GetPPQPos_EndOfMeasure(${1:take}, ${2:ppqpos})"],
		["reaper.MIDI_GetPPQPos_StartOfMeasure", "reaper.MIDI_GetPPQPos_StartOfMeasure(${1:take}, ${2:ppqpos})"],
		["reaper.MIDI_GetPPQPosFromProjQN", "reaper.MIDI_GetPPQPosFromProjQN(${1:take}, ${2:projqn})"],
		["reaper.MIDI_GetPPQPosFromProjTime", "reaper.MIDI_GetPPQPosFromProjTime(${1:take}, ${2:projtime})"],
		["reaper.MIDI_GetProjQNFromPPQPos", "reaper.MIDI_GetProjQNFromPPQPos(${1:take}, ${2:ppqpos})"],
		["reaper.MIDI_GetProjTimeFromPPQPos", "reaper.MIDI_GetProjTimeFromPPQPos(${1:take}, ${2:ppqpos})"],
		["reaper.MIDI_GetScale", "reaper.MIDI_GetScale(${1:take}, ${2:root}, ${3:scale}, ${4:name})"],
		["reaper.MIDI_GetTextSysexEvt", "reaper.MIDI_GetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:type}, ${7:msg})"],
		["reaper.MIDI_GetTrackHash", "reaper.MIDI_GetTrackHash(${1:track}, ${2:notesonly}, ${3:hash})"],
		["reaper.MIDI_InsertCC", "reaper.MIDI_InsertCC(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:chanmsg}, ${6:chan}, ${7:msg2}, ${8:msg3})"],
		["reaper.MIDI_InsertEvt", "reaper.MIDI_InsertEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:bytestr})"],
		["reaper.MIDI_InsertNote", "reaper.MIDI_InsertNote(${1:take}, ${2:selected}, ${3:muted}, ${4:startppqpos}, ${5:endppqpos}, ${6:chan}, ${7:pitch}, ${8:vel}, ${9:noSortIn})"],
		["reaper.MIDI_InsertTextSysexEvt", "reaper.MIDI_InsertTextSysexEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:type}, ${6:bytestr})"],
		["reaper.midi_reinit", "reaper.midi_reinit()"],
		["reaper.MIDI_SelectAll", "reaper.MIDI_SelectAll(${1:take}, ${2:select})"],
		["reaper.MIDI_SetAllEvts", "reaper.MIDI_SetAllEvts(${1:take}, ${2:buf})"],
		["reaper.MIDI_SetCC", "reaper.MIDI_SetCC(${1:take}, ${2:ccidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:chanmsgIn}, ${7:chanIn}, ${8:msg2In}, ${9:msg3In}, ${10:noSortIn})"],
		["reaper.MIDI_SetEvt", "reaper.MIDI_SetEvt(${1:take}, ${2:evtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:msg}, ${7:noSortIn})"],
		["reaper.MIDI_SetItemExtents", "reaper.MIDI_SetItemExtents(${1:item}, ${2:startQN}, ${3:endQN})"],
		["reaper.MIDI_SetNote", "reaper.MIDI_SetNote(${1:take}, ${2:noteidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:startppqposIn}, ${6:endppqposIn}, ${7:chanIn}, ${8:pitchIn}, ${9:velIn}, ${10:noSortIn})"],
		["reaper.MIDI_SetTextSysexEvt", "reaper.MIDI_SetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:typeIn}, ${7:msg}, ${8:noSortIn})"],
		["reaper.MIDI_Sort", "reaper.MIDI_Sort(${1:take})"],
		["reaper.MIDIEditor_GetActive", "reaper.MIDIEditor_GetActive()"],
		["reaper.MIDIEditor_GetMode", "reaper.MIDIEditor_GetMode(${1:midieditor})"],
		["reaper.MIDIEditor_GetSetting_int", "reaper.MIDIEditor_GetSetting_int(${1:midieditor}, ${2:setting_desc})"],
		["reaper.MIDIEditor_GetSetting_str", "reaper.MIDIEditor_GetSetting_str(${1:midieditor}, ${2:setting_desc}, ${3:buf})"],
		["reaper.MIDIEditor_GetTake", "reaper.MIDIEditor_GetTake(${1:midieditor})"],
		["reaper.MIDIEditor_LastFocused_OnCommand", "reaper.MIDIEditor_LastFocused_OnCommand(${1:command_id}, ${2:islistviewcommand})"],
		["reaper.MIDIEditor_OnCommand", "reaper.MIDIEditor_OnCommand(${1:midieditor}, ${2:command_id})"],
		["reaper.mkpanstr", "reaper.mkpanstr(${1:strNeed64}, ${2:pan})"],
		["reaper.mkvolpanstr", "reaper.mkvolpanstr(${1:strNeed64}, ${2:vol}, ${3:pan})"],
		["reaper.mkvolstr", "reaper.mkvolstr(${1:strNeed64}, ${2:vol})"],
		["reaper.MoveEditCursor", "reaper.MoveEditCursor(${1:adjamt}, ${2:dosel})"],
		["reaper.MoveMediaItemToTrack", "reaper.MoveMediaItemToTrack(${1:item}, ${2:desttr})"],
		["gfx.muladdrect", "gfx.muladdrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:mul_r}, ${6:mul_g}, ${7:mul_b}, ${8:mul_a}, ${9:add_r}, ${10:add_g}, ${11:add_b}, ${12:add_a})"],
		["multiply", "multiply(${1:src}, ${2:srcoffs}, ${3:size}, ${4:destoffs})"],
		["reaper.MuteAllTracks", "reaper.MuteAllTracks(${1:mute})"],
		["reaper.my_getViewport", "reaper.my_getViewport(${1:numberr.left}, ${2:numberr.top}, ${3:numberr.right}, ${4:numberr.bot}, ${5:sr.left}, ${6:sr.top}, ${7:sr.right}, ${8:sr.bot}, ${9:wantWorkArea})"],
		["reaper.NamedCommandLookup", "reaper.NamedCommandLookup(${1:command_name})"],
		["reaper.new_array", "reaper.new_array(${1:table|arraysize})"],
		["reaper.NF_AnalyzeTakeLoudness", "reaper.NF_AnalyzeTakeLoudness(${1:take}, ${2:analyzeTruePeak})"],
		["reaper.NF_AnalyzeTakeLoudness2", "reaper.NF_AnalyzeTakeLoudness2(${1:take}, ${2:analyzeTruePeak})"],
		["reaper.NF_AnalyzeTakeLoudness_IntegratedOnly", "reaper.NF_AnalyzeTakeLoudness_IntegratedOnly(${1:take})"],
		["reaper.NF_GetMediaItemAverageRMS", "reaper.NF_GetMediaItemAverageRMS(${1:item})"],
		["reaper.NF_GetMediaItemMaxPeak", "reaper.NF_GetMediaItemMaxPeak(${1:item})"],
		["reaper.NF_GetMediaItemPeakRMS_NonWindowed", "reaper.NF_GetMediaItemPeakRMS_NonWindowed(${1:item})"],
		["reaper.NF_GetMediaItemPeakRMS_Windowed", "reaper.NF_GetMediaItemPeakRMS_Windowed(${1:item})"],
		["reaper.NF_GetSWSTrackNotes", "reaper.NF_GetSWSTrackNotes(${1:trackNote_output})"],
		["reaper.NF_SetSWSTrackNotes", "reaper.NF_SetSWSTrackNotes(${1:track}, ${2:str})"],
		["reaper.NF_TakeFX_GetOffline", "reaper.NF_TakeFX_GetOffline(${1:take}, ${2:fx})"],
		["reaper.NF_TakeFX_SetOffline", "reaper.NF_TakeFX_SetOffline(${1:take}, ${2:fx}, ${3:offline})"],
		["reaper.NF_TrackFX_GetOffline", "reaper.NF_TrackFX_GetOffline(${1:track}, ${2:fx})"],
		["reaper.NF_TrackFX_SetOffline", "reaper.NF_TrackFX_SetOffline(${1:track}, ${2:fx}, ${3:offline})"],
		["reaper.OnPauseButton", "reaper.OnPauseButton()"],
		["reaper.OnPauseButtonEx", "reaper.OnPauseButtonEx(${1:proj})"],
		["reaper.OnPlayButton", "reaper.OnPlayButton()"],
		["reaper.OnPlayButtonEx", "reaper.OnPlayButtonEx(${1:proj})"],
		["reaper.OnStopButton", "reaper.OnStopButton()"],
		["reaper.OnStopButtonEx", "reaper.OnStopButtonEx(${1:proj})"],
		["reaper.OpenColorThemeFile", "reaper.OpenColorThemeFile(${1:fn})"],
		["reaper.OpenMediaExplorer", "reaper.OpenMediaExplorer(${1:mediafn}, ${2:play})"],
		["reaper.OscLocalMessageToHost", "reaper.OscLocalMessageToHost(${1:message}, ${2:valueIn})"],
		["reaper.parse_timestr", "reaper.parse_timestr(${1:buf})"],
		["reaper.parse_timestr_len", "reaper.parse_timestr_len(${1:buf}, ${2:offset}, ${3:modeoverride})"],
		["reaper.parse_timestr_pos", "reaper.parse_timestr_pos(${1:buf}, ${2:modeoverride})"],
		["reaper.parsepanstr", "reaper.parsepanstr(${1:str})"],
		["reaper.PCM_Sink_Enum", "reaper.PCM_Sink_Enum(${1:idx})"],
		["reaper.PCM_Sink_GetExtension", "reaper.PCM_Sink_GetExtension(${1:data})"],
		["reaper.PCM_Sink_ShowConfig", "reaper.PCM_Sink_ShowConfig(${1:cfg}, ${2:hwndParent})"],
		["reaper.PCM_Source_CreateFromFile", "reaper.PCM_Source_CreateFromFile(${1:filename})"],
		["reaper.PCM_Source_CreateFromFileEx", "reaper.PCM_Source_CreateFromFileEx(${1:filename}, ${2:forcenoMidiImp})"],
		["reaper.PCM_Source_CreateFromType", "reaper.PCM_Source_CreateFromType(${1:sourcetype})"],
		["reaper.PCM_Source_Destroy", "reaper.PCM_Source_Destroy(${1:src})"],
		["reaper.PCM_Source_GetPeaks", "reaper.PCM_Source_GetPeaks(${1:src}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"],
		["reaper.PCM_Source_GetSectionInfo", "reaper.PCM_Source_GetSectionInfo(${1:src})"],
		["reaper.PluginWantsAlwaysRunFx", "reaper.PluginWantsAlwaysRunFx(${1:amt})"],
		["reaper.PreventUIRefresh", "reaper.PreventUIRefresh(${1:prevent_count})"],
		["gfx.printf", "gfx.printf(${1:format})"],
		["gfx.quit", "gfx.quit()"],
		["reaper.ReaPack_AboutInstalledPackage", "reaper.ReaPack_AboutInstalledPackage(${1:entry})"],
		["reaper.ReaPack_AboutRepository", "reaper.ReaPack_AboutRepository(${1:repoName})"],
		["reaper.ReaPack_AddSetRepository", "reaper.ReaPack_AddSetRepository(${1:name}, ${2:url}, ${3:enable}, ${4:autoInstall})"],
		["reaper.ReaPack_BrowsePackages", "reaper.ReaPack_BrowsePackages(${1:filter})"],
		["reaper.ReaPack_CompareVersions", "reaper.ReaPack_CompareVersions(${1:ver1}, ${2:ver2})"],
		["reaper.ReaPack_EnumOwnedFiles", "reaper.ReaPack_EnumOwnedFiles(${1:entry}, ${2:index})"],
		["reaper.ReaPack_FreeEntry", "reaper.ReaPack_FreeEntry(${1:entry})"],
		["reaper.ReaPack_GetEntryInfo", "reaper.ReaPack_GetEntryInfo(${1:entry})"],
		["reaper.ReaPack_GetOwner", "reaper.ReaPack_GetOwner(${1:fn})"],
		["reaper.ReaPack_GetRepositoryInfo", "reaper.ReaPack_GetRepositoryInfo(${1:name})"],
		["reaper.ReaPack_ProcessQueue", "reaper.ReaPack_ProcessQueue(${1:refreshUI})"],
		["reaper.ReaScriptError", "reaper.ReaScriptError(${1:errmsg})"],
		["gfx.rect", "gfx.rect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:filled})"],
		["gfx.rectto", "gfx.rectto(${1:x}, ${2:y})"],
		["reaper.RecursiveCreateDirectory", "reaper.RecursiveCreateDirectory(${1:path}, ${2:ignored})"],
		["reaper.RefreshToolbar", "reaper.RefreshToolbar(${1:command_id})"],
		["reaper.RefreshToolbar2", "reaper.RefreshToolbar2(${1:section_id}, ${2:command_id})"],
		["reaper.relative_fn", "reaper.relative_fn(${1:in}, ${2:out})"],
		["reaper.RemoveTrackSend", "reaper.RemoveTrackSend(${1:tr}, ${2:category}, ${3:sendidx})"],
		["reaper.RenderFileSection", "reaper.RenderFileSection(${1:source_filename}, ${2:target_filename}, ${3:start_percent}, ${4:end_percent}, ${5:playrate})"],
		["reaper.ReorderSelectedTracks", "reaper.ReorderSelectedTracks(${1:beforeTrackIdx}, ${2:makePrevFolder})"],
		["reaper.Resample_EnumModes", "reaper.Resample_EnumModes(${1:mode})"],
		["resize", "resize(${1:size})"],
		["reaper.resolve_fn", "reaper.resolve_fn(${1:in}, ${2:out})"],
		["reaper.resolve_fn2", "reaper.resolve_fn2(${1:in}, ${2:out}, ${3:checkSubDir})"],
		["reaper.ReverseNamedCommandLookup", "reaper.ReverseNamedCommandLookup(${1:command_id})"],
		["gfx.roundrect", "gfx.roundrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:radius}, ${6:antialias})"],
		["reaper.runloop", "reaper.runloop(${1:function})"],
		["reaper.ScaleFromEnvelopeMode", "reaper.ScaleFromEnvelopeMode(${1:scaling_mode}, ${2:val})"],
		["reaper.ScaleToEnvelopeMode", "reaper.ScaleToEnvelopeMode(${1:scaling_mode}, ${2:val})"],
		["gfx.screentoclient", "gfx.screentoclient(${1:x}, ${2:y})"],
		["reaper.SelectAllMediaItems", "reaper.SelectAllMediaItems(${1:proj}, ${2:selected})"],
		["reaper.SelectProjectInstance", "reaper.SelectProjectInstance(${1:proj})"],
		["gfx.set", "gfx.set(${1:r}, ${2:g}, ${3:b}, ${4:a}, ${5:mode}, ${6:dest})"],
		["reaper.SetActiveTake", "reaper.SetActiveTake(${1:take})"],
		["reaper.SetAutomationMode", "reaper.SetAutomationMode(${1:mode}, ${2:onlySel})"],
		["reaper.SetCurrentBPM", "reaper.SetCurrentBPM(${1:__proj}, ${2:bpm}, ${3:wantUndo})"],
		["gfx.setcursor", "gfx.setcursor(${1:resource_id}, ${2:custom_cursor_name})"],
		["reaper.SetCursorContext", "reaper.SetCursorContext(${1:mode}, ${2:envIn})"],
		["reaper.SetEditCurPos", "reaper.SetEditCurPos(${1:time}, ${2:moveview}, ${3:seekplay})"],
		["reaper.SetEditCurPos2", "reaper.SetEditCurPos2(${1:proj}, ${2:time}, ${3:moveview}, ${4:seekplay})"],
		["reaper.SetEnvelopePoint", "reaper.SetEnvelopePoint(${1:envelope}, ${2:ptidx}, ${3:timeIn}, ${4:valueIn}, ${5:shapeIn}, ${6:tensionIn}, ${7:selectedIn}, ${8:noSortIn})"],
		["reaper.SetEnvelopePointEx", "reaper.SetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx}, ${4:timeIn}, ${5:valueIn}, ${6:shapeIn}, ${7:tensionIn}, ${8:selectedIn}, ${9:noSortIn})"],
		["reaper.SetEnvelopeStateChunk", "reaper.SetEnvelopeStateChunk(${1:env}, ${2:str}, ${3:isundo})"],
		["reaper.SetExtState", "reaper.SetExtState(${1:section}, ${2:key}, ${3:value}, ${4:persist})"],
		["gfx.setfont", "gfx.setfont(${1:idx}, ${2:fontface}, ${3:sz}, ${4:flags})"],
		["reaper.SetGlobalAutomationOverride", "reaper.SetGlobalAutomationOverride(${1:mode})"],
		["gfx.setimgdim", "gfx.setimgdim(${1:image}, ${2:w}, ${3:h})"],
		["reaper.SetItemStateChunk", "reaper.SetItemStateChunk(${1:item}, ${2:str}, ${3:isundo})"],
		["reaper.SetMasterTrackVisibility", "reaper.SetMasterTrackVisibility(${1:flag})"],
		["reaper.SetMediaItemInfo_Value", "reaper.SetMediaItemInfo_Value(${1:item}, ${2:parmname}, ${3:newvalue})"],
		["reaper.SetMediaItemLength", "reaper.SetMediaItemLength(${1:item}, ${2:length}, ${3:refreshUI})"],
		["reaper.SetMediaItemPosition", "reaper.SetMediaItemPosition(${1:item}, ${2:position}, ${3:refreshUI})"],
		["reaper.SetMediaItemSelected", "reaper.SetMediaItemSelected(${1:item}, ${2:selected})"],
		["reaper.SetMediaItemTake_Source", "reaper.SetMediaItemTake_Source(${1:take}, ${2:source})"],
		["reaper.SetMediaItemTakeInfo_Value", "reaper.SetMediaItemTakeInfo_Value(${1:take}, ${2:parmname}, ${3:newvalue})"],
		["reaper.SetMediaTrackInfo_Value", "reaper.SetMediaTrackInfo_Value(${1:tr}, ${2:parmname}, ${3:newvalue})"],
		["reaper.SetMIDIEditorGrid", "reaper.SetMIDIEditorGrid(${1:project}, ${2:division})"],
		["reaper.SetMixerScroll", "reaper.SetMixerScroll(${1:leftmosttrack})"],
		["reaper.SetMouseModifier", "reaper.SetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:action})"],
		["reaper.SetOnlyTrackSelected", "reaper.SetOnlyTrackSelected(${1:track})"],
		["gfx.setpixel", "gfx.setpixel(${1:r}, ${2:g}, ${3:b})"],
		["reaper.SetProjectGrid", "reaper.SetProjectGrid(${1:project}, ${2:division})"],
		["reaper.SetProjectMarker", "reaper.SetProjectMarker(${1:markrgnindexnumber}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name})"],
		["reaper.SetProjectMarker2", "reaper.SetProjectMarker2(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name})"],
		["reaper.SetProjectMarker3", "reaper.SetProjectMarker3(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color})"],
		["reaper.SetProjectMarker4", "reaper.SetProjectMarker4(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color}, ${8:flags})"],
		["reaper.SetProjectMarkerByIndex", "reaper.SetProjectMarkerByIndex(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color})"],
		["reaper.SetProjectMarkerByIndex2", "reaper.SetProjectMarkerByIndex2(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color}, ${9:flags})"],
		["reaper.SetProjExtState", "reaper.SetProjExtState(${1:proj}, ${2:extname}, ${3:key}, ${4:value})"],
		["reaper.SetRegionRenderMatrix", "reaper.SetRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:track}, ${4:addorremove})"],
		["reaper.SetTakeStretchMarker", "reaper.SetTakeStretchMarker(${1:take}, ${2:idx}, ${3:pos}, ${4:srcposIn})"],
		["reaper.SetTakeStretchMarkerSlope", "reaper.SetTakeStretchMarkerSlope(${1:take}, ${2:idx}, ${3:slope})"],
		["reaper.SetTempoTimeSigMarker", "reaper.SetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timepos}, ${4:measurepos}, ${5:beatpos}, ${6:bpm}, ${7:timesig_num}, ${8:timesig_denom}, ${9:lineartempo})"],
		["reaper.SetToggleCommandState", "reaper.SetToggleCommandState(${1:section_id}, ${2:command_id}, ${3:state})"],
		["reaper.SetTrackAutomationMode", "reaper.SetTrackAutomationMode(${1:tr}, ${2:mode})"],
		["reaper.SetTrackColor", "reaper.SetTrackColor(${1:track}, ${2:color})"],
		["reaper.SetTrackMIDILyrics", "reaper.SetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:str})"],
		["reaper.SetTrackMIDINoteName", "reaper.SetTrackMIDINoteName(${1:track}, ${2:pitch}, ${3:chan}, ${4:name})"],
		["reaper.SetTrackMIDINoteNameEx", "reaper.SetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:pitch}, ${4:chan}, ${5:name})"],
		["reaper.SetTrackSelected", "reaper.SetTrackSelected(${1:track}, ${2:selected})"],
		["reaper.SetTrackSendInfo_Value", "reaper.SetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:parmname}, ${5:newvalue})"],
		["reaper.SetTrackSendUIPan", "reaper.SetTrackSendUIPan(${1:track}, ${2:send_idx}, ${3:pan}, ${4:isend})"],
		["reaper.SetTrackSendUIVol", "reaper.SetTrackSendUIVol(${1:track}, ${2:send_idx}, ${3:vol}, ${4:isend})"],
		["reaper.SetTrackStateChunk", "reaper.SetTrackStateChunk(${1:track}, ${2:str}, ${3:isundo})"],
		["reaper.ShowActionList", "reaper.ShowActionList(${1:caller}, ${2:callerWnd})"],
		["reaper.ShowConsoleMsg", "reaper.ShowConsoleMsg(${1:msg})"],
		["gfx.showmenu", "gfx.showmenu(${1:str})"],
		["reaper.ShowMessageBox", "reaper.ShowMessageBox(${1:msg}, ${2:title}, ${3:type})"],
		["reaper.ShowPopupMenu", "reaper.ShowPopupMenu(${1:name}, ${2:x}, ${3:y}, ${4:hwndParent}, ${5:ctx}, ${6:ctx2}, ${7:ctx3})"],
		["reaper.SLIDER2DB", "reaper.SLIDER2DB(${1:y})"],
		["reaper.SN_FocusMIDIEditor", "reaper.SN_FocusMIDIEditor()"],
		["reaper.SnapToGrid", "reaper.SnapToGrid(${1:project}, ${2:time_pos})"],
		["reaper.SNM_AddReceive", "reaper.SNM_AddReceive(${1:src}, ${2:dest}, ${3:type})"],
		["reaper.SNM_AddTCPFXParm", "reaper.SNM_AddTCPFXParm(${1:tr}, ${2:fxId}, ${3:prmId})"],
		["reaper.SNM_CreateFastString", "reaper.SNM_CreateFastString(${1:str})"],
		["reaper.SNM_DeleteFastString", "reaper.SNM_DeleteFastString(${1:str})"],
		["reaper.SNM_GetDoubleConfigVar", "reaper.SNM_GetDoubleConfigVar(${1:varname}, ${2:errvalue})"],
		["reaper.SNM_GetFastString", "reaper.SNM_GetFastString(${1:str})"],
		["reaper.SNM_GetFastStringLength", "reaper.SNM_GetFastStringLength(${1:str})"],
		["reaper.SNM_GetIntConfigVar", "reaper.SNM_GetIntConfigVar(${1:varname}, ${2:errvalue})"],
		["reaper.SNM_GetMediaItemTakeByGUID", "reaper.SNM_GetMediaItemTakeByGUID(${1:project}, ${2:guid})"],
		["reaper.SNM_GetProjectMarkerName", "reaper.SNM_GetProjectMarkerName(${1:proj}, ${2:num}, ${3:name})"],
		["reaper.SNM_GetSetObjectState", "reaper.SNM_GetSetObjectState(${1:state}, ${2:setnewvalue}, ${3:wantminimalstate})"],
		["reaper.SNM_GetSetSourceState", "reaper.SNM_GetSetSourceState(${1:item}, ${2:state}, ${3:setnewvalue})"],
		["reaper.SNM_GetSetSourceState2", "reaper.SNM_GetSetSourceState2(${1:state}, ${2:setnewvalue})"],
		["reaper.SNM_GetSourceType", "reaper.SNM_GetSourceType(${1:type})"],
		["reaper.SNM_MoveOrRemoveTrackFX", "reaper.SNM_MoveOrRemoveTrackFX(${1:tr}, ${2:fxId}, ${3:what})"],
		["reaper.SNM_ReadMediaFileTag", "reaper.SNM_ReadMediaFileTag(${1:fn}, ${2:tag}, ${3:tagval})"],
		["reaper.SNM_RemoveReceive", "reaper.SNM_RemoveReceive(${1:tr}, ${2:rcvidx})"],
		["reaper.SNM_RemoveReceivesFrom", "reaper.SNM_RemoveReceivesFrom(${1:tr}, ${2:srctr})"],
		["reaper.SNM_SelectResourceBookmark", "reaper.SNM_SelectResourceBookmark(${1:name})"],
		["reaper.SNM_SetDoubleConfigVar", "reaper.SNM_SetDoubleConfigVar(${1:varname}, ${2:newvalue})"],
		["reaper.SNM_SetFastString", "reaper.SNM_SetFastString(${1:str}, ${2:newstr})"],
		["reaper.SNM_SetIntConfigVar", "reaper.SNM_SetIntConfigVar(${1:varname}, ${2:newvalue})"],
		["reaper.SNM_SetProjectMarker", "reaper.SNM_SetProjectMarker(${1:proj}, ${2:num}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color})"],
		["reaper.SNM_TagMediaFile", "reaper.SNM_TagMediaFile(${1:fn}, ${2:tag}, ${3:tagval})"],
		["reaper.SNM_TieResourceSlotActions", "reaper.SNM_TieResourceSlotActions(${1:bookmarkId})"],
		["reaper.SoloAllTracks", "reaper.SoloAllTracks(${1:solo})"],
		["reaper.Splash_GetWnd", "reaper.Splash_GetWnd()"],
		["reaper.SplitMediaItem", "reaper.SplitMediaItem(${1:item}, ${2:position})"],
		["reaper.stringToGuid", "reaper.stringToGuid(${1:str}, ${2:gGUID})"],
		["reaper.StuffMIDIMessage", "reaper.StuffMIDIMessage(${1:mode}, ${2:msg1}, ${3:msg2}, ${4:msg3})"],
		["table", "table(${1:offset}, ${2:size})"],
		["reaper.TakeFX_AddByName", "reaper.TakeFX_AddByName(${1:take}, ${2:fxname}, ${3:instantiate})"],
		["reaper.TakeFX_CopyToTake", "reaper.TakeFX_CopyToTake(${1:src_take}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"],
		["reaper.TakeFX_CopyToTrack", "reaper.TakeFX_CopyToTrack(${1:src_take}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"],
		["reaper.TakeFX_Delete", "reaper.TakeFX_Delete(${1:take}, ${2:fx})"],
		["reaper.TakeFX_EndParamEdit", "reaper.TakeFX_EndParamEdit(${1:take}, ${2:fx}, ${3:param})"],
		["reaper.TakeFX_FormatParamValue", "reaper.TakeFX_FormatParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:val}, ${5:buf})"],
		["reaper.TakeFX_FormatParamValueNormalized", "reaper.TakeFX_FormatParamValueNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value}, ${5:buf})"],
		["reaper.TakeFX_GetChainVisible", "reaper.TakeFX_GetChainVisible(${1:take})"],
		["reaper.TakeFX_GetCount", "reaper.TakeFX_GetCount(${1:take})"],
		["reaper.TakeFX_GetEnabled", "reaper.TakeFX_GetEnabled(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetEnvelope", "reaper.TakeFX_GetEnvelope(${1:take}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"],
		["reaper.TakeFX_GetFloatingWindow", "reaper.TakeFX_GetFloatingWindow(${1:take}, ${2:index})"],
		["reaper.TakeFX_GetFormattedParamValue", "reaper.TakeFX_GetFormattedParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:buf})"],
		["reaper.TakeFX_GetFXGUID", "reaper.TakeFX_GetFXGUID(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetFXName", "reaper.TakeFX_GetFXName(${1:take}, ${2:fx}, ${3:buf})"],
		["reaper.TakeFX_GetIOSize", "reaper.TakeFX_GetIOSize(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetNamedConfigParm", "reaper.TakeFX_GetNamedConfigParm(${1:take}, ${2:fx}, ${3:parmname})"],
		["reaper.TakeFX_GetNumParams", "reaper.TakeFX_GetNumParams(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetOffline", "reaper.TakeFX_GetOffline(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetOpen", "reaper.TakeFX_GetOpen(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetParam", "reaper.TakeFX_GetParam(${1:take}, ${2:fx}, ${3:param})"],
		["reaper.TakeFX_GetParameterStepSizes", "reaper.TakeFX_GetParameterStepSizes(${1:take}, ${2:fx}, ${3:param})"],
		["reaper.TakeFX_GetParamEx", "reaper.TakeFX_GetParamEx(${1:take}, ${2:fx}, ${3:param})"],
		["reaper.TakeFX_GetParamName", "reaper.TakeFX_GetParamName(${1:take}, ${2:fx}, ${3:param}, ${4:buf})"],
		["reaper.TakeFX_GetParamNormalized", "reaper.TakeFX_GetParamNormalized(${1:take}, ${2:fx}, ${3:param})"],
		["reaper.TakeFX_GetPinMappings", "reaper.TakeFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin})"],
		["reaper.TakeFX_GetPreset", "reaper.TakeFX_GetPreset(${1:take}, ${2:fx}, ${3:presetname})"],
		["reaper.TakeFX_GetPresetIndex", "reaper.TakeFX_GetPresetIndex(${1:take}, ${2:fx})"],
		["reaper.TakeFX_GetUserPresetFilename", "reaper.TakeFX_GetUserPresetFilename(${1:take}, ${2:fx}, ${3:fn})"],
		["reaper.TakeFX_NavigatePresets", "reaper.TakeFX_NavigatePresets(${1:take}, ${2:fx}, ${3:presetmove})"],
		["reaper.TakeFX_SetEnabled", "reaper.TakeFX_SetEnabled(${1:take}, ${2:fx}, ${3:enabled})"],
		["reaper.TakeFX_SetNamedConfigParm", "reaper.TakeFX_SetNamedConfigParm(${1:take}, ${2:fx}, ${3:parmname}, ${4:value})"],
		["reaper.TakeFX_SetOffline", "reaper.TakeFX_SetOffline(${1:take}, ${2:fx}, ${3:offline})"],
		["reaper.TakeFX_SetOpen", "reaper.TakeFX_SetOpen(${1:take}, ${2:fx}, ${3:open})"],
		["reaper.TakeFX_SetParam", "reaper.TakeFX_SetParam(${1:take}, ${2:fx}, ${3:param}, ${4:val})"],
		["reaper.TakeFX_SetParamNormalized", "reaper.TakeFX_SetParamNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value})"],
		["reaper.TakeFX_SetPinMappings", "reaper.TakeFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"],
		["reaper.TakeFX_SetPreset", "reaper.TakeFX_SetPreset(${1:take}, ${2:fx}, ${3:presetname})"],
		["reaper.TakeFX_SetPresetByIndex", "reaper.TakeFX_SetPresetByIndex(${1:take}, ${2:fx}, ${3:idx})"],
		["reaper.TakeFX_Show", "reaper.TakeFX_Show(${1:take}, ${2:index}, ${3:showFlag})"],
		["reaper.TakeIsMIDI", "reaper.TakeIsMIDI(${1:take})"],
		["reaper.ThemeLayout_GetParameter", "reaper.ThemeLayout_GetParameter(${1:wp})"],
		["reaper.ThemeLayout_RefreshAll", "reaper.ThemeLayout_RefreshAll()"],
		["reaper.ThemeLayout_SetParameter", "reaper.ThemeLayout_SetParameter(${1:wp}, ${2:value}, ${3:persist})"],
		["reaper.time_precise", "reaper.time_precise()"],
		["reaper.TimeMap2_beatsToTime", "reaper.TimeMap2_beatsToTime(${1:proj}, ${2:tpos}, ${3:measuresIn})"],
		["reaper.TimeMap2_GetDividedBpmAtTime", "reaper.TimeMap2_GetDividedBpmAtTime(${1:proj}, ${2:time})"],
		["reaper.TimeMap2_GetNextChangeTime", "reaper.TimeMap2_GetNextChangeTime(${1:proj}, ${2:time})"],
		["reaper.TimeMap2_QNToTime", "reaper.TimeMap2_QNToTime(${1:proj}, ${2:qn})"],
		["reaper.TimeMap2_timeToBeats", "reaper.TimeMap2_timeToBeats(${1:proj}, ${2:tpos})"],
		["reaper.TimeMap2_timeToQN", "reaper.TimeMap2_timeToQN(${1:proj}, ${2:tpos})"],
		["reaper.TimeMap_curFrameRate", "reaper.TimeMap_curFrameRate(${1:proj})"],
		["reaper.TimeMap_GetDividedBpmAtTime", "reaper.TimeMap_GetDividedBpmAtTime(${1:time})"],
		["reaper.TimeMap_GetMeasureInfo", "reaper.TimeMap_GetMeasureInfo(${1:proj}, ${2:measure})"],
		["reaper.TimeMap_GetMetronomePattern", "reaper.TimeMap_GetMetronomePattern(${1:proj}, ${2:time}, ${3:pattern})"],
		["reaper.TimeMap_GetTimeSigAtTime", "reaper.TimeMap_GetTimeSigAtTime(${1:proj}, ${2:time})"],
		["reaper.TimeMap_QNToMeasures", "reaper.TimeMap_QNToMeasures(${1:proj}, ${2:qn})"],
		["reaper.TimeMap_QNToTime", "reaper.TimeMap_QNToTime(${1:qn})"],
		["reaper.TimeMap_QNToTime_abs", "reaper.TimeMap_QNToTime_abs(${1:proj}, ${2:qn})"],
		["reaper.TimeMap_timeToQN", "reaper.TimeMap_timeToQN(${1:tpos})"],
		["reaper.TimeMap_timeToQN_abs", "reaper.TimeMap_timeToQN_abs(${1:proj}, ${2:tpos})"],
		["reaper.ToggleTrackSendUIMute", "reaper.ToggleTrackSendUIMute(${1:track}, ${2:send_idx})"],
		["reaper.Track_GetPeakHoldDB", "reaper.Track_GetPeakHoldDB(${1:track}, ${2:channel}, ${3:clear})"],
		["reaper.Track_GetPeakInfo", "reaper.Track_GetPeakInfo(${1:track}, ${2:channel})"],
		["reaper.TrackCtl_SetToolTip", "reaper.TrackCtl_SetToolTip(${1:fmt}, ${2:xpos}, ${3:ypos}, ${4:topmost})"],
		["reaper.TrackFX_AddByName", "reaper.TrackFX_AddByName(${1:track}, ${2:fxname}, ${3:recFX}, ${4:instantiate})"],
		["reaper.TrackFX_CopyToTake", "reaper.TrackFX_CopyToTake(${1:src_track}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"],
		["reaper.TrackFX_CopyToTrack", "reaper.TrackFX_CopyToTrack(${1:src_track}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"],
		["reaper.TrackFX_Delete", "reaper.TrackFX_Delete(${1:track}, ${2:fx})"],
		["reaper.TrackFX_EndParamEdit", "reaper.TrackFX_EndParamEdit(${1:track}, ${2:fx}, ${3:param})"],
		["reaper.TrackFX_FormatParamValue", "reaper.TrackFX_FormatParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:val}, ${5:buf})"],
		["reaper.TrackFX_FormatParamValueNormalized", "reaper.TrackFX_FormatParamValueNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value}, ${5:buf})"],
		["reaper.TrackFX_GetByName", "reaper.TrackFX_GetByName(${1:track}, ${2:fxname}, ${3:instantiate})"],
		["reaper.TrackFX_GetChainVisible", "reaper.TrackFX_GetChainVisible(${1:track})"],
		["reaper.TrackFX_GetCount", "reaper.TrackFX_GetCount(${1:track})"],
		["reaper.TrackFX_GetEnabled", "reaper.TrackFX_GetEnabled(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetEQ", "reaper.TrackFX_GetEQ(${1:track}, ${2:instantiate})"],
		["reaper.TrackFX_GetEQBandEnabled", "reaper.TrackFX_GetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx})"],
		["reaper.TrackFX_GetEQParam", "reaper.TrackFX_GetEQParam(${1:track}, ${2:fxidx}, ${3:paramidx})"],
		["reaper.TrackFX_GetFloatingWindow", "reaper.TrackFX_GetFloatingWindow(${1:track}, ${2:index})"],
		["reaper.TrackFX_GetFormattedParamValue", "reaper.TrackFX_GetFormattedParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:buf})"],
		["reaper.TrackFX_GetFXGUID", "reaper.TrackFX_GetFXGUID(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetFXName", "reaper.TrackFX_GetFXName(${1:track}, ${2:fx}, ${3:buf})"],
		["reaper.TrackFX_GetInstrument", "reaper.TrackFX_GetInstrument(${1:track})"],
		["reaper.TrackFX_GetIOSize", "reaper.TrackFX_GetIOSize(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetNamedConfigParm", "reaper.TrackFX_GetNamedConfigParm(${1:track}, ${2:fx}, ${3:parmname})"],
		["reaper.TrackFX_GetNumParams", "reaper.TrackFX_GetNumParams(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetOffline", "reaper.TrackFX_GetOffline(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetOpen", "reaper.TrackFX_GetOpen(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetParam", "reaper.TrackFX_GetParam(${1:track}, ${2:fx}, ${3:param})"],
		["reaper.TrackFX_GetParameterStepSizes", "reaper.TrackFX_GetParameterStepSizes(${1:track}, ${2:fx}, ${3:param})"],
		["reaper.TrackFX_GetParamEx", "reaper.TrackFX_GetParamEx(${1:track}, ${2:fx}, ${3:param})"],
		["reaper.TrackFX_GetParamName", "reaper.TrackFX_GetParamName(${1:track}, ${2:fx}, ${3:param}, ${4:buf})"],
		["reaper.TrackFX_GetParamNormalized", "reaper.TrackFX_GetParamNormalized(${1:track}, ${2:fx}, ${3:param})"],
		["reaper.TrackFX_GetPinMappings", "reaper.TrackFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin})"],
		["reaper.TrackFX_GetPreset", "reaper.TrackFX_GetPreset(${1:track}, ${2:fx}, ${3:presetname})"],
		["reaper.TrackFX_GetPresetIndex", "reaper.TrackFX_GetPresetIndex(${1:track}, ${2:fx})"],
		["reaper.TrackFX_GetRecChainVisible", "reaper.TrackFX_GetRecChainVisible(${1:track})"],
		["reaper.TrackFX_GetRecCount", "reaper.TrackFX_GetRecCount(${1:track})"],
		["reaper.TrackFX_GetUserPresetFilename", "reaper.TrackFX_GetUserPresetFilename(${1:track}, ${2:fx}, ${3:fn})"],
		["reaper.TrackFX_NavigatePresets", "reaper.TrackFX_NavigatePresets(${1:track}, ${2:fx}, ${3:presetmove})"],
		["reaper.TrackFX_SetEnabled", "reaper.TrackFX_SetEnabled(${1:track}, ${2:fx}, ${3:enabled})"],
		["reaper.TrackFX_SetEQBandEnabled", "reaper.TrackFX_SetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:enable})"],
		["reaper.TrackFX_SetEQParam", "reaper.TrackFX_SetEQParam(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:paramtype}, ${6:val}, ${7:isnorm})"],
		["reaper.TrackFX_SetNamedConfigParm", "reaper.TrackFX_SetNamedConfigParm(${1:track}, ${2:fx}, ${3:parmname}, ${4:value})"],
		["reaper.TrackFX_SetOffline", "reaper.TrackFX_SetOffline(${1:track}, ${2:fx}, ${3:offline})"],
		["reaper.TrackFX_SetOpen", "reaper.TrackFX_SetOpen(${1:track}, ${2:fx}, ${3:open})"],
		["reaper.TrackFX_SetParam", "reaper.TrackFX_SetParam(${1:track}, ${2:fx}, ${3:param}, ${4:val})"],
		["reaper.TrackFX_SetParamNormalized", "reaper.TrackFX_SetParamNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value})"],
		["reaper.TrackFX_SetPinMappings", "reaper.TrackFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"],
		["reaper.TrackFX_SetPreset", "reaper.TrackFX_SetPreset(${1:track}, ${2:fx}, ${3:presetname})"],
		["reaper.TrackFX_SetPresetByIndex", "reaper.TrackFX_SetPresetByIndex(${1:track}, ${2:fx}, ${3:idx})"],
		["reaper.TrackFX_Show", "reaper.TrackFX_Show(${1:track}, ${2:index}, ${3:showFlag})"],
		["reaper.TrackList_AdjustWindows", "reaper.TrackList_AdjustWindows(${1:isMinor})"],
		["reaper.TrackList_UpdateAllExternalSurfaces", "reaper.TrackList_UpdateAllExternalSurfaces()"],
		["gfx.transformblit", "gfx.transformblit(${1:srcimg}, ${2:destx}, ${3:desty}, ${4:destw}, ${5:desth}, ${6:div_w}, ${7:div_h}, ${8:table})"],
		["gfx.triangle", "gfx.triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3x4}, ${7:y4...})"],
		["reaper.ULT_GetMediaItemNote", "reaper.ULT_GetMediaItemNote(${1:item})"],
		["reaper.ULT_SetMediaItemNote", "reaper.ULT_SetMediaItemNote(${1:item}, ${2:note})"],
		["reaper.Undo_BeginBlock", "reaper.Undo_BeginBlock()"],
		["reaper.Undo_BeginBlock2", "reaper.Undo_BeginBlock2(${1:proj})"],
		["reaper.Undo_CanRedo2", "reaper.Undo_CanRedo2(${1:proj})"],
		["reaper.Undo_CanUndo2", "reaper.Undo_CanUndo2(${1:proj})"],
		["reaper.Undo_DoRedo2", "reaper.Undo_DoRedo2(${1:proj})"],
		["reaper.Undo_DoUndo2", "reaper.Undo_DoUndo2(${1:proj})"],
		["reaper.Undo_EndBlock", "reaper.Undo_EndBlock(${1:descchange}, ${2:extraflags})"],
		["reaper.Undo_EndBlock2", "reaper.Undo_EndBlock2(${1:proj}, ${2:descchange}, ${3:extraflags})"],
		["reaper.Undo_OnStateChange", "reaper.Undo_OnStateChange(${1:descchange})"],
		["reaper.Undo_OnStateChange2", "reaper.Undo_OnStateChange2(${1:proj}, ${2:descchange})"],
		["reaper.Undo_OnStateChange_Item", "reaper.Undo_OnStateChange_Item(${1:proj}, ${2:name}, ${3:item})"],
		["reaper.Undo_OnStateChangeEx", "reaper.Undo_OnStateChangeEx(${1:descchange}, ${2:whichStates}, ${3:trackparm})"],
		["reaper.Undo_OnStateChangeEx2", "reaper.Undo_OnStateChangeEx2(${1:proj}, ${2:descchange}, ${3:whichStates}, ${4:trackparm})"],
		["gfx.update", "gfx.update()"],
		["reaper.UpdateArrange", "reaper.UpdateArrange()"],
		["reaper.UpdateItemInProject", "reaper.UpdateItemInProject(${1:item})"],
		["reaper.UpdateTimeline", "reaper.UpdateTimeline()"],
		["reaper.ValidatePtr", "reaper.ValidatePtr(${1:pointer}, ${2:ctypename})"],
		["reaper.ValidatePtr2", "reaper.ValidatePtr2(${1:proj}, ${2:pointer}, ${3:ctypename})"],
		["reaper.ViewPrefs", "reaper.ViewPrefs(${1:page}, ${2:pageByName})"],
]
}
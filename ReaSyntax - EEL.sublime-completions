{
	"scope": "source.EEL",

	"completions":
	[
		{ "trigger": "AddMediaItemToTrack", "contents": "AddMediaItemToTrack(${1:tr})" },
		{ "trigger": "AddProjectMarker", "contents": "AddProjectMarker(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx})" },
		{ "trigger": "AddProjectMarker2", "contents": "AddProjectMarker2(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name}, ${6:wantidx}, ${7:color})" },
		{ "trigger": "AddTakeToMediaItem", "contents": "AddTakeToMediaItem(${1:item})" },
		{ "trigger": "AddTempoTimeSigMarker", "contents": "AddTempoTimeSigMarker(${1:proj}, ${2:timepos}, ${3:bpm}, ${4:timesig_num}, ${5:timesig_denom}, ${6:lineartempochange})" },
		{ "trigger": "adjustZoom", "contents": "adjustZoom(${1:amt}, ${2:forceset}, ${3:doupd}, ${4:centermode})" },
		{ "trigger": "AnyTrackSolo", "contents": "AnyTrackSolo(${1:proj})" },
		{ "trigger": "APITest", "contents": "APITest()" },
		{ "trigger": "ApplyNudge", "contents": "ApplyNudge(${1:project}, ${2:nudgeflag}, ${3:nudgewhat}, ${4:nudgeunits}, ${5:value}, ${6:reverse}, ${7:copies})" },
		{ "trigger": "Audio_IsPreBuffer", "contents": "Audio_IsPreBuffer()" },
		{ "trigger": "Audio_IsRunning", "contents": "Audio_IsRunning()" },
		{ "trigger": "AudioAccessorValidateState", "contents": "AudioAccessorValidateState(${1:accessor})" },
		{ "trigger": "BypassFxAllTracks", "contents": "BypassFxAllTracks(${1:bypass})" },
		{ "trigger": "ClearAllRecArmed", "contents": "ClearAllRecArmed()" },
		{ "trigger": "ClearPeakCache", "contents": "ClearPeakCache()" },
		{ "trigger": "CountMediaItems", "contents": "CountMediaItems(${1:proj})" },
		{ "trigger": "CountProjectMarkers", "contents": "CountProjectMarkers(${1:proj}, ${2:num_markersOut}, ${3:num_regionsOut})" },
		{ "trigger": "CountSelectedMediaItems", "contents": "CountSelectedMediaItems(${1:proj})" },
		{ "trigger": "CountSelectedTracks", "contents": "CountSelectedTracks(${1:proj})" },
		{ "trigger": "CountTakes", "contents": "CountTakes(${1:item})" },
		{ "trigger": "CountTCPFXParms", "contents": "CountTCPFXParms(${1:project}, ${2:track})" },
		{ "trigger": "CountTempoTimeSigMarkers", "contents": "CountTempoTimeSigMarkers(${1:proj})" },
		{ "trigger": "CountTrackEnvelopes", "contents": "CountTrackEnvelopes(${1:track})" },
		{ "trigger": "CountTrackMediaItems", "contents": "CountTrackMediaItems(${1:track})" },
		{ "trigger": "CountTracks", "contents": "CountTracks(${1:proj})" },
		{ "trigger": "CreateNewMIDIItemInProj", "contents": "CreateNewMIDIItemInProj(${1:track}, ${2:starttime}, ${3:endtime})" },
		{ "trigger": "CreateTakeAudioAccessor", "contents": "CreateTakeAudioAccessor(${1:take})" },
		{ "trigger": "CreateTrackAudioAccessor", "contents": "CreateTrackAudioAccessor(${1:track})" },
		{ "trigger": "CSurf_FlushUndo", "contents": "CSurf_FlushUndo(${1:force})" },
		{ "trigger": "CSurf_GetTouchState", "contents": "CSurf_GetTouchState(${1:trackid}, ${2:isPan})" },
		{ "trigger": "CSurf_GoEnd", "contents": "CSurf_GoEnd()" },
		{ "trigger": "CSurf_GoStart", "contents": "CSurf_GoStart()" },
		{ "trigger": "CSurf_NumTracks", "contents": "CSurf_NumTracks(${1:mcpView})" },
		{ "trigger": "CSurf_OnArrow", "contents": "CSurf_OnArrow(${1:whichdir}, ${2:wantzoom})" },
		{ "trigger": "CSurf_OnFwd", "contents": "CSurf_OnFwd(${1:seekplay})" },
		{ "trigger": "CSurf_OnFXChange", "contents": "CSurf_OnFXChange(${1:trackid}, ${2:en})" },
		{ "trigger": "CSurf_OnInputMonitorChange", "contents": "CSurf_OnInputMonitorChange(${1:trackid}, ${2:monitor})" },
		{ "trigger": "CSurf_OnInputMonitorChangeEx", "contents": "CSurf_OnInputMonitorChangeEx(${1:trackid}, ${2:monitor}, ${3:allowgang})" },
		{ "trigger": "CSurf_OnMuteChange", "contents": "CSurf_OnMuteChange(${1:trackid}, ${2:mute})" },
		{ "trigger": "CSurf_OnMuteChangeEx", "contents": "CSurf_OnMuteChangeEx(${1:trackid}, ${2:mute}, ${3:allowgang})" },
		{ "trigger": "CSurf_OnPanChange", "contents": "CSurf_OnPanChange(${1:trackid}, ${2:pan}, ${3:relative})" },
		{ "trigger": "CSurf_OnPanChangeEx", "contents": "CSurf_OnPanChangeEx(${1:trackid}, ${2:pan}, ${3:relative}, ${4:allowGang})" },
		{ "trigger": "CSurf_OnPause", "contents": "CSurf_OnPause()" },
		{ "trigger": "CSurf_OnPlay", "contents": "CSurf_OnPlay()" },
		{ "trigger": "CSurf_OnPlayRateChange", "contents": "CSurf_OnPlayRateChange(${1:playrate})" },
		{ "trigger": "CSurf_OnRecArmChange", "contents": "CSurf_OnRecArmChange(${1:trackid}, ${2:recarm})" },
		{ "trigger": "CSurf_OnRecArmChangeEx", "contents": "CSurf_OnRecArmChangeEx(${1:trackid}, ${2:recarm}, ${3:allowgang})" },
		{ "trigger": "CSurf_OnRecord", "contents": "CSurf_OnRecord()" },
		{ "trigger": "CSurf_OnRecvPanChange", "contents": "CSurf_OnRecvPanChange(${1:trackid}, ${2:recv_index}, ${3:pan}, ${4:relative})" },
		{ "trigger": "CSurf_OnRecvVolumeChange", "contents": "CSurf_OnRecvVolumeChange(${1:trackid}, ${2:recv_index}, ${3:volume}, ${4:relative})" },
		{ "trigger": "CSurf_OnRew", "contents": "CSurf_OnRew(${1:seekplay})" },
		{ "trigger": "CSurf_OnRewFwd", "contents": "CSurf_OnRewFwd(${1:seekplay}, ${2:dir})" },
		{ "trigger": "CSurf_OnScroll", "contents": "CSurf_OnScroll(${1:xdir}, ${2:ydir})" },
		{ "trigger": "CSurf_OnSelectedChange", "contents": "CSurf_OnSelectedChange(${1:trackid}, ${2:selected})" },
		{ "trigger": "CSurf_OnSendPanChange", "contents": "CSurf_OnSendPanChange(${1:trackid}, ${2:send_index}, ${3:pan}, ${4:relative})" },
		{ "trigger": "CSurf_OnSendVolumeChange", "contents": "CSurf_OnSendVolumeChange(${1:trackid}, ${2:send_index}, ${3:volume}, ${4:relative})" },
		{ "trigger": "CSurf_OnSoloChange", "contents": "CSurf_OnSoloChange(${1:trackid}, ${2:solo})" },
		{ "trigger": "CSurf_OnSoloChangeEx", "contents": "CSurf_OnSoloChangeEx(${1:trackid}, ${2:solo}, ${3:allowgang})" },
		{ "trigger": "CSurf_OnStop", "contents": "CSurf_OnStop()" },
		{ "trigger": "CSurf_OnTempoChange", "contents": "CSurf_OnTempoChange(${1:bpm})" },
		{ "trigger": "CSurf_OnTrackSelection", "contents": "CSurf_OnTrackSelection(${1:trackid})" },
		{ "trigger": "CSurf_OnVolumeChange", "contents": "CSurf_OnVolumeChange(${1:trackid}, ${2:volume}, ${3:relative})" },
		{ "trigger": "CSurf_OnVolumeChangeEx", "contents": "CSurf_OnVolumeChangeEx(${1:trackid}, ${2:volume}, ${3:relative}, ${4:allowGang})" },
		{ "trigger": "CSurf_OnWidthChange", "contents": "CSurf_OnWidthChange(${1:trackid}, ${2:width}, ${3:relative})" },
		{ "trigger": "CSurf_OnWidthChangeEx", "contents": "CSurf_OnWidthChangeEx(${1:trackid}, ${2:width}, ${3:relative}, ${4:allowGang})" },
		{ "trigger": "CSurf_OnZoom", "contents": "CSurf_OnZoom(${1:xdir}, ${2:ydir})" },
		{ "trigger": "CSurf_ResetAllCachedVolPanStates", "contents": "CSurf_ResetAllCachedVolPanStates()" },
		{ "trigger": "CSurf_ScrubAmt", "contents": "CSurf_ScrubAmt(${1:amt})" },
		{ "trigger": "CSurf_SetAutoMode", "contents": "CSurf_SetAutoMode(${1:mode}, ${2:ignoresurf})" },
		{ "trigger": "CSurf_SetPlayState", "contents": "CSurf_SetPlayState(${1:play}, ${2:pause}, ${3:rec}, ${4:ignoresurf})" },
		{ "trigger": "CSurf_SetRepeatState", "contents": "CSurf_SetRepeatState(${1:rep}, ${2:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfaceMute", "contents": "CSurf_SetSurfaceMute(${1:trackid}, ${2:mute}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfacePan", "contents": "CSurf_SetSurfacePan(${1:trackid}, ${2:pan}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfaceRecArm", "contents": "CSurf_SetSurfaceRecArm(${1:trackid}, ${2:recarm}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfaceSelected", "contents": "CSurf_SetSurfaceSelected(${1:trackid}, ${2:selected}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfaceSolo", "contents": "CSurf_SetSurfaceSolo(${1:trackid}, ${2:solo}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetSurfaceVolume", "contents": "CSurf_SetSurfaceVolume(${1:trackid}, ${2:volume}, ${3:ignoresurf})" },
		{ "trigger": "CSurf_SetTrackListChange", "contents": "CSurf_SetTrackListChange()" },
		{ "trigger": "CSurf_TrackFromID", "contents": "CSurf_TrackFromID(${1:idx}, ${2:mcpView})" },
		{ "trigger": "CSurf_TrackToID", "contents": "CSurf_TrackToID(${1:track}, ${2:mcpView})" },
		{ "trigger": "DB2SLIDER", "contents": "DB2SLIDER(${1:x})" },
		{ "trigger": "DeleteExtState", "contents": "DeleteExtState(${1:section}, ${2:key}, ${3:persist})" },
		{ "trigger": "DeleteProjectMarker", "contents": "DeleteProjectMarker(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn})" },
		{ "trigger": "DeleteProjectMarkerByIndex", "contents": "DeleteProjectMarkerByIndex(${1:proj}, ${2:markrgnidx})" },
		{ "trigger": "DeleteTakeStretchMarkers", "contents": "DeleteTakeStretchMarkers(${1:take}, ${2:idx}, ${3:countInOptional})" },
		{ "trigger": "DeleteTrack", "contents": "DeleteTrack(${1:tr})" },
		{ "trigger": "DeleteTrackMediaItem", "contents": "DeleteTrackMediaItem(${1:tr}, ${2:it})" },
		{ "trigger": "DestroyAudioAccessor", "contents": "DestroyAudioAccessor(${1:accessor})" },
		{ "trigger": "Dock_UpdateDockID", "contents": "Dock_UpdateDockID(${1:ident_str}, ${2:whichDock})" },
		{ "trigger": "DockIsChildOfDock", "contents": "DockIsChildOfDock(${1:hwnd}, ${2:isFloatingDockerOut})" },
		{ "trigger": "DockWindowActivate", "contents": "DockWindowActivate(${1:hwnd})" },
		{ "trigger": "DockWindowAdd", "contents": "DockWindowAdd(${1:hwnd}, ${2:name}, ${3:pos}, ${4:allowShow})" },
		{ "trigger": "DockWindowAddEx", "contents": "DockWindowAddEx(${1:hwnd}, ${2:name}, ${3:identstr}, ${4:allowShow})" },
		{ "trigger": "DockWindowRefresh", "contents": "DockWindowRefresh()" },
		{ "trigger": "DockWindowRefreshForHWND", "contents": "DockWindowRefreshForHWND(${1:hwnd})" },
		{ "trigger": "DockWindowRemove", "contents": "DockWindowRemove(${1:hwnd})" },
		{ "trigger": "EnsureNotCompletelyOffscreen", "contents": "EnsureNotCompletelyOffscreen(${1:rOut.left}, ${2:rOut.top}, ${3:rOut.right}, ${4:rOut.bot})" },
		{ "trigger": "EnumPitchShiftModes", "contents": "EnumPitchShiftModes(${1:mode}, ${2:#strOut})" },
		{ "trigger": "EnumPitchShiftSubModes", "contents": "EnumPitchShiftSubModes(${1:#retval}, ${2:mode}, ${3:submode})" },
		{ "trigger": "EnumProjectMarkers", "contents": "EnumProjectMarkers(${1:idx}, ${2:isrgnOut}, ${3:posOut}, ${4:rgnendOut}, ${5:#nameOut}, ${6:markrgnindexnumberOut})" },
		{ "trigger": "EnumProjectMarkers2", "contents": "EnumProjectMarkers2(${1:proj}, ${2:idx}, ${3:isrgnOut}, ${4:posOut}, ${5:rgnendOut}, ${6:#nameOut}, ${7:markrgnindexnumberOut})" },
		{ "trigger": "EnumProjectMarkers3", "contents": "EnumProjectMarkers3(${1:proj}, ${2:idx}, ${3:isrgnOut}, ${4:posOut}, ${5:rgnendOut}, ${6:#nameOut}, ${7:markrgnindexnumberOut}, ${8:colorOut})" },
		{ "trigger": "EnumProjects", "contents": "EnumProjects(${1:idx}, ${2:#projfn})" },
		{ "trigger": "EnumRegionRenderMatrix", "contents": "EnumRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:rendertrack})" },
		{ "trigger": "EnumTrackMIDIProgramNames", "contents": "EnumTrackMIDIProgramNames(${1:track}, ${2:programNumber}, ${3:#programName})" },
		{ "trigger": "EnumTrackMIDIProgramNamesEx", "contents": "EnumTrackMIDIProgramNamesEx(${1:proj}, ${2:track}, ${3:programNumber}, ${4:#programName})" },
		{ "trigger": "file_exists", "contents": "file_exists(${1:path})" },
		{ "trigger": "format_timestr", "contents": "format_timestr(${1:tpos}, ${2:#buf})" },
		{ "trigger": "format_timestr_len", "contents": "format_timestr_len(${1:tpos}, ${2:#buf}, ${3:offset}, ${4:modeoverride})" },
		{ "trigger": "format_timestr_pos", "contents": "format_timestr_pos(${1:tpos}, ${2:#buf}, ${3:modeoverride})" },
		{ "trigger": "genGuid", "contents": "genGuid(${1:#gGUID})" },
		{ "trigger": "get_config_var", "contents": "get_config_var(${1:name}, ${2:szOut})" },
		{ "trigger": "get_ini_file", "contents": "get_ini_file(${1:#retval})" },
		{ "trigger": "get_midi_config_var", "contents": "get_midi_config_var(${1:name}, ${2:szOut})" },
		{ "trigger": "GetActiveTake", "contents": "GetActiveTake(${1:item})" },
		{ "trigger": "GetAppVersion", "contents": "GetAppVersion(${1:#retval})" },
		{ "trigger": "GetAudioAccessorEndTime", "contents": "GetAudioAccessorEndTime(${1:accessor})" },
		{ "trigger": "GetAudioAccessorHash", "contents": "GetAudioAccessorHash(${1:accessor}, ${2:#hashNeed128})" },
		{ "trigger": "GetAudioAccessorSamples", "contents": "GetAudioAccessorSamples(${1:accessor}, ${2:samplerate}, ${3:numchannels}, ${4:starttime_sec}, ${5:numsamplesperchannel}, ${6:samplebuffer})" },
		{ "trigger": "GetAudioAccessorStartTime", "contents": "GetAudioAccessorStartTime(${1:accessor})" },
		{ "trigger": "GetColorThemeStruct", "contents": "GetColorThemeStruct(${1:szOut})" },
		{ "trigger": "GetConfigWantsDock", "contents": "GetConfigWantsDock(${1:ident_str})" },
		{ "trigger": "GetCurrentProjectInLoadSave", "contents": "GetCurrentProjectInLoadSave()" },
		{ "trigger": "GetCursorContext", "contents": "GetCursorContext()" },
		{ "trigger": "GetCursorPosition", "contents": "GetCursorPosition()" },
		{ "trigger": "GetCursorPositionEx", "contents": "GetCursorPositionEx(${1:proj})" },
		{ "trigger": "GetDisplayedMediaItemColor", "contents": "GetDisplayedMediaItemColor(${1:item})" },
		{ "trigger": "GetDisplayedMediaItemColor2", "contents": "GetDisplayedMediaItemColor2(${1:item}, ${2:take})" },
		{ "trigger": "GetEnvelopeName", "contents": "GetEnvelopeName(${1:env}, ${2:#buf})" },
		{ "trigger": "GetExePath", "contents": "GetExePath(${1:#retval})" },
		{ "trigger": "GetExtState", "contents": "GetExtState(${1:#retval}, ${2:section}, ${3:key})" },
		{ "trigger": "GetFocusedFX", "contents": "GetFocusedFX(${1:tracknumberOut}, ${2:itemnumberOut}, ${3:fxnumberOut})" },
		{ "trigger": "GetFreeDiskSpaceForRecordPath", "contents": "GetFreeDiskSpaceForRecordPath(${1:proj}, ${2:pathidx})" },
		{ "trigger": "GetHZoomLevel", "contents": "GetHZoomLevel()" },
		{ "trigger": "GetIconThemePointer", "contents": "GetIconThemePointer(${1:name})" },
		{ "trigger": "GetIconThemeStruct", "contents": "GetIconThemeStruct(${1:szOut})" },
		{ "trigger": "GetInputChannelName", "contents": "GetInputChannelName(${1:#retval}, ${2:channelIndex})" },
		{ "trigger": "GetInputOutputLatency", "contents": "GetInputOutputLatency(${1:inputlatencyOut}, ${2:outputLatencyOut})" },
		{ "trigger": "GetItemEditingTime2", "contents": "GetItemEditingTime2(${1:which_itemOut}, ${2:flagsOut})" },
		{ "trigger": "GetItemProjectContext", "contents": "GetItemProjectContext(${1:item})" },
		{ "trigger": "GetLastMarkerAndCurRegion", "contents": "GetLastMarkerAndCurRegion(${1:proj}, ${2:time}, ${3:markeridxOut}, ${4:regionidxOut})" },
		{ "trigger": "GetLastTouchedFX", "contents": "GetLastTouchedFX(${1:tracknumberOut}, ${2:fxnumberOut}, ${3:paramnumberOut})" },
		{ "trigger": "GetLastTouchedTrack", "contents": "GetLastTouchedTrack()" },
		{ "trigger": "GetMainHwnd", "contents": "GetMainHwnd()" },
		{ "trigger": "GetMasterMuteSoloFlags", "contents": "GetMasterMuteSoloFlags()" },
		{ "trigger": "GetMasterTrack", "contents": "GetMasterTrack(${1:proj})" },
		{ "trigger": "GetMasterTrackVisibility", "contents": "GetMasterTrackVisibility()" },
		{ "trigger": "GetMaxMidiInputs", "contents": "GetMaxMidiInputs()" },
		{ "trigger": "GetMaxMidiOutputs", "contents": "GetMaxMidiOutputs()" },
		{ "trigger": "GetMediaItem", "contents": "GetMediaItem(${1:proj}, ${2:itemidx})" },
		{ "trigger": "GetMediaItem_Track", "contents": "GetMediaItem_Track(${1:item})" },
		{ "trigger": "GetMediaItemInfo_Value", "contents": "GetMediaItemInfo_Value(${1:item}, ${2:parmname})" },
		{ "trigger": "GetMediaItemNumTakes", "contents": "GetMediaItemNumTakes(${1:item})" },
		{ "trigger": "GetMediaItemTake", "contents": "GetMediaItemTake(${1:item}, ${2:tk})" },
		{ "trigger": "GetMediaItemTake_Item", "contents": "GetMediaItemTake_Item(${1:take})" },
		{ "trigger": "GetMediaItemTake_Source", "contents": "GetMediaItemTake_Source(${1:take})" },
		{ "trigger": "GetMediaItemTake_Track", "contents": "GetMediaItemTake_Track(${1:take})" },
		{ "trigger": "GetMediaItemTakeByGUID", "contents": "GetMediaItemTakeByGUID(${1:project},  guidGUID)" },
		{ "trigger": "GetMediaItemTakeInfo_Value", "contents": "GetMediaItemTakeInfo_Value(${1:take}, ${2:parmname})" },
		{ "trigger": "GetMediaItemTrack", "contents": "GetMediaItemTrack(${1:item})" },
		{ "trigger": "GetMediaSourceFileName", "contents": "GetMediaSourceFileName(${1:source}, ${2:#filenamebuf})" },
		{ "trigger": "GetMediaSourceNumChannels", "contents": "GetMediaSourceNumChannels(${1:source})" },
		{ "trigger": "GetMediaSourceSampleRate", "contents": "GetMediaSourceSampleRate(${1:source})" },
		{ "trigger": "GetMediaSourceType", "contents": "GetMediaSourceType(${1:source}, ${2:#typebuf})" },
		{ "trigger": "GetMediaTrackInfo_Value", "contents": "GetMediaTrackInfo_Value(${1:tr}, ${2:parmname})" },
		{ "trigger": "GetMidiInput", "contents": "GetMidiInput(${1:idx})" },
		{ "trigger": "GetMIDIInputName", "contents": "GetMIDIInputName(${1:dev}, ${2:#nameout})" },
		{ "trigger": "GetMidiOutput", "contents": "GetMidiOutput(${1:idx})" },
		{ "trigger": "GetMIDIOutputName", "contents": "GetMIDIOutputName(${1:dev}, ${2:#nameout})" },
		{ "trigger": "GetMixerScroll", "contents": "GetMixerScroll()" },
		{ "trigger": "GetMouseModifier", "contents": "GetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:#action})" },
		{ "trigger": "GetNumAudioInputs", "contents": "GetNumAudioInputs()" },
		{ "trigger": "GetNumAudioOutputs", "contents": "GetNumAudioOutputs()" },
		{ "trigger": "GetNumMIDIInputs", "contents": "GetNumMIDIInputs()" },
		{ "trigger": "GetNumMIDIOutputs", "contents": "GetNumMIDIOutputs()" },
		{ "trigger": "GetNumTracks", "contents": "GetNumTracks()" },
		{ "trigger": "GetOutputChannelName", "contents": "GetOutputChannelName(${1:#retval}, ${2:channelIndex})" },
		{ "trigger": "GetOutputLatency", "contents": "GetOutputLatency()" },
		{ "trigger": "GetParentTrack", "contents": "GetParentTrack(${1:track})" },
		{ "trigger": "GetPeakFileName", "contents": "GetPeakFileName(${1:fn}, ${2:#buf})" },
		{ "trigger": "GetPeakFileNameEx", "contents": "GetPeakFileNameEx(${1:fn}, ${2:#buf}, ${3:forWrite})" },
		{ "trigger": "GetPeakFileNameEx2", "contents": "GetPeakFileNameEx2(${1:fn}, ${2:#buf}, ${3:forWrite}, ${4:peaksfileextension})" },
		{ "trigger": "GetPlayPosition", "contents": "GetPlayPosition()" },
		{ "trigger": "GetPlayPosition2", "contents": "GetPlayPosition2()" },
		{ "trigger": "GetPlayPosition2Ex", "contents": "GetPlayPosition2Ex(${1:proj})" },
		{ "trigger": "GetPlayPositionEx", "contents": "GetPlayPositionEx(${1:proj})" },
		{ "trigger": "GetPlayState", "contents": "GetPlayState()" },
		{ "trigger": "GetPlayStateEx", "contents": "GetPlayStateEx(${1:proj})" },
		{ "trigger": "GetProjectPath", "contents": "GetProjectPath(${1:#buf})" },
		{ "trigger": "GetProjectPathEx", "contents": "GetProjectPathEx(${1:proj}, ${2:#buf})" },
		{ "trigger": "GetProjectStateChangeCount", "contents": "GetProjectStateChangeCount(${1:proj})" },
		{ "trigger": "GetProjectTimeSignature", "contents": "GetProjectTimeSignature(${1:bpmOut}, ${2:bpiOut})" },
		{ "trigger": "GetProjectTimeSignature2", "contents": "GetProjectTimeSignature2(${1:proj}, ${2:bpmOut}, ${3:bpiOut})" },
		{ "trigger": "GetResourcePath", "contents": "GetResourcePath(${1:#retval})" },
		{ "trigger": "GetSelectedEnvelope", "contents": "GetSelectedEnvelope(${1:proj})" },
		{ "trigger": "GetSelectedMediaItem", "contents": "GetSelectedMediaItem(${1:proj}, ${2:selitem})" },
		{ "trigger": "GetSelectedTrack", "contents": "GetSelectedTrack(${1:proj}, ${2:seltrackidx})" },
		{ "trigger": "GetSelectedTrackEnvelope", "contents": "GetSelectedTrackEnvelope(${1:proj})" },
		{ "trigger": "GetSet_ArrangeView2", "contents": "GetSet_ArrangeView2(${1:proj}, ${2:isSet}, ${3:screen_x_start}, ${4:screen_x_end}, ${5:start_timeOut}, ${6:end_timeOut})" },
		{ "trigger": "GetSet_LoopTimeRange", "contents": "GetSet_LoopTimeRange(${1:isSet}, ${2:isLoop}, ${3:startOut}, ${4:endOut}, ${5:allowautoseek})" },
		{ "trigger": "GetSet_LoopTimeRange2", "contents": "GetSet_LoopTimeRange2(${1:proj}, ${2:isSet}, ${3:isLoop}, ${4:startOut}, ${5:endOut}, ${6:allowautoseek})" },
		{ "trigger": "GetSetEnvelopeState", "contents": "GetSetEnvelopeState(${1:env}, ${2:#str})" },
		{ "trigger": "GetSetEnvelopeState2", "contents": "GetSetEnvelopeState2(${1:env}, ${2:#str}, ${3:isundo})" },
		{ "trigger": "GetSetItemState", "contents": "GetSetItemState(${1:item}, ${2:#str})" },
		{ "trigger": "GetSetItemState2", "contents": "GetSetItemState2(${1:item}, ${2:#str}, ${3:isundo})" },
		{ "trigger": "GetSetMediaItemTakeInfo_String", "contents": "GetSetMediaItemTakeInfo_String(${1:tk}, ${2:parmname}, ${3:#stringNeedBig}, ${4:setnewvalue})" },
		{ "trigger": "GetSetMediaTrackInfo_String", "contents": "GetSetMediaTrackInfo_String(${1:tr}, ${2:parmname}, ${3:#stringNeedBig}, ${4:setnewvalue})" },
		{ "trigger": "GetSetRepeat", "contents": "GetSetRepeat(${1:val})" },
		{ "trigger": "GetSetRepeatEx", "contents": "GetSetRepeatEx(${1:proj}, ${2:val})" },
		{ "trigger": "GetSetTrackState", "contents": "GetSetTrackState(${1:track}, ${2:#str})" },
		{ "trigger": "GetSetTrackState2", "contents": "GetSetTrackState2(${1:track}, ${2:#str}, ${3:isundo})" },
		{ "trigger": "GetSubProjectFromSource", "contents": "GetSubProjectFromSource(${1:src})" },
		{ "trigger": "GetTake", "contents": "GetTake(${1:item}, ${2:takeidx})" },
		{ "trigger": "GetTakeEnvelopeByName", "contents": "GetTakeEnvelopeByName(${1:take}, ${2:envname})" },
		{ "trigger": "GetTakeName", "contents": "GetTakeName(${1:#retval}, ${2:take})" },
		{ "trigger": "GetTakeNumStretchMarkers", "contents": "GetTakeNumStretchMarkers(${1:take})" },
		{ "trigger": "GetTakeStretchMarker", "contents": "GetTakeStretchMarker(${1:take}, ${2:idx}, ${3:posOut}, ${4:srcposOutOptional})" },
		{ "trigger": "GetTCPFXParm", "contents": "GetTCPFXParm(${1:project}, ${2:track}, ${3:index}, ${4:fxindexOut}, ${5:parmidxOut})" },
		{ "trigger": "GetTempoMatchPlayRate", "contents": "GetTempoMatchPlayRate(${1:source}, ${2:srcscale}, ${3:position}, ${4:mult}, ${5:rateOut}, ${6:targetlenOut})" },
		{ "trigger": "GetTempoTimeSigMarker", "contents": "GetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timeposOut}, ${4:measureposOut}, ${5:beatposOut}, ${6:bpmOut}, ${7:timesig_numOut}, ${8:timesig_denomOut}, ${9:lineartempoOut})" },
		{ "trigger": "GetToggleCommandState", "contents": "GetToggleCommandState(${1:command_id})" },
		{ "trigger": "GetToggleCommandStateThroughHooks", "contents": "GetToggleCommandStateThroughHooks(${1:sec}, ${2:command_id})" },
		{ "trigger": "GetTooltipWindow", "contents": "GetTooltipWindow()" },
		{ "trigger": "GetTrack", "contents": "GetTrack(${1:proj}, ${2:trackidx})" },
		{ "trigger": "GetTrackAutomationMode", "contents": "GetTrackAutomationMode(${1:tr})" },
		{ "trigger": "GetTrackColor", "contents": "GetTrackColor(${1:track})" },
		{ "trigger": "GetTrackEnvelope", "contents": "GetTrackEnvelope(${1:track}, ${2:envidx})" },
		{ "trigger": "GetTrackEnvelopeByName", "contents": "GetTrackEnvelopeByName(${1:track}, ${2:envname})" },
		{ "trigger": "GetTrackGUID", "contents": "GetTrackGUID(${1:#retguid}, ${2:tr})" },
		{ "trigger": "GetTrackMediaItem", "contents": "GetTrackMediaItem(${1:tr}, ${2:itemidx})" },
		{ "trigger": "GetTrackMIDINoteName", "contents": "GetTrackMIDINoteName(${1:#retval}, ${2:track}, ${3:note}, ${4:chan})" },
		{ "trigger": "GetTrackMIDINoteNameEx", "contents": "GetTrackMIDINoteNameEx(${1:#retval}, ${2:proj}, ${3:track}, ${4:note}, ${5:chan})" },
		{ "trigger": "GetTrackMIDINoteRange", "contents": "GetTrackMIDINoteRange(${1:proj}, ${2:track}, ${3:note_loOut}, ${4:note_hiOut})" },
		{ "trigger": "GetTrackNumMediaItems", "contents": "GetTrackNumMediaItems(${1:tr})" },
		{ "trigger": "GetTrackNumSends", "contents": "GetTrackNumSends(${1:tr}, ${2:category})" },
		{ "trigger": "GetTrackReceiveName", "contents": "GetTrackReceiveName(${1:track}, ${2:recv_index}, ${3:#buf})" },
		{ "trigger": "GetTrackReceiveUIMute", "contents": "GetTrackReceiveUIMute(${1:track}, ${2:recv_index}, ${3:muteOut})" },
		{ "trigger": "GetTrackReceiveUIVolPan", "contents": "GetTrackReceiveUIVolPan(${1:track}, ${2:recv_index}, ${3:volumeOut}, ${4:panOut})" },
		{ "trigger": "GetTrackSendName", "contents": "GetTrackSendName(${1:track}, ${2:send_index}, ${3:#buf})" },
		{ "trigger": "GetTrackSendUIMute", "contents": "GetTrackSendUIMute(${1:track}, ${2:send_index}, ${3:muteOut})" },
		{ "trigger": "GetTrackSendUIVolPan", "contents": "GetTrackSendUIVolPan(${1:track}, ${2:send_index}, ${3:volumeOut}, ${4:panOut})" },
		{ "trigger": "GetTrackState", "contents": "GetTrackState(${1:#retval}, ${2:track}, ${3:flagsOut})" },
		{ "trigger": "GetTrackUIMute", "contents": "GetTrackUIMute(${1:track}, ${2:muteOut})" },
		{ "trigger": "GetTrackUIPan", "contents": "GetTrackUIPan(${1:track}, ${2:pan1Out}, ${3:pan2Out}, ${4:panmodeOut})" },
		{ "trigger": "GetTrackUIVolPan", "contents": "GetTrackUIVolPan(${1:track}, ${2:volumeOut}, ${3:panOut})" },
		{ "trigger": "GetUserFileNameForRead", "contents": "GetUserFileNameForRead(${1:#filenameNeed4096}, ${2:title}, ${3:defext})" },
		{ "trigger": "GetUserInputs", "contents": "GetUserInputs(${1:title}, ${2:num_inputs}, ${3:captions_csv}, ${4:#retvals_csv})" },
		{ "trigger": "GoToMarker", "contents": "GoToMarker(${1:proj}, ${2:marker_index}, ${3:use_timeline_order})" },
		{ "trigger": "GoToRegion", "contents": "GoToRegion(${1:proj}, ${2:region_index}, ${3:use_timeline_order})" },
		{ "trigger": "GR_SelectColor", "contents": "GR_SelectColor(${1:hwnd}, ${2:colorOut})" },
		{ "trigger": "GSC_mainwnd", "contents": "GSC_mainwnd(${1:t})" },
		{ "trigger": "guidToString", "contents": "guidToString(${1:gGUID}, ${2:#destNeed64})" },
		{ "trigger": "HasExtState", "contents": "HasExtState(${1:section}, ${2:key})" },
		{ "trigger": "HasTrackMIDIPrograms", "contents": "HasTrackMIDIPrograms(${1:#retval}, ${2:track})" },
		{ "trigger": "HasTrackMIDIProgramsEx", "contents": "HasTrackMIDIProgramsEx(${1:#retval}, ${2:proj}, ${3:track})" },
		{ "trigger": "Help_Set", "contents": "Help_Set(${1:helpstring}, ${2:is_temporary_help})" },
		{ "trigger": "HiresPeaksFromSource", "contents": "HiresPeaksFromSource(${1:src}, ${2:block})" },
		{ "trigger": "image_resolve_fn", "contents": "image_resolve_fn(${1:in}, ${2:#out})" },
		{ "trigger": "InsertMedia", "contents": "InsertMedia(${1:file}, ${2:mode})" },
		{ "trigger": "InsertMediaSection", "contents": "InsertMediaSection(${1:file}, ${2:mode}, ${3:startpct}, ${4:endpct}, ${5:pitchshift})" },
		{ "trigger": "InsertTrackAtIndex", "contents": "InsertTrackAtIndex(${1:idx}, ${2:wantDefaults})" },
		{ "trigger": "IsMediaExtension", "contents": "IsMediaExtension(${1:ext}, ${2:wantOthers})" },
		{ "trigger": "IsMediaItemSelected", "contents": "IsMediaItemSelected(${1:item})" },
		{ "trigger": "IsTrackSelected", "contents": "IsTrackSelected(${1:track})" },
		{ "trigger": "IsTrackVisible", "contents": "IsTrackVisible(${1:track}, ${2:mixer})" },
		{ "trigger": "kbd_OnMidiEvent", "contents": "kbd_OnMidiEvent(${1:evt}, ${2:dev_index})" },
		{ "trigger": "kbd_OnMidiList", "contents": "kbd_OnMidiList(${1:list}, ${2:dev_index})" },
		{ "trigger": "LICE_ClipLine", "contents": "LICE_ClipLine(${1:pX1Out}, ${2:pY1Out}, ${3:pX2Out}, ${4:pY2Out}, ${5:xLo}, ${6:yLo}, ${7:xHi}, ${8:yHi})" },
		{ "trigger": "Loop_OnArrow", "contents": "Loop_OnArrow(${1:project}, ${2:direction})" },
		{ "trigger": "Main_OnCommand", "contents": "Main_OnCommand(${1:command}, ${2:flag})" },
		{ "trigger": "Main_OnCommandEx", "contents": "Main_OnCommandEx(${1:command}, ${2:flag}, ${3:proj})" },
		{ "trigger": "Main_openProject", "contents": "Main_openProject(${1:name})" },
		{ "trigger": "Main_UpdateLoopInfo", "contents": "Main_UpdateLoopInfo(${1:ignoremask})" },
		{ "trigger": "MarkProjectDirty", "contents": "MarkProjectDirty(${1:proj})" },
		{ "trigger": "MarkTrackItemsDirty", "contents": "MarkTrackItemsDirty(${1:track}, ${2:item})" },
		{ "trigger": "Master_GetPlayRate", "contents": "Master_GetPlayRate(${1:project})" },
		{ "trigger": "Master_GetPlayRateAtTime", "contents": "Master_GetPlayRateAtTime(${1:time_s}, ${2:proj})" },
		{ "trigger": "Master_GetTempo", "contents": "Master_GetTempo()" },
		{ "trigger": "Master_NormalizePlayRate", "contents": "Master_NormalizePlayRate(${1:playrate}, ${2:isnormalized})" },
		{ "trigger": "Master_NormalizeTempo", "contents": "Master_NormalizeTempo(${1:bpm}, ${2:isnormalized})" },
		{ "trigger": "MB", "contents": "MB(${1:msg}, ${2:title}, ${3:type})" },
		{ "trigger": "MediaItemDescendsFromTrack", "contents": "MediaItemDescendsFromTrack(${1:item}, ${2:track})" },
		{ "trigger": "MIDI_CountEvts", "contents": "MIDI_CountEvts(${1:take}, ${2:notecntOut}, ${3:ccevtcntOut}, ${4:textsyxevtcntOut})" },
		{ "trigger": "MIDI_DeleteCC", "contents": "MIDI_DeleteCC(${1:take}, ${2:ccidx})" },
		{ "trigger": "MIDI_DeleteEvt", "contents": "MIDI_DeleteEvt(${1:take}, ${2:evtidx})" },
		{ "trigger": "MIDI_DeleteNote", "contents": "MIDI_DeleteNote(${1:take}, ${2:noteidx})" },
		{ "trigger": "MIDI_DeleteTextSysexEvt", "contents": "MIDI_DeleteTextSysexEvt(${1:take}, ${2:textsyxevtidx})" },
		{ "trigger": "MIDI_EnumSelCC", "contents": "MIDI_EnumSelCC(${1:take}, ${2:ccidx})" },
		{ "trigger": "MIDI_EnumSelEvts", "contents": "MIDI_EnumSelEvts(${1:take}, ${2:evtidx})" },
		{ "trigger": "MIDI_EnumSelNotes", "contents": "MIDI_EnumSelNotes(${1:take}, ${2:noteidx})" },
		{ "trigger": "MIDI_EnumSelTextSysexEvts", "contents": "MIDI_EnumSelTextSysexEvts(${1:take}, ${2:textsyxidx})" },
		{ "trigger": "MIDI_eventlist_Create", "contents": "MIDI_eventlist_Create()" },
		{ "trigger": "MIDI_eventlist_Destroy", "contents": "MIDI_eventlist_Destroy(${1:evtlist})" },
		{ "trigger": "MIDI_GetCC", "contents": "MIDI_GetCC(${1:take}, ${2:ccidx}, ${3:selectedOut}, ${4:mutedOut}, ${5:ppqposOut}, ${6:chanmsgOut}, ${7:chanOut}, ${8:msg2Out}, ${9:msg3Out})" },
		{ "trigger": "MIDI_GetEvt", "contents": "MIDI_GetEvt(${1:take}, ${2:evtidx}, ${3:selectedOut}, ${4:mutedOut}, ${5:ppqposOut}, ${6:#msg})" },
		{ "trigger": "MIDI_GetNote", "contents": "MIDI_GetNote(${1:take}, ${2:noteidx}, ${3:selectedOut}, ${4:mutedOut}, ${5:startppqposOut}, ${6:endppqposOut}, ${7:chanOut}, ${8:pitchOut}, ${9:velOut})" },
		{ "trigger": "MIDI_GetPPQPos_EndOfMeasure", "contents": "MIDI_GetPPQPos_EndOfMeasure(${1:take}, ${2:ppqpos})" },
		{ "trigger": "MIDI_GetPPQPos_StartOfMeasure", "contents": "MIDI_GetPPQPos_StartOfMeasure(${1:take}, ${2:ppqpos})" },
		{ "trigger": "MIDI_GetPPQPosFromProjTime", "contents": "MIDI_GetPPQPosFromProjTime(${1:take}, ${2:projtime})" },
		{ "trigger": "MIDI_GetProjTimeFromPPQPos", "contents": "MIDI_GetProjTimeFromPPQPos(${1:take}, ${2:ppqpos})" },
		{ "trigger": "MIDI_GetTextSysexEvt", "contents": "MIDI_GetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selectedOutOptional}, ${4:mutedOutOptional}, ${5:ppqposOutOptional}, ${6:typeOutOptional}, ${7:#msgOptional})" },
		{ "trigger": "MIDI_InsertCC", "contents": "MIDI_InsertCC(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:chanmsg}, ${6:chan}, ${7:msg2}, ${8:msg3})" },
		{ "trigger": "MIDI_InsertEvt", "contents": "MIDI_InsertEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:msg})" },
		{ "trigger": "MIDI_InsertNote", "contents": "MIDI_InsertNote(${1:take}, ${2:selected}, ${3:muted}, ${4:startppqpos}, ${5:endppqpos}, ${6:chan}, ${7:pitch}, ${8:vel})" },
		{ "trigger": "MIDI_InsertTextSysexEvt", "contents": "MIDI_InsertTextSysexEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:type}, ${6:msg})" },
		{ "trigger": "midi_reinit", "contents": "midi_reinit()" },
		{ "trigger": "MIDI_SetCC", "contents": "MIDI_SetCC(${1:take}, ${2:ccidx}, ${3:selectedInOptional}, ${4:mutedInOptional}, ${5:ppqposInOptional}, ${6:chanmsgInOptional}, ${7:chanInOptional}, ${8:msg2InOptional}, ${9:msg3InOptional})" },
		{ "trigger": "MIDI_SetEvt", "contents": "MIDI_SetEvt(${1:take}, ${2:evtidx}, ${3:selectedInOptional}, ${4:mutedInOptional}, ${5:ppqposInOptional}, ${6:msgOptional})" },
		{ "trigger": "MIDI_SetNote", "contents": "MIDI_SetNote(${1:take}, ${2:noteidx}, ${3:selectedInOptional}, ${4:mutedInOptional}, ${5:startppqposInOptional}, ${6:endppqposInOptional}, ${7:chanInOptional}, ${8:pitchInOptional}, ${9:velInOptional})" },
		{ "trigger": "MIDI_SetTextSysexEvt", "contents": "MIDI_SetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selectedInOptional}, ${4:mutedInOptional}, ${5:ppqposInOptional}, ${6:typeInOptional}, ${7:msgOptional})" },
		{ "trigger": "MIDIEditor_GetActive", "contents": "MIDIEditor_GetActive()" },
		{ "trigger": "MIDIEditor_GetMode", "contents": "MIDIEditor_GetMode(${1:midieditor})" },
		{ "trigger": "MIDIEditor_GetSetting_int", "contents": "MIDIEditor_GetSetting_int(${1:midieditor}, ${2:setting_desc})" },
		{ "trigger": "MIDIEditor_GetSetting_str", "contents": "MIDIEditor_GetSetting_str(${1:midieditor}, ${2:setting_desc}, ${3:#buf})" },
		{ "trigger": "MIDIEditor_GetTake", "contents": "MIDIEditor_GetTake(${1:midieditor})" },
		{ "trigger": "MIDIEditor_LastFocused_OnCommand", "contents": "MIDIEditor_LastFocused_OnCommand(${1:command_id}, ${2:islistviewcommand})" },
		{ "trigger": "MIDIEditor_OnCommand", "contents": "MIDIEditor_OnCommand(${1:midieditor}, ${2:command_id})" },
		{ "trigger": "mkpanstr", "contents": "mkpanstr(${1:#strNeed64}, ${2:pan})" },
		{ "trigger": "mkvolpanstr", "contents": "mkvolpanstr(${1:#strNeed64}, ${2:vol}, ${3:pan})" },
		{ "trigger": "mkvolstr", "contents": "mkvolstr(${1:#strNeed64}, ${2:vol})" },
		{ "trigger": "MoveEditCursor", "contents": "MoveEditCursor(${1:adjamt}, ${2:dosel})" },
		{ "trigger": "MoveMediaItemToTrack", "contents": "MoveMediaItemToTrack(${1:item}, ${2:desttr})" },
		{ "trigger": "MuteAllTracks", "contents": "MuteAllTracks(${1:mute})" },
		{ "trigger": "my_getViewport", "contents": "my_getViewport(${1:r.left}, ${2:r.top}, ${3:r.right}, ${4:r.bot}, ${5:sr.left}, ${6:sr.top}, ${7:sr.right}, ${8:sr.bot}, ${9:wantWorkArea})" },
		{ "trigger": "NamedCommandLookup", "contents": "NamedCommandLookup(${1:command_name})" },
		{ "trigger": "OnPauseButton", "contents": "OnPauseButton()" },
		{ "trigger": "OnPauseButtonEx", "contents": "OnPauseButtonEx(${1:proj})" },
		{ "trigger": "OnPlayButton", "contents": "OnPlayButton()" },
		{ "trigger": "OnPlayButtonEx", "contents": "OnPlayButtonEx(${1:proj})" },
		{ "trigger": "OnStopButton", "contents": "OnStopButton()" },
		{ "trigger": "OnStopButtonEx", "contents": "OnStopButtonEx(${1:proj})" },
		{ "trigger": "OscLocalMessageToHost", "contents": "OscLocalMessageToHost(${1:message}, ${2:valueInOptional})" },
		{ "trigger": "parse_timestr", "contents": "parse_timestr(${1:buf})" },
		{ "trigger": "parse_timestr_len", "contents": "parse_timestr_len(${1:buf}, ${2:offset}, ${3:modeoverride})" },
		{ "trigger": "parse_timestr_pos", "contents": "parse_timestr_pos(${1:buf}, ${2:modeoverride})" },
		{ "trigger": "parsepanstr", "contents": "parsepanstr(${1:str})" },
		{ "trigger": "PCM_Sink_Create", "contents": "PCM_Sink_Create(${1:filename}, ${2:cfg}, ${3:nch}, ${4:srate}, ${5:buildpeaks})" },
		{ "trigger": "PCM_Sink_CreateEx", "contents": "PCM_Sink_CreateEx(${1:proj}, ${2:filename}, ${3:cfg}, ${4:nch}, ${5:srate}, ${6:buildpeaks})" },
		{ "trigger": "PCM_Sink_CreateMIDIFile", "contents": "PCM_Sink_CreateMIDIFile(${1:filename}, ${2:cfg}, ${3:bpm}, ${4:div})" },
		{ "trigger": "PCM_Sink_CreateMIDIFileEx", "contents": "PCM_Sink_CreateMIDIFileEx(${1:proj}, ${2:filename}, ${3:cfg}, ${4:bpm}, ${5:div})" },
		{ "trigger": "PCM_Sink_Enum", "contents": "PCM_Sink_Enum(${1:idx}, ${2:#descstrOut})" },
		{ "trigger": "PCM_Sink_GetExtension", "contents": "PCM_Sink_GetExtension(${1:#retval}, ${2:data})" },
		{ "trigger": "PCM_Sink_ShowConfig", "contents": "PCM_Sink_ShowConfig(${1:cfg}, ${2:hwndParent})" },
		{ "trigger": "PCM_Source_CreateFromFile", "contents": "PCM_Source_CreateFromFile(${1:filename})" },
		{ "trigger": "PCM_Source_CreateFromFileEx", "contents": "PCM_Source_CreateFromFileEx(${1:filename}, ${2:forcenoMidiImp})" },
		{ "trigger": "PCM_Source_CreateFromType", "contents": "PCM_Source_CreateFromType(${1:sourcetype})" },
		{ "trigger": "PCM_Source_GetSectionInfo", "contents": "PCM_Source_GetSectionInfo(${1:src}, ${2:offsOut}, ${3:lenOut}, ${4:revOut})" },
		{ "trigger": "PeakBuild_Create", "contents": "PeakBuild_Create(${1:src}, ${2:fn}, ${3:srate}, ${4:nch})" },
		{ "trigger": "PeakGet_Create", "contents": "PeakGet_Create(${1:fn}, ${2:srate}, ${3:nch})" },
		{ "trigger": "plugin_getFilterList", "contents": "plugin_getFilterList(${1:#retval})" },
		{ "trigger": "plugin_getImportableProjectFilterList", "contents": "plugin_getImportableProjectFilterList(${1:#retval})" },
		{ "trigger": "PluginWantsAlwaysRunFx", "contents": "PluginWantsAlwaysRunFx(${1:amt})" },
		{ "trigger": "PreventUIRefresh", "contents": "PreventUIRefresh(${1:prevent_count})" },
		{ "trigger": "projectconfig_var_addr", "contents": "projectconfig_var_addr(${1:proj}, ${2:idx})" },
		{ "trigger": "projectconfig_var_getoffs", "contents": "projectconfig_var_getoffs(${1:name}, ${2:szOut})" },
		{ "trigger": "ReaScriptError", "contents": "ReaScriptError(${1:errmsg})" },
		{ "trigger": "RecursiveCreateDirectory", "contents": "RecursiveCreateDirectory(${1:path}, ${2:ignored})" },
		{ "trigger": "RefreshToolbar", "contents": "RefreshToolbar(${1:command_id})" },
		{ "trigger": "relative_fn", "contents": "relative_fn(${1:in}, ${2:#out})" },
		{ "trigger": "RenderFileSection", "contents": "RenderFileSection(${1:source_filename}, ${2:target_filename}, ${3:start_percent}, ${4:end_percent}, ${5:playrate})" },
		{ "trigger": "Resample_EnumModes", "contents": "Resample_EnumModes(${1:#retval}, ${2:mode})" },
		{ "trigger": "resolve_fn", "contents": "resolve_fn(${1:in}, ${2:#out})" },
		{ "trigger": "resolve_fn2", "contents": "resolve_fn2(${1:in}, ${2:#out}, ${3:checkSubDirOptional})" },
		{ "trigger": "ReverseNamedCommandLookup", "contents": "ReverseNamedCommandLookup(${1:#retval}, ${2:cmd})" },
		{ "trigger": "SelectAllMediaItems", "contents": "SelectAllMediaItems(${1:proj}, ${2:selected})" },
		{ "trigger": "SelectProjectInstance", "contents": "SelectProjectInstance(${1:proj})" },
		{ "trigger": "SetActiveTake", "contents": "SetActiveTake(${1:take})" },
		{ "trigger": "SetAutomationMode", "contents": "SetAutomationMode(${1:mode}, ${2:onlySel})" },
		{ "trigger": "SetCurrentBPM", "contents": "SetCurrentBPM(${1:__proj}, ${2:bpm}, ${3:wantUndo})" },
		{ "trigger": "SetEditCurPos", "contents": "SetEditCurPos(${1:time}, ${2:moveview}, ${3:seekplay})" },
		{ "trigger": "SetEditCurPos2", "contents": "SetEditCurPos2(${1:proj}, ${2:time}, ${3:moveview}, ${4:seekplay})" },
		{ "trigger": "SetExtState", "contents": "SetExtState(${1:section}, ${2:key}, ${3:value}, ${4:persist})" },
		{ "trigger": "SetMasterTrackVisibility", "contents": "SetMasterTrackVisibility(${1:flag})" },
		{ "trigger": "SetMediaItemInfo_Value", "contents": "SetMediaItemInfo_Value(${1:item}, ${2:parmname}, ${3:newvalue})" },
		{ "trigger": "SetMediaItemLength", "contents": "SetMediaItemLength(${1:item}, ${2:length}, ${3:refreshUI})" },
		{ "trigger": "SetMediaItemPosition", "contents": "SetMediaItemPosition(${1:item}, ${2:position}, ${3:refreshUI})" },
		{ "trigger": "SetMediaItemSelected", "contents": "SetMediaItemSelected(${1:item}, ${2:selected})" },
		{ "trigger": "SetMediaItemTakeInfo_Value", "contents": "SetMediaItemTakeInfo_Value(${1:take}, ${2:parmname}, ${3:newvalue})" },
		{ "trigger": "SetMediaTrackInfo_Value", "contents": "SetMediaTrackInfo_Value(${1:tr}, ${2:parmname}, ${3:newvalue})" },
		{ "trigger": "SetMixerScroll", "contents": "SetMixerScroll(${1:leftmosttrack})" },
		{ "trigger": "SetMouseModifier", "contents": "SetMouseModifier(${1:context}, ${2:modifier_flag}, ${3:action})" },
		{ "trigger": "SetOnlyTrackSelected", "contents": "SetOnlyTrackSelected(${1:track})" },
		{ "trigger": "SetProjectMarker", "contents": "SetProjectMarker(${1:markrgnindexnumber}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:name})" },
		{ "trigger": "SetProjectMarker2", "contents": "SetProjectMarker2(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name})" },
		{ "trigger": "SetProjectMarker3", "contents": "SetProjectMarker3(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color})" },
		{ "trigger": "SetProjectMarker4", "contents": "SetProjectMarker4(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:name}, ${7:color}, ${8:flags})" },
		{ "trigger": "SetProjectMarkerByIndex", "contents": "SetProjectMarkerByIndex(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color})" },
		{ "trigger": "SetProjectMarkerByIndex2", "contents": "SetProjectMarkerByIndex2(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:name}, ${8:color}, ${9:flags})" },
		{ "trigger": "SetRegionRenderMatrix", "contents": "SetRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:track}, ${4:addorremove})" },
		{ "trigger": "SetTakeStretchMarker", "contents": "SetTakeStretchMarker(${1:take}, ${2:idx}, ${3:pos}, ${4:srcposInOptional})" },
		{ "trigger": "SetTempoTimeSigMarker", "contents": "SetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timepos}, ${4:measurepos}, ${5:beatpos}, ${6:bpm}, ${7:timesig_num}, ${8:timesig_denom}, ${9:lineartempo})" },
		{ "trigger": "SetTrackAutomationMode", "contents": "SetTrackAutomationMode(${1:tr}, ${2:mode})" },
		{ "trigger": "SetTrackColor", "contents": "SetTrackColor(${1:track}, ${2:color})" },
		{ "trigger": "SetTrackMIDINoteName", "contents": "SetTrackMIDINoteName(${1:track}, ${2:note}, ${3:chan}, ${4:name})" },
		{ "trigger": "SetTrackMIDINoteNameEx", "contents": "SetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:note}, ${4:chan}, ${5:name})" },
		{ "trigger": "SetTrackSelected", "contents": "SetTrackSelected(${1:track}, ${2:selected})" },
		{ "trigger": "SetTrackSendUIPan", "contents": "SetTrackSendUIPan(${1:track}, ${2:send_idx}, ${3:pan}, ${4:isend})" },
		{ "trigger": "SetTrackSendUIVol", "contents": "SetTrackSendUIVol(${1:track}, ${2:send_idx}, ${3:vol}, ${4:isend})" },
		{ "trigger": "ShowActionList", "contents": "ShowActionList(${1:caller}, ${2:callerWnd})" },
		{ "trigger": "ShowConsoleMsg", "contents": "ShowConsoleMsg(${1:msg})" },
		{ "trigger": "ShowMessageBox", "contents": "ShowMessageBox(${1:msg}, ${2:title}, ${3:type})" },
		{ "trigger": "SLIDER2DB", "contents": "SLIDER2DB(${1:y})" },
		{ "trigger": "SnapToGrid", "contents": "SnapToGrid(${1:project}, ${2:time_pos})" },
		{ "trigger": "SoloAllTracks", "contents": "SoloAllTracks(${1:solo})" },
		{ "trigger": "Splash_GetWnd", "contents": "Splash_GetWnd()" },
		{ "trigger": "SplitMediaItem", "contents": "SplitMediaItem(${1:item}, ${2:position})" },
		{ "trigger": "stringToGuid", "contents": "stringToGuid(${1:str}, ${2:#gGUID})" },
		{ "trigger": "StuffMIDIMessage", "contents": "StuffMIDIMessage(${1:mode}, ${2:msg1}, ${3:msg2}, ${4:msg3})" },
		{ "trigger": "TimeMap2_beatsToTime", "contents": "TimeMap2_beatsToTime(${1:proj}, ${2:tpos}, ${3:measuresOutOptional})" },
		{ "trigger": "TimeMap2_GetDividedBpmAtTime", "contents": "TimeMap2_GetDividedBpmAtTime(${1:proj}, ${2:time})" },
		{ "trigger": "TimeMap2_GetNextChangeTime", "contents": "TimeMap2_GetNextChangeTime(${1:proj}, ${2:time})" },
		{ "trigger": "TimeMap2_QNToTime", "contents": "TimeMap2_QNToTime(${1:proj}, ${2:qn})" },
		{ "trigger": "TimeMap2_timeToBeats", "contents": "TimeMap2_timeToBeats(${1:proj}, ${2:tpos}, ${3:measuresOutOptional}, ${4:cmlOutOptional}, ${5:fullbeatsOutOptional}, ${6:cdenomOutOptional})" },
		{ "trigger": "TimeMap2_timeToQN", "contents": "TimeMap2_timeToQN(${1:proj}, ${2:tpos})" },
		{ "trigger": "TimeMap_GetDividedBpmAtTime", "contents": "TimeMap_GetDividedBpmAtTime(${1:time})" },
		{ "trigger": "TimeMap_GetTimeSigAtTime", "contents": "TimeMap_GetTimeSigAtTime(${1:proj}, ${2:time}, ${3:timesig_numOut}, ${4:timesig_denomOut}, ${5:tempoOut})" },
		{ "trigger": "TimeMap_QNToTime", "contents": "TimeMap_QNToTime(${1:qn})" },
		{ "trigger": "TimeMap_QNToTime_abs", "contents": "TimeMap_QNToTime_abs(${1:proj}, ${2:qn})" },
		{ "trigger": "TimeMap_timeToQN", "contents": "TimeMap_timeToQN(${1:qn})" },
		{ "trigger": "TimeMap_timeToQN_abs", "contents": "TimeMap_timeToQN_abs(${1:proj}, ${2:tpos})" },
		{ "trigger": "ToggleTrackSendUIMute", "contents": "ToggleTrackSendUIMute(${1:track}, ${2:send_idx})" },
		{ "trigger": "Track_GetPeakHoldDB", "contents": "Track_GetPeakHoldDB(${1:track}, ${2:channel}, ${3:clear})" },
		{ "trigger": "Track_GetPeakInfo", "contents": "Track_GetPeakInfo(${1:track}, ${2:channel})" },
		{ "trigger": "TrackCtl_SetToolTip", "contents": "TrackCtl_SetToolTip(${1:fmt}, ${2:xpos}, ${3:ypos}, ${4:topmost})" },
		{ "trigger": "TrackFX_EndParamEdit", "contents": "TrackFX_EndParamEdit(${1:track}, ${2:fx}, ${3:param})" },
		{ "trigger": "TrackFX_FormatParamValue", "contents": "TrackFX_FormatParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:val}, ${5:#buf})" },
		{ "trigger": "TrackFX_FormatParamValueNormalized", "contents": "TrackFX_FormatParamValueNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value}, ${5:#buf})" },
		{ "trigger": "TrackFX_GetByName", "contents": "TrackFX_GetByName(${1:track}, ${2:fxname}, ${3:instantiate})" },
		{ "trigger": "TrackFX_GetChainVisible", "contents": "TrackFX_GetChainVisible(${1:track})" },
		{ "trigger": "TrackFX_GetCount", "contents": "TrackFX_GetCount(${1:track})" },
		{ "trigger": "TrackFX_GetEnabled", "contents": "TrackFX_GetEnabled(${1:track}, ${2:fx})" },
		{ "trigger": "TrackFX_GetEQ", "contents": "TrackFX_GetEQ(${1:track}, ${2:instantiate})" },
		{ "trigger": "TrackFX_GetEQBandEnabled", "contents": "TrackFX_GetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx})" },
		{ "trigger": "TrackFX_GetEQParam", "contents": "TrackFX_GetEQParam(${1:track}, ${2:fxidx}, ${3:paramidx}, ${4:bandtypeOut}, ${5:bandidxOut}, ${6:paramtypeOut}, ${7:normvalOut})" },
		{ "trigger": "TrackFX_GetFloatingWindow", "contents": "TrackFX_GetFloatingWindow(${1:track}, ${2:index})" },
		{ "trigger": "TrackFX_GetFormattedParamValue", "contents": "TrackFX_GetFormattedParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:#buf})" },
		{ "trigger": "TrackFX_GetFXGUID", "contents": "TrackFX_GetFXGUID(${1:#retguid}, ${2:track}, ${3:fx})" },
		{ "trigger": "TrackFX_GetFXName", "contents": "TrackFX_GetFXName(${1:track}, ${2:fx}, ${3:#buf})" },
		{ "trigger": "TrackFX_GetInstrument", "contents": "TrackFX_GetInstrument(${1:track})" },
		{ "trigger": "TrackFX_GetNumParams", "contents": "TrackFX_GetNumParams(${1:track}, ${2:fx})" },
		{ "trigger": "TrackFX_GetOpen", "contents": "TrackFX_GetOpen(${1:track}, ${2:fx})" },
		{ "trigger": "TrackFX_GetParam", "contents": "TrackFX_GetParam(${1:track}, ${2:fx}, ${3:param}, ${4:minvalOut}, ${5:maxvalOut})" },
		{ "trigger": "TrackFX_GetParameterStepSizes", "contents": "TrackFX_GetParameterStepSizes(${1:track}, ${2:fx}, ${3:param}, ${4:stepOut}, ${5:smallstepOut}, ${6:largestepOut}, ${7:istoggleOut})" },
		{ "trigger": "TrackFX_GetParamEx", "contents": "TrackFX_GetParamEx(${1:track}, ${2:fx}, ${3:param}, ${4:minvalOut}, ${5:maxvalOut}, ${6:midvalOut})" },
		{ "trigger": "TrackFX_GetParamName", "contents": "TrackFX_GetParamName(${1:track}, ${2:fx}, ${3:param}, ${4:#buf})" },
		{ "trigger": "TrackFX_GetParamNormalized", "contents": "TrackFX_GetParamNormalized(${1:track}, ${2:fx}, ${3:param})" },
		{ "trigger": "TrackFX_GetPreset", "contents": "TrackFX_GetPreset(${1:track}, ${2:fx}, ${3:#presetname})" },
		{ "trigger": "TrackFX_GetPresetIndex", "contents": "TrackFX_GetPresetIndex(${1:track}, ${2:fx}, ${3:numberOfPresetsOut})" },
		{ "trigger": "TrackFX_NavigatePresets", "contents": "TrackFX_NavigatePresets(${1:track}, ${2:fx}, ${3:presetmove})" },
		{ "trigger": "TrackFX_SetEnabled", "contents": "TrackFX_SetEnabled(${1:track}, ${2:fx}, ${3:enabled})" },
		{ "trigger": "TrackFX_SetEQBandEnabled", "contents": "TrackFX_SetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:enable})" },
		{ "trigger": "TrackFX_SetEQParam", "contents": "TrackFX_SetEQParam(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:paramtype}, ${6:val}, ${7:isnorm})" },
		{ "trigger": "TrackFX_SetOpen", "contents": "TrackFX_SetOpen(${1:track}, ${2:fx}, ${3:open})" },
		{ "trigger": "TrackFX_SetParam", "contents": "TrackFX_SetParam(${1:track}, ${2:fx}, ${3:param}, ${4:val})" },
		{ "trigger": "TrackFX_SetParamNormalized", "contents": "TrackFX_SetParamNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value})" },
		{ "trigger": "TrackFX_SetPreset", "contents": "TrackFX_SetPreset(${1:track}, ${2:fx}, ${3:presetname})" },
		{ "trigger": "TrackFX_SetPresetByIndex", "contents": "TrackFX_SetPresetByIndex(${1:track}, ${2:fx}, ${3:idx})" },
		{ "trigger": "TrackFX_Show", "contents": "TrackFX_Show(${1:track}, ${2:index}, ${3:showFlag})" },
		{ "trigger": "TrackList_AdjustWindows", "contents": "TrackList_AdjustWindows(${1:isMinor})" },
		{ "trigger": "TrackList_UpdateAllExternalSurfaces", "contents": "TrackList_UpdateAllExternalSurfaces()" },
		{ "trigger": "Undo_BeginBlock", "contents": "Undo_BeginBlock()" },
		{ "trigger": "Undo_BeginBlock2", "contents": "Undo_BeginBlock2(${1:proj})" },
		{ "trigger": "Undo_CanRedo2", "contents": "Undo_CanRedo2(${1:#retval}, ${2:proj})" },
		{ "trigger": "Undo_CanUndo2", "contents": "Undo_CanUndo2(${1:#retval}, ${2:proj})" },
		{ "trigger": "Undo_DoRedo2", "contents": "Undo_DoRedo2(${1:proj})" },
		{ "trigger": "Undo_DoUndo2", "contents": "Undo_DoUndo2(${1:proj})" },
		{ "trigger": "Undo_EndBlock", "contents": "Undo_EndBlock(${1:descchange}, ${2:extraflags})" },
		{ "trigger": "Undo_EndBlock2", "contents": "Undo_EndBlock2(${1:proj}, ${2:descchange}, ${3:extraflags})" },
		{ "trigger": "Undo_OnStateChange", "contents": "Undo_OnStateChange(${1:descchange})" },
		{ "trigger": "Undo_OnStateChange2", "contents": "Undo_OnStateChange2(${1:proj}, ${2:descchange})" },
		{ "trigger": "Undo_OnStateChange_Item", "contents": "Undo_OnStateChange_Item(${1:proj}, ${2:name}, ${3:item})" },
		{ "trigger": "Undo_OnStateChangeEx", "contents": "Undo_OnStateChangeEx(${1:descchange}, ${2:whichStates}, ${3:trackparm})" },
		{ "trigger": "Undo_OnStateChangeEx2", "contents": "Undo_OnStateChangeEx2(${1:proj}, ${2:descchange}, ${3:whichStates}, ${4:trackparm})" },
		{ "trigger": "UpdateArrange", "contents": "UpdateArrange()" },
		{ "trigger": "UpdateItemInProject", "contents": "UpdateItemInProject(${1:item})" },
		{ "trigger": "UpdateTimeline", "contents": "UpdateTimeline()" },
		{ "trigger": "ValidatePtr", "contents": "ValidatePtr(${1:pointer}, ${2:ctypename})" },
		{ "trigger": "ViewPrefs", "contents": "ViewPrefs(${1:page}, ${2:pageByName})" },

		{ "trigger": "abs", "contents": "abs(${1:value})" },
		{ "trigger": "acos", "contents": "acos(${1:value})" },
		{ "trigger": "asin", "contents": "asin(${1:value})" },
		{ "trigger": "atan", "contents": "atan(${1:value})" },
		{ "trigger": "atan2", "contents": "atan2(${1:numerator}, ${2:denominator})" },
		{ "trigger": "atexit", "contents": "atexit(${1:code})" },
		{ "trigger": "ceil", "contents": "ceil(${1:value})" },
		{ "trigger": "convolve_c", "contents": "convolve_c()" },
		{ "trigger": "cos", "contents": "cos(${1:angle})" },
		{ "trigger": "defer", "contents": "defer(${1:code})" },
		{ "trigger": "eval", "contents": "eval(${1:code})" },
		{ "trigger": "exp", "contents": "exp(${1:exponent})" },
		{ "trigger": "fclose", "contents": "fclose(${1:fp})" },
		{ "trigger": "feof", "contents": "feof(${1:fp})" },
		{ "trigger": "fflush", "contents": "fflush(${1:fp})" },
		{ "trigger": "fft", "contents": "fft(${1:buffer}, ${2:size})" },
		{ "trigger": "fft_ipermute", "contents": "fft_ipermute(${1:buffer}, ${2:size})" },
		{ "trigger": "fft_permute", "contents": "fft_permute(${1:buffer}, ${2:size})" },
		{ "trigger": "fgetc", "contents": "fgetc(${1:fp})" },
		{ "trigger": "fgets", "contents": "fgets(${1:fp}, ${2:#str})" },
		{ "trigger": "floor", "contents": "floor(${1:value})" },
		{ "trigger": "fopen", "contents": "fopen(${1:fn}, ${2:mode})" },
		{ "trigger": "fprintf", "contents": "fprintf(${1:fp}, ${2:format}, ${3:variable1})" },
		{ "trigger": "fread", "contents": "fread(${1:fp}, ${2:#str}, ${3:length})" },
		{ "trigger": "freembuf", "contents": "freembuf(${1:address})" },
		{ "trigger": "fseek", "contents": "fseek(${1:fp}, ${2:offset}, ${3:whence})" },
		{ "trigger": "ftell", "contents": "ftell(${1:fp})" },
		{ "trigger": "fwrite", "contents": "fwrite(${1:fp}, ${2:#str}, ${3:len})" },
		{ "trigger": "gfx_arc", "contents": "gfx_arc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2}, ${6:antialiasOptional})" },
		{ "trigger": "gfx_blit", "contents": "gfx_blit(${1:source}, ${2:scale}, ${3:rotation}, ${4:srcxOptional}, ${5:srcyOptional}, ${6:srcwOptional}, ${7:srchOptional}, ${8:destxOptional}, ${9:destyOptional}, ${10:destwOptional}, ${11:desthOptional}, ${12:rotxoffsOptional}, ${13:rotyoffsOptional})" },
		{ "trigger": "gfx_blitext", "contents": "gfx_blitext(${1:source}, ${2:coordinatelist}, ${3:rotation})" },
		{ "trigger": "gfx_blurto", "contents": "gfx_blurto(${1:x}, ${2:y})" },
		{ "trigger": "gfx_circle", "contents": "gfx_circle(${1:x}, ${2:y}, ${3:r}, ${4:fillOptional}, ${5:antialiasOptional})" },
		{ "trigger": "gfx_deltablit", "contents": "gfx_deltablit(${1:srcimg}, ${2:srcx}, ${3:srcy}, ${4:srcw}, ${5:srch}, ${6:destx}, ${7:desty}, ${8:destw}, ${9:desth}, ${10:dsdx}, ${11:dtdx}, ${12:dsdy}, ${13:dtdy}, ${14:dsdxdy}, ${15:dtdxdy})" },
		{ "trigger": "gfx_drawchar", "contents": "gfx_drawchar(${1:char})" },
		{ "trigger": "gfx_drawnumber", "contents": "gfx_drawnumber(${1:n}, ${2:ndigits})" },
		{ "trigger": "gfx_drawstr", "contents": "gfx_drawstr(${1:str})" },
		{ "trigger": "gfx_getchar", "contents": "gfx_getchar(${1:charOptional})" },
		{ "trigger": "gfx_getfont", "contents": "gfx_getfont()" },
		{ "trigger": "gfx_getimgdim", "contents": "gfx_getimgdim(${1:image}, ${2:w}, ${3:h})" },
		{ "trigger": "gfx_getpixel", "contents": "gfx_getpixel(${1:r}, ${2:g}, ${3:b})" },
		{ "trigger": "gfx_gradrect", "contents": "gfx_gradrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:r}, ${6:g}, ${7:b}, ${8:a}, ${9:drdxOptional}, ${10:dgdxOptional}, ${11:dbdxOptional}, ${12:dadxOptional}, ${13:drdyOptional}, ${14:dgdyOptional}, ${15:dbdyOptional}, ${16:dadyOptional})" },
		{ "trigger": "gfx_init", "contents": "gfx_init(${1:name}, ${2:widthOptional}, ${3:heightOptional})" },
		{ "trigger": "gfx_line", "contents": "gfx_line(${1:x}, ${2:y}, ${3:x2}, ${4:y2}, ${5:aaOptional})" },
		{ "trigger": "gfx_lineto", "contents": "gfx_lineto(${1:x}, ${2:y}, ${3:aaOptional})" },
		{ "trigger": "gfx_loadimg", "contents": "gfx_loadimg(${1:image}, ${2:filename})" },
		{ "trigger": "gfx_measurestr", "contents": "gfx_measurestr(${1:str}, ${2:w}, ${3:h})" },
		{ "trigger": "gfx_muladdrect", "contents": "gfx_muladdrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:mul_r}, ${6:mul_g}, ${7:mul_b}, ${8:mul_aOptional}, ${9:add_rOptional}, ${10:add_gOptional}, ${11:add_bOptional}, ${12:add_aOptional})" },
		{ "trigger": "gfx_printf", "contents": "gfx_printf(${1:format}, ${2:variable1})" },
		{ "trigger": "gfx_quit", "contents": "gfx_quit()" },
		{ "trigger": "gfx_rect", "contents": "gfx_rect(${1:x}, ${2:y}, ${3:w}, ${4:h})" },
		{ "trigger": "gfx_rectto", "contents": "gfx_rectto(${1:x}, ${2:y})" },
		{ "trigger": "gfx_roundrect", "contents": "gfx_roundrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:radius}, ${6:antialiasOptional})" },
		{ "trigger": "gfx_setfont", "contents": "gfx_setfont(${1:idx}, ${2:fontfaceOptional}, ${3:szOptional}, ${4:flagsOptional})" },
		{ "trigger": "gfx_setimgdim", "contents": "gfx_setimgdim(${1:image}, ${2:w}, ${3:h})" },
		{ "trigger": "gfx_setpixel", "contents": "gfx_setpixel(${1:r}, ${2:g}, ${3:b})" },
		{ "trigger": "gfx_transformblit", "contents": "gfx_transformblit(${1:srcimg}, ${2:destx}, ${3:desty}, ${4:destw}, ${5:desth}, ${6:div_w}, ${7:div_h}, ${8:table})" },
		{ "trigger": "gfx_update", "contents": "gfx_update()" },
		{ "trigger": "ifft", "contents": "ifft(${1:buffer}, ${2:size})" },
		{ "trigger": "invsqrt", "contents": "invsqrt(${1:value})" },
		{ "trigger": "log", "contents": "log(${1:value})" },
		{ "trigger": "log10", "contents": "log10(${1:value})" },
		{ "trigger": "loop", "contents": "loop(${1:count}, ${2:expression})" },
		{ "trigger": "match", "contents": "match(${1:needle}, ${2:haystack}, ${3:variable1})" },
		{ "trigger": "matchi", "contents": "matchi(${1:needle}, ${2:haystack}, ${3:variable1})" },
		{ "trigger": "max", "contents": "max(${1:value}, ${2:value})" },
		{ "trigger": "memcpy", "contents": "memcpy(${1:dest}, ${2:src}, ${3:length})" },
		{ "trigger": "memset", "contents": "memset(${1:offset}, ${2:value}, ${3:length})" },
		{ "trigger": "min", "contents": "min(${1:value}, ${2:value})" },
		{ "trigger": "pow", "contents": "pow(${1:base}, ${2:exponent})" },
		{ "trigger": "printf", "contents": "printf(${1:format}, ${2:variable1})" },
		{ "trigger": "rand", "contents": "rand(${1:maxOptional})" },
		{ "trigger": "sign", "contents": "sign(${1:value})" },
		{ "trigger": "sin", "contents": "sin(${1:angle})" },
		{ "trigger": "sleep", "contents": "sleep(${1:ms})" },
		{ "trigger": "sprintf", "contents": "sprintf(${1:#dest}, ${2:format}, ${3:variable1})" },
		{ "trigger": "sqr", "contents": "sqr(${1:value})" },
		{ "trigger": "sqrt", "contents": "sqrt(${1:value})" },
		{ "trigger": "stack_exch", "contents": "stack_exch(${1:value})" },
		{ "trigger": "stack_peek", "contents": "stack_peek(${1:index})" },
		{ "trigger": "stack_pop", "contents": "stack_pop(${1:value})" },
		{ "trigger": "stack_push", "contents": "stack_push(${1:value})" },
		{ "trigger": "str_delsub", "contents": "str_delsub(${1:#str}, ${2:pos}, ${3:len})" },
		{ "trigger": "str_getchar", "contents": "str_getchar(${1:str}, ${2:offset}, ${3:typeOptional})" },
		{ "trigger": "str_insert", "contents": "str_insert(${1:#str}, ${2:srcstr}, ${3:pos})" },
		{ "trigger": "str_setchar", "contents": "str_setchar(${1:#str}, ${2:offset}, ${3:val}, ${4:typeOptional})" },
		{ "trigger": "str_setlen", "contents": "str_setlen(${1:#str}, ${2:len})" },
		{ "trigger": "strcat", "contents": "strcat(${1:#str}, ${2:srcstr})" },
		{ "trigger": "strcmp", "contents": "strcmp(${1:str}, ${2:str2})" },
		{ "trigger": "strcpy", "contents": "strcpy(${1:#str}, ${2:srcstr})" },
		{ "trigger": "strcpy_from", "contents": "strcpy_from(${1:#str}, ${2:srcstr}, ${3:offset})" },
		{ "trigger": "strcpy_substr", "contents": "strcpy_substr(${1:#str}, ${2:srcstr}, ${3:offs}, ${4:ml})" },
		{ "trigger": "stricmp", "contents": "stricmp(${1:str}, ${2:str2})" },
		{ "trigger": "strlen", "contents": "strlen(${1:str})" },
		{ "trigger": "strncat", "contents": "strncat(${1:#str}, ${2:srcstr}, ${3:maxlen})" },
		{ "trigger": "strncmp", "contents": "strncmp(${1:str}, ${2:str2}, ${3:maxlen})" },
		{ "trigger": "strncpy", "contents": "strncpy(${1:#str}, ${2:srcstr}, ${3:maxlen})" },
		{ "trigger": "strnicmp", "contents": "strnicmp(${1:str}, ${2:str2}, ${3:maxlen})" },
		{ "trigger": "tan", "contents": "tan(${1:angle})" },
		{ "trigger": "tcp_close", "contents": "tcp_close(${1:connection})" },
		{ "trigger": "tcp_connect", "contents": "tcp_connect(${1:address}, ${2:port}, ${3:blockOptional})" },
		{ "trigger": "tcp_listen", "contents": "tcp_listen(${1:port}, ${2:interfaceOptional}, ${3:#ip_outOptional})" },
		{ "trigger": "tcp_listen_end", "contents": "tcp_listen_end(${1:port})" },
		{ "trigger": "tcp_recv", "contents": "tcp_recv(${1:connection}, ${2:#str}, ${3:maxlenOptional})" },
		{ "trigger": "tcp_send", "contents": "tcp_send(${1:connection}, ${2:str}, ${3:lenOptional})" },
		{ "trigger": "tcp_set_block", "contents": "tcp_set_block(${1:connection}, ${2:block})" },
		{ "trigger": "time", "contents": "time(${1:valOptional})" },
		{ "trigger": "time_precise", "contents": "time_precise(${1:valOptional})" },
		{ "trigger": "while", "contents": "while(${1:expression})" },
	]
}
{
	"scope": "source.EEL",
	"completions":
	[
		{"trigger": "abs", "contents": "abs(${1:value})"},
		{"trigger": "acos", "contents": "acos(${1:value})"},
		{"trigger": "AddMediaItemToTrack", "contents": "AddMediaItemToTrack(${1:tr})"},
		{"trigger": "AddProjectMarker", "contents": "AddProjectMarker(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:\"name\"}, ${6:wantidx})"},
		{"trigger": "AddProjectMarker2", "contents": "AddProjectMarker2(${1:proj}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:\"name\"}, ${6:wantidx}, ${7:color})"},
		{"trigger": "AddRemoveReaScript", "contents": "AddRemoveReaScript(${1:add}, ${2:sectionID}, ${3:\"scriptfn\"}, ${4:commit})"},
		{"trigger": "AddTakeToMediaItem", "contents": "AddTakeToMediaItem(${1:item})"},
		{"trigger": "AddTempoTimeSigMarker", "contents": "AddTempoTimeSigMarker(${1:proj}, ${2:timepos}, ${3:bpm}, ${4:timesig_num}, ${5:timesig_denom}, ${6:lineartempochange})"},
		{"trigger": "adjustZoom", "contents": "adjustZoom(${1:amt}, ${2:forceset}, ${3:doupd}, ${4:centermode})"},
		{"trigger": "AnyTrackSolo", "contents": "AnyTrackSolo(${1:proj})"},
		{"trigger": "APIExists", "contents": "APIExists(${1:\"function_name\"})"},
		{"trigger": "APITest", "contents": "APITest()"},
		{"trigger": "ApplyNudge", "contents": "ApplyNudge(${1:project}, ${2:nudgeflag}, ${3:nudgewhat}, ${4:nudgeunits}, ${5:value}, ${6:reverse}, ${7:copies})"},
		{"trigger": "ArmCommand", "contents": "ArmCommand(${1:cmd}, ${2:\"sectionname\"})"},
		{"trigger": "asin", "contents": "asin(${1:value})"},
		{"trigger": "atan", "contents": "atan(${1:value})"},
		{"trigger": "atan2", "contents": "atan2(${1:numerator}, ${2:denominator})"},
		{"trigger": "atexit", "contents": "atexit(${1:\"code\"})"},
		{"trigger": "Audio_Init", "contents": "Audio_Init()"},
		{"trigger": "Audio_IsPreBuffer", "contents": "Audio_IsPreBuffer()"},
		{"trigger": "Audio_IsRunning", "contents": "Audio_IsRunning()"},
		{"trigger": "Audio_Quit", "contents": "Audio_Quit()"},
		{"trigger": "AudioAccessorStateChanged", "contents": "AudioAccessorStateChanged(${1:accessor})"},
		{"trigger": "AudioAccessorUpdate", "contents": "AudioAccessorUpdate(${1:accessor})"},
		{"trigger": "AudioAccessorValidateState", "contents": "AudioAccessorValidateState(${1:accessor})"},
		{"trigger": "BypassFxAllTracks", "contents": "BypassFxAllTracks(${1:bypass})"},
		{"trigger": "ceil", "contents": "ceil(${1:value})"},
		{"trigger": "ClearAllRecArmed", "contents": "ClearAllRecArmed()"},
		{"trigger": "ClearConsole", "contents": "ClearConsole()"},
		{"trigger": "ClearPeakCache", "contents": "ClearPeakCache()"},
		{"trigger": "ColorFromNative", "contents": "ColorFromNative(${1:col}, ${2:r}, ${3:g}, ${4:b})"},
		{"trigger": "ColorToNative", "contents": "ColorToNative(${1:r}, ${2:g}, ${3:b})"},
		{"trigger": "convolve_c", "contents": "convolve_c(${1:dest}, ${2:src}, ${3:size})"},
		{"trigger": "cos", "contents": "cos(${1:angle})"},
		{"trigger": "CountAutomationItems", "contents": "CountAutomationItems(${1:env})"},
		{"trigger": "CountEnvelopePoints", "contents": "CountEnvelopePoints(${1:envelope})"},
		{"trigger": "CountEnvelopePointsEx", "contents": "CountEnvelopePointsEx(${1:envelope}, ${2:autoitem_idx})"},
		{"trigger": "CountMediaItems", "contents": "CountMediaItems(${1:proj})"},
		{"trigger": "CountProjectMarkers", "contents": "CountProjectMarkers(${1:proj}, ${2:num_markers}, ${3:num_regions})"},
		{"trigger": "CountSelectedMediaItems", "contents": "CountSelectedMediaItems(${1:proj})"},
		{"trigger": "CountSelectedTracks", "contents": "CountSelectedTracks(${1:proj})"},
		{"trigger": "CountSelectedTracks2", "contents": "CountSelectedTracks2(${1:proj}, ${2:wantmaster})"},
		{"trigger": "CountTakeEnvelopes", "contents": "CountTakeEnvelopes(${1:take})"},
		{"trigger": "CountTakes", "contents": "CountTakes(${1:item})"},
		{"trigger": "CountTCPFXParms", "contents": "CountTCPFXParms(${1:project}, ${2:track})"},
		{"trigger": "CountTempoTimeSigMarkers", "contents": "CountTempoTimeSigMarkers(${1:proj})"},
		{"trigger": "CountTrackEnvelopes", "contents": "CountTrackEnvelopes(${1:track})"},
		{"trigger": "CountTrackMediaItems", "contents": "CountTrackMediaItems(${1:track})"},
		{"trigger": "CountTracks", "contents": "CountTracks(${1:proj})"},
		{"trigger": "CreateNewMIDIItemInProj", "contents": "CreateNewMIDIItemInProj(${1:track}, ${2:starttime}, ${3:endtime}, ${4:qnIn})"},
		{"trigger": "CreateTakeAudioAccessor", "contents": "CreateTakeAudioAccessor(${1:take})"},
		{"trigger": "CreateTrackAudioAccessor", "contents": "CreateTrackAudioAccessor(${1:track})"},
		{"trigger": "CreateTrackSend", "contents": "CreateTrackSend(${1:tr}, ${2:desttrIn})"},
		{"trigger": "CSurf_FlushUndo", "contents": "CSurf_FlushUndo(${1:force})"},
		{"trigger": "CSurf_GetTouchState", "contents": "CSurf_GetTouchState(${1:trackid}, ${2:isPan})"},
		{"trigger": "CSurf_GoEnd", "contents": "CSurf_GoEnd()"},
		{"trigger": "CSurf_GoStart", "contents": "CSurf_GoStart()"},
		{"trigger": "CSurf_NumTracks", "contents": "CSurf_NumTracks(${1:mcpView})"},
		{"trigger": "CSurf_OnArrow", "contents": "CSurf_OnArrow(${1:whichdir}, ${2:wantzoom})"},
		{"trigger": "CSurf_OnFwd", "contents": "CSurf_OnFwd(${1:seekplay})"},
		{"trigger": "CSurf_OnFXChange", "contents": "CSurf_OnFXChange(${1:trackid}, ${2:en})"},
		{"trigger": "CSurf_OnInputMonitorChange", "contents": "CSurf_OnInputMonitorChange(${1:trackid}, ${2:monitor})"},
		{"trigger": "CSurf_OnInputMonitorChangeEx", "contents": "CSurf_OnInputMonitorChangeEx(${1:trackid}, ${2:monitor}, ${3:allowgang})"},
		{"trigger": "CSurf_OnMuteChange", "contents": "CSurf_OnMuteChange(${1:trackid}, ${2:mute})"},
		{"trigger": "CSurf_OnMuteChangeEx", "contents": "CSurf_OnMuteChangeEx(${1:trackid}, ${2:mute}, ${3:allowgang})"},
		{"trigger": "CSurf_OnPanChange", "contents": "CSurf_OnPanChange(${1:trackid}, ${2:pan}, ${3:relative})"},
		{"trigger": "CSurf_OnPanChangeEx", "contents": "CSurf_OnPanChangeEx(${1:trackid}, ${2:pan}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "CSurf_OnPause", "contents": "CSurf_OnPause()"},
		{"trigger": "CSurf_OnPlay", "contents": "CSurf_OnPlay()"},
		{"trigger": "CSurf_OnPlayRateChange", "contents": "CSurf_OnPlayRateChange(${1:playrate})"},
		{"trigger": "CSurf_OnRecArmChange", "contents": "CSurf_OnRecArmChange(${1:trackid}, ${2:recarm})"},
		{"trigger": "CSurf_OnRecArmChangeEx", "contents": "CSurf_OnRecArmChangeEx(${1:trackid}, ${2:recarm}, ${3:allowgang})"},
		{"trigger": "CSurf_OnRecord", "contents": "CSurf_OnRecord()"},
		{"trigger": "CSurf_OnRecvPanChange", "contents": "CSurf_OnRecvPanChange(${1:trackid}, ${2:recv_index}, ${3:pan}, ${4:relative})"},
		{"trigger": "CSurf_OnRecvVolumeChange", "contents": "CSurf_OnRecvVolumeChange(${1:trackid}, ${2:recv_index}, ${3:volume}, ${4:relative})"},
		{"trigger": "CSurf_OnRew", "contents": "CSurf_OnRew(${1:seekplay})"},
		{"trigger": "CSurf_OnRewFwd", "contents": "CSurf_OnRewFwd(${1:seekplay}, ${2:dir})"},
		{"trigger": "CSurf_OnScroll", "contents": "CSurf_OnScroll(${1:xdir}, ${2:ydir})"},
		{"trigger": "CSurf_OnSelectedChange", "contents": "CSurf_OnSelectedChange(${1:trackid}, ${2:selected})"},
		{"trigger": "CSurf_OnSendPanChange", "contents": "CSurf_OnSendPanChange(${1:trackid}, ${2:send_index}, ${3:pan}, ${4:relative})"},
		{"trigger": "CSurf_OnSendVolumeChange", "contents": "CSurf_OnSendVolumeChange(${1:trackid}, ${2:send_index}, ${3:volume}, ${4:relative})"},
		{"trigger": "CSurf_OnSoloChange", "contents": "CSurf_OnSoloChange(${1:trackid}, ${2:solo})"},
		{"trigger": "CSurf_OnSoloChangeEx", "contents": "CSurf_OnSoloChangeEx(${1:trackid}, ${2:solo}, ${3:allowgang})"},
		{"trigger": "CSurf_OnStop", "contents": "CSurf_OnStop()"},
		{"trigger": "CSurf_OnTempoChange", "contents": "CSurf_OnTempoChange(${1:bpm})"},
		{"trigger": "CSurf_OnTrackSelection", "contents": "CSurf_OnTrackSelection(${1:trackid})"},
		{"trigger": "CSurf_OnVolumeChange", "contents": "CSurf_OnVolumeChange(${1:trackid}, ${2:volume}, ${3:relative})"},
		{"trigger": "CSurf_OnVolumeChangeEx", "contents": "CSurf_OnVolumeChangeEx(${1:trackid}, ${2:volume}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "CSurf_OnWidthChange", "contents": "CSurf_OnWidthChange(${1:trackid}, ${2:width}, ${3:relative})"},
		{"trigger": "CSurf_OnWidthChangeEx", "contents": "CSurf_OnWidthChangeEx(${1:trackid}, ${2:width}, ${3:relative}, ${4:allowGang})"},
		{"trigger": "CSurf_OnZoom", "contents": "CSurf_OnZoom(${1:xdir}, ${2:ydir})"},
		{"trigger": "CSurf_ResetAllCachedVolPanStates", "contents": "CSurf_ResetAllCachedVolPanStates()"},
		{"trigger": "CSurf_ScrubAmt", "contents": "CSurf_ScrubAmt(${1:amt})"},
		{"trigger": "CSurf_SetAutoMode", "contents": "CSurf_SetAutoMode(${1:mode}, ${2:ignoresurf})"},
		{"trigger": "CSurf_SetPlayState", "contents": "CSurf_SetPlayState(${1:play}, ${2:pause}, ${3:rec}, ${4:ignoresurf})"},
		{"trigger": "CSurf_SetRepeatState", "contents": "CSurf_SetRepeatState(${1:rep}, ${2:ignoresurf})"},
		{"trigger": "CSurf_SetSurfaceMute", "contents": "CSurf_SetSurfaceMute(${1:trackid}, ${2:mute}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetSurfacePan", "contents": "CSurf_SetSurfacePan(${1:trackid}, ${2:pan}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetSurfaceRecArm", "contents": "CSurf_SetSurfaceRecArm(${1:trackid}, ${2:recarm}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetSurfaceSelected", "contents": "CSurf_SetSurfaceSelected(${1:trackid}, ${2:selected}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetSurfaceSolo", "contents": "CSurf_SetSurfaceSolo(${1:trackid}, ${2:solo}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetSurfaceVolume", "contents": "CSurf_SetSurfaceVolume(${1:trackid}, ${2:volume}, ${3:ignoresurf})"},
		{"trigger": "CSurf_SetTrackListChange", "contents": "CSurf_SetTrackListChange()"},
		{"trigger": "CSurf_TrackFromID", "contents": "CSurf_TrackFromID(${1:idx}, ${2:mcpView})"},
		{"trigger": "CSurf_TrackToID", "contents": "CSurf_TrackToID(${1:track}, ${2:mcpView})"},
		{"trigger": "DB2SLIDER", "contents": "DB2SLIDER(${1:x})"},
		{"trigger": "defer", "contents": "defer(${1:\"code\"})"},
		{"trigger": "DeleteEnvelopePointEx", "contents": "DeleteEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx})"},
		{"trigger": "DeleteEnvelopePointRange", "contents": "DeleteEnvelopePointRange(${1:envelope}, ${2:time_start}, ${3:time_end})"},
		{"trigger": "DeleteEnvelopePointRangeEx", "contents": "DeleteEnvelopePointRangeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time_start}, ${4:time_end})"},
		{"trigger": "DeleteExtState", "contents": "DeleteExtState(${1:\"section\"}, ${2:\"key\"}, ${3:persist})"},
		{"trigger": "DeleteProjectMarker", "contents": "DeleteProjectMarker(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn})"},
		{"trigger": "DeleteProjectMarkerByIndex", "contents": "DeleteProjectMarkerByIndex(${1:proj}, ${2:markrgnidx})"},
		{"trigger": "DeleteTakeStretchMarkers", "contents": "DeleteTakeStretchMarkers(${1:take}, ${2:idx}, ${3:countIn})"},
		{"trigger": "DeleteTempoTimeSigMarker", "contents": "DeleteTempoTimeSigMarker(${1:project}, ${2:markerindex})"},
		{"trigger": "DeleteTrack", "contents": "DeleteTrack(${1:tr})"},
		{"trigger": "DeleteTrackMediaItem", "contents": "DeleteTrackMediaItem(${1:tr}, ${2:it})"},
		{"trigger": "DestroyAudioAccessor", "contents": "DestroyAudioAccessor(${1:accessor})"},
		{"trigger": "Dock_UpdateDockID", "contents": "Dock_UpdateDockID(${1:\"ident_str\"}, ${2:whichDock})"},
		{"trigger": "DockIsChildOfDock", "contents": "DockIsChildOfDock(${1:hwnd}, ${2:isFloatingDocker})"},
		{"trigger": "DockWindowActivate", "contents": "DockWindowActivate(${1:hwnd})"},
		{"trigger": "DockWindowAdd", "contents": "DockWindowAdd(${1:hwnd}, ${2:\"name\"}, ${3:pos}, ${4:allowShow})"},
		{"trigger": "DockWindowAddEx", "contents": "DockWindowAddEx(${1:hwnd}, ${2:\"name\"}, ${3:\"identstr\"}, ${4:allowShow})"},
		{"trigger": "DockWindowRefresh", "contents": "DockWindowRefresh()"},
		{"trigger": "DockWindowRefreshForHWND", "contents": "DockWindowRefreshForHWND(${1:hwnd})"},
		{"trigger": "DockWindowRemove", "contents": "DockWindowRemove(${1:hwnd})"},
		{"trigger": "EditTempoTimeSigMarker", "contents": "EditTempoTimeSigMarker(${1:project}, ${2:markerindex})"},
		{"trigger": "EnsureNotCompletelyOffscreen", "contents": "EnsureNotCompletelyOffscreen(${1:r.left}, ${2:r.top}, ${3:r.right}, ${4:r.bot})"},
		{"trigger": "EnumerateFiles", "contents": "EnumerateFiles(${1:#retval}, ${2:\"path\"}, ${3:fileindex})"},
		{"trigger": "EnumerateSubdirectories", "contents": "EnumerateSubdirectories(${1:#retval}, ${2:\"path\"}, ${3:subdirindex})"},
		{"trigger": "EnumPitchShiftModes", "contents": "EnumPitchShiftModes(${1:mode}, ${2:#str})"},
		{"trigger": "EnumPitchShiftSubModes", "contents": "EnumPitchShiftSubModes(${1:#retval}, ${2:mode}, ${3:submode})"},
		{"trigger": "EnumProjectMarkers", "contents": "EnumProjectMarkers(${1:idx}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:#name}, ${6:markrgnindexnumber})"},
		{"trigger": "EnumProjectMarkers2", "contents": "EnumProjectMarkers2(${1:proj}, ${2:idx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:#name}, ${7:markrgnindexnumber})"},
		{"trigger": "EnumProjectMarkers3", "contents": "EnumProjectMarkers3(${1:proj}, ${2:idx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:#name}, ${7:markrgnindexnumber}, ${8:color})"},
		{"trigger": "EnumProjects", "contents": "EnumProjects(${1:idx}, ${2:projfn})"},
		{"trigger": "EnumProjExtState", "contents": "EnumProjExtState(${1:proj}, ${2:\"extname\"}, ${3:idx}, ${4:key}, ${5:val})"},
		{"trigger": "EnumRegionRenderMatrix", "contents": "EnumRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:rendertrack})"},
		{"trigger": "EnumTrackMIDIProgramNames", "contents": "EnumTrackMIDIProgramNames(${1:track}, ${2:programNumber}, ${3:#programName})"},
		{"trigger": "EnumTrackMIDIProgramNamesEx", "contents": "EnumTrackMIDIProgramNamesEx(${1:proj}, ${2:track}, ${3:programNumber}, ${4:#programName})"},
		{"trigger": "Envelope_Evaluate", "contents": "Envelope_Evaluate(${1:envelope}, ${2:time}, ${3:samplerate}, ${4:samplesRequested}, ${5:value}, ${6:dVdS}, ${7:ddVdS}, ${8:dddVdS})"},
		{"trigger": "Envelope_FormatValue", "contents": "Envelope_FormatValue(${1:env}, ${2:value}, ${3:#buf})"},
		{"trigger": "Envelope_GetParentTake", "contents": "Envelope_GetParentTake(${1:env}, ${2:index}, ${3:index2})"},
		{"trigger": "Envelope_GetParentTrack", "contents": "Envelope_GetParentTrack(${1:env}, ${2:index}, ${3:index2})"},
		{"trigger": "Envelope_SortPoints", "contents": "Envelope_SortPoints(${1:envelope})"},
		{"trigger": "Envelope_SortPointsEx", "contents": "Envelope_SortPointsEx(${1:envelope}, ${2:autoitem_idx})"},
		{"trigger": "eval", "contents": "eval(${1:\"code\"})"},
		{"trigger": "ExecProcess", "contents": "ExecProcess(${1:#retval}, ${2:\"cmdline\"}, ${3:timeoutmsec})"},
		{"trigger": "exp", "contents": "exp(${1:exponent})"},
		{"trigger": "BR_EnvAlloc", "contents": "extension_api(\"\"BR_EnvAlloc\"\", ${1:envelope}, ${2:takeEnvelopesUseProjectTime})"},
		{"trigger": "BR_EnvCountPoints", "contents": "extension_api(\"\"BR_EnvCountPoints\"\", ${1:envelope})"},
		{"trigger": "BR_EnvDeletePoint", "contents": "extension_api(\"\"BR_EnvDeletePoint\"\", ${1:envelope}, ${2:id})"},
		{"trigger": "BR_EnvFind", "contents": "extension_api(\"\"BR_EnvFind\"\", ${1:envelope}, ${2:position}, ${3:delta})"},
		{"trigger": "BR_EnvFindNext", "contents": "extension_api(\"\"BR_EnvFindNext\"\", ${1:envelope}, ${2:position})"},
		{"trigger": "BR_EnvFindPrevious", "contents": "extension_api(\"\"BR_EnvFindPrevious\"\", ${1:envelope}, ${2:position})"},
		{"trigger": "BR_EnvFree", "contents": "extension_api(\"\"BR_EnvFree\"\", ${1:envelope}, ${2:commit})"},
		{"trigger": "BR_EnvGetParentTake", "contents": "extension_api(\"\"BR_EnvGetParentTake\"\", ${1:envelope})"},
		{"trigger": "BR_EnvGetParentTrack", "contents": "extension_api(\"\"BR_EnvGetParentTrack\"\", ${1:envelope})"},
		{"trigger": "BR_EnvGetPoint", "contents": "extension_api(\"\"BR_EnvGetPoint\"\", ${1:envelope}, ${2:id}, ${3:position}, ${4:value}, ${5:shape}, ${6:selected}, ${7:bezier})"},
		{"trigger": "BR_EnvGetProperties", "contents": "extension_api(\"\"BR_EnvGetProperties\"\", ${1:envelope}, ${2:active}, ${3:visible}, ${4:armed}, ${5:inLane}, ${6:laneHeight}, ${7:defaultShape}, ${8:minValue}, ${9:maxValue}, ${10:centerValue}, ${11:type}, ${12:faderScaling})"},
		{"trigger": "BR_EnvSetPoint", "contents": "extension_api(\"\"BR_EnvSetPoint\"\", ${1:envelope}, ${2:id}, ${3:position}, ${4:value}, ${5:shape}, ${6:selected}, ${7:bezier})"},
		{"trigger": "BR_EnvSetProperties", "contents": "extension_api(\"\"BR_EnvSetProperties\"\", ${1:envelope}, ${2:active}, ${3:visible}, ${4:armed}, ${5:inLane}, ${6:laneHeight}, ${7:defaultShape}, ${8:faderScaling})"},
		{"trigger": "BR_EnvSortPoints", "contents": "extension_api(\"\"BR_EnvSortPoints\"\", ${1:envelope})"},
		{"trigger": "BR_EnvValueAtPos", "contents": "extension_api(\"\"BR_EnvValueAtPos\"\", ${1:envelope}, ${2:position})"},
		{"trigger": "BR_GetArrangeView", "contents": "extension_api(\"\"BR_GetArrangeView\"\", ${1:proj}, ${2:startTime}, ${3:endTime})"},
		{"trigger": "BR_GetClosestGridDivision", "contents": "extension_api(\"\"BR_GetClosestGridDivision\"\", ${1:position})"},
		{"trigger": "BR_GetCurrentTheme", "contents": "extension_api(\"\"BR_GetCurrentTheme\"\", ${1:#themePath}, ${2:#themeName})"},
		{"trigger": "BR_GetMediaItemByGUID", "contents": "extension_api(\"\"BR_GetMediaItemByGUID\"\", ${1:proj}, ${2:\"guidStringIn\"})"},
		{"trigger": "BR_GetMediaItemGUID", "contents": "extension_api(\"\"BR_GetMediaItemGUID\"\", ${1:item}, ${2:#guidString})"},
		{"trigger": "BR_GetMediaItemImageResource", "contents": "extension_api(\"\"BR_GetMediaItemImageResource\"\", ${1:item}, ${2:#image}, ${3:imageFlags})"},
		{"trigger": "BR_GetMediaItemTakeGUID", "contents": "extension_api(\"\"BR_GetMediaItemTakeGUID\"\", ${1:take}, ${2:#guidString})"},
		{"trigger": "BR_GetMediaSourceProperties", "contents": "extension_api(\"\"BR_GetMediaSourceProperties\"\", ${1:take}, ${2:section}, ${3:start}, ${4:length}, ${5:fade}, ${6:reverse})"},
		{"trigger": "BR_GetMediaTrackByGUID", "contents": "extension_api(\"\"BR_GetMediaTrackByGUID\"\", ${1:proj}, ${2:\"guidStringIn\"})"},
		{"trigger": "BR_GetMediaTrackFreezeCount", "contents": "extension_api(\"\"BR_GetMediaTrackFreezeCount\"\", ${1:track})"},
		{"trigger": "BR_GetMediaTrackGUID", "contents": "extension_api(\"\"BR_GetMediaTrackGUID\"\", ${1:track}, ${2:#guidString})"},
		{"trigger": "BR_GetMediaTrackLayouts", "contents": "extension_api(\"\"BR_GetMediaTrackLayouts\"\", ${1:track}, ${2:#mcpLayoutName}, ${3:#tcpLayoutName})"},
		{"trigger": "BR_GetMediaTrackSendInfo_Envelope", "contents": "extension_api(\"\"BR_GetMediaTrackSendInfo_Envelope\"\", ${1:track}, ${2:category}, ${3:sendidx}, ${4:envelopeType})"},
		{"trigger": "BR_GetMediaTrackSendInfo_Track", "contents": "extension_api(\"\"BR_GetMediaTrackSendInfo_Track\"\", ${1:track}, ${2:category}, ${3:sendidx}, ${4:trackType})"},
		{"trigger": "BR_GetMidiSourceLenPPQ", "contents": "extension_api(\"\"BR_GetMidiSourceLenPPQ\"\", ${1:take})"},
		{"trigger": "BR_GetMidiTakePoolGUID", "contents": "extension_api(\"\"BR_GetMidiTakePoolGUID\"\", ${1:take}, ${2:#guidString})"},
		{"trigger": "BR_GetMidiTakeTempoInfo", "contents": "extension_api(\"\"BR_GetMidiTakeTempoInfo\"\", ${1:take}, ${2:ignoreProjTempo}, ${3:bpm}, ${4:num}, ${5:den})"},
		{"trigger": "BR_GetMouseCursorContext", "contents": "extension_api(\"\"BR_GetMouseCursorContext\"\", ${1:#window}, ${2:#segment}, ${3:#details})"},
		{"trigger": "BR_GetMouseCursorContext_Envelope", "contents": "extension_api(\"\"BR_GetMouseCursorContext_Envelope\"\", ${1:takeEnvelope})"},
		{"trigger": "BR_GetMouseCursorContext_Item", "contents": "extension_api(\"\"BR_GetMouseCursorContext_Item\"\")"},
		{"trigger": "BR_GetMouseCursorContext_MIDI", "contents": "extension_api(\"\"BR_GetMouseCursorContext_MIDI\"\", ${1:inlineEditor}, ${2:noteRow}, ${3:ccLane}, ${4:ccLaneVal}, ${5:ccLaneId})"},
		{"trigger": "BR_GetMouseCursorContext_Position", "contents": "extension_api(\"\"BR_GetMouseCursorContext_Position\"\")"},
		{"trigger": "BR_GetMouseCursorContext_StretchMarker", "contents": "extension_api(\"\"BR_GetMouseCursorContext_StretchMarker\"\")"},
		{"trigger": "BR_GetMouseCursorContext_Take", "contents": "extension_api(\"\"BR_GetMouseCursorContext_Take\"\")"},
		{"trigger": "BR_GetMouseCursorContext_Track", "contents": "extension_api(\"\"BR_GetMouseCursorContext_Track\"\")"},
		{"trigger": "BR_GetNextGridDivision", "contents": "extension_api(\"\"BR_GetNextGridDivision\"\", ${1:position})"},
		{"trigger": "BR_GetPrevGridDivision", "contents": "extension_api(\"\"BR_GetPrevGridDivision\"\", ${1:position})"},
		{"trigger": "BR_GetSetTrackSendInfo", "contents": "extension_api(\"\"BR_GetSetTrackSendInfo\"\", ${1:track}, ${2:category}, ${3:sendidx}, ${4:\"parmname\"}, ${5:setNewValue}, ${6:newValue})"},
		{"trigger": "BR_GetTakeFXCount", "contents": "extension_api(\"\"BR_GetTakeFXCount\"\", ${1:take})"},
		{"trigger": "BR_IsMidiOpenInInlineEditor", "contents": "extension_api(\"\"BR_IsMidiOpenInInlineEditor\"\", ${1:take})"},
		{"trigger": "BR_IsTakeMidi", "contents": "extension_api(\"\"BR_IsTakeMidi\"\", ${1:take}, ${2:inProjectMidi})"},
		{"trigger": "BR_ItemAtMouseCursor", "contents": "extension_api(\"\"BR_ItemAtMouseCursor\"\", ${1:position})"},
		{"trigger": "BR_MIDI_CCLaneRemove", "contents": "extension_api(\"\"BR_MIDI_CCLaneRemove\"\", ${1:midiEditor}, ${2:laneId})"},
		{"trigger": "BR_MIDI_CCLaneReplace", "contents": "extension_api(\"\"BR_MIDI_CCLaneReplace\"\", ${1:midiEditor}, ${2:laneId}, ${3:newCC})"},
		{"trigger": "BR_PositionAtMouseCursor", "contents": "extension_api(\"\"BR_PositionAtMouseCursor\"\", ${1:checkRuler})"},
		{"trigger": "BR_SetArrangeView", "contents": "extension_api(\"\"BR_SetArrangeView\"\", ${1:proj}, ${2:startTime}, ${3:endTime})"},
		{"trigger": "BR_SetItemEdges", "contents": "extension_api(\"\"BR_SetItemEdges\"\", ${1:item}, ${2:startTime}, ${3:endTime})"},
		{"trigger": "BR_SetMediaItemImageResource", "contents": "extension_api(\"\"BR_SetMediaItemImageResource\"\", ${1:item}, ${2:\"imageIn\"}, ${3:imageFlags})"},
		{"trigger": "BR_SetMediaSourceProperties", "contents": "extension_api(\"\"BR_SetMediaSourceProperties\"\", ${1:take}, ${2:section}, ${3:start}, ${4:length}, ${5:fade}, ${6:reverse})"},
		{"trigger": "BR_SetMediaTrackLayouts", "contents": "extension_api(\"\"BR_SetMediaTrackLayouts\"\", ${1:track}, ${2:\"mcpLayoutNameIn\"}, ${3:\"tcpLayoutNameIn\"})"},
		{"trigger": "BR_SetMidiTakeTempoInfo", "contents": "extension_api(\"\"BR_SetMidiTakeTempoInfo\"\", ${1:take}, ${2:ignoreProjTempo}, ${3:bpm}, ${4:num}, ${5:den})"},
		{"trigger": "BR_SetTakeSourceFromFile", "contents": "extension_api(\"\"BR_SetTakeSourceFromFile\"\", ${1:take}, ${2:\"filenameIn\"}, ${3:inProjectData})"},
		{"trigger": "BR_SetTakeSourceFromFile2", "contents": "extension_api(\"\"BR_SetTakeSourceFromFile2\"\", ${1:take}, ${2:\"filenameIn\"}, ${3:inProjectData}, ${4:keepSourceProperties})"},
		{"trigger": "BR_TakeAtMouseCursor", "contents": "extension_api(\"\"BR_TakeAtMouseCursor\"\", ${1:position})"},
		{"trigger": "BR_TrackAtMouseCursor", "contents": "extension_api(\"\"BR_TrackAtMouseCursor\"\", ${1:context}, ${2:position})"},
		{"trigger": "BR_TrackFX_GetFXModuleName", "contents": "extension_api(\"\"BR_TrackFX_GetFXModuleName\"\", ${1:track}, ${2:fx}, ${3:name}, ${4:name})"},
		{"trigger": "BR_Win32_CB_FindString", "contents": "extension_api(\"\"BR_Win32_CB_FindString\"\", ${1:comboBoxHwnd}, ${2:startId}, ${3:\"string\"})"},
		{"trigger": "BR_Win32_CB_FindStringExact", "contents": "extension_api(\"\"BR_Win32_CB_FindStringExact\"\", ${1:comboBoxHwnd}, ${2:startId}, ${3:\"string\"})"},
		{"trigger": "BR_Win32_ClientToScreen", "contents": "extension_api(\"\"BR_Win32_ClientToScreen\"\", ${1:hwnd}, ${2:xIn}, ${3:yIn}, ${4:x}, ${5:y})"},
		{"trigger": "BR_Win32_FindWindowEx", "contents": "extension_api(\"\"BR_Win32_FindWindowEx\"\", ${1:\"hwndParent\"}, ${2:\"hwndChildAfter\"}, ${3:\"className\"}, ${4:\"windowName\"}, ${5:searchClass}, ${6:searchName})"},
		{"trigger": "BR_Win32_GET_X_LPARAM", "contents": "extension_api(\"\"BR_Win32_GET_X_LPARAM\"\", ${1:lParam})"},
		{"trigger": "BR_Win32_GET_Y_LPARAM", "contents": "extension_api(\"\"BR_Win32_GET_Y_LPARAM\"\", ${1:lParam})"},
		{"trigger": "BR_Win32_GetConstant", "contents": "extension_api(\"\"BR_Win32_GetConstant\"\", ${1:\"constantName\"})"},
		{"trigger": "BR_Win32_GetCursorPos", "contents": "extension_api(\"\"BR_Win32_GetCursorPos\"\", ${1:x}, ${2:y})"},
		{"trigger": "BR_Win32_GetFocus", "contents": "extension_api(\"\"BR_Win32_GetFocus\"\")"},
		{"trigger": "BR_Win32_GetForegroundWindow", "contents": "extension_api(\"\"BR_Win32_GetForegroundWindow\"\")"},
		{"trigger": "BR_Win32_GetMainHwnd", "contents": "extension_api(\"\"BR_Win32_GetMainHwnd\"\")"},
		{"trigger": "BR_Win32_GetMixerHwnd", "contents": "extension_api(\"\"BR_Win32_GetMixerHwnd\"\", ${1:isDocked})"},
		{"trigger": "BR_Win32_GetMonitorRectFromRect", "contents": "extension_api(\"\"BR_Win32_GetMonitorRectFromRect\"\", ${1:workingAreaOnly}, ${2:leftIn}, ${3:topIn}, ${4:rightIn}, ${5:bottomIn}, ${6:left}, ${7:top}, ${8:right}, ${9:bottom})"},
		{"trigger": "BR_Win32_GetParent", "contents": "extension_api(\"\"BR_Win32_GetParent\"\", ${1:hwnd})"},
		{"trigger": "BR_Win32_GetPrivateProfileString", "contents": "extension_api(\"\"BR_Win32_GetPrivateProfileString\"\", ${1:\"sectionName\"}, ${2:\"keyName\"}, ${3:\"defaultString\"}, ${4:\"filePath\"}, ${5:#string})"},
		{"trigger": "BR_Win32_GetWindow", "contents": "extension_api(\"\"BR_Win32_GetWindow\"\", ${1:hwnd}, ${2:cmd})"},
		{"trigger": "BR_Win32_GetWindowLong", "contents": "extension_api(\"\"BR_Win32_GetWindowLong\"\", ${1:hwnd}, ${2:index})"},
		{"trigger": "BR_Win32_GetWindowRect", "contents": "extension_api(\"\"BR_Win32_GetWindowRect\"\", ${1:hwnd}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "BR_Win32_GetWindowText", "contents": "extension_api(\"\"BR_Win32_GetWindowText\"\", ${1:hwnd}, ${2:#text})"},
		{"trigger": "BR_Win32_HIBYTE", "contents": "extension_api(\"\"BR_Win32_HIBYTE\"\", ${1:value})"},
		{"trigger": "BR_Win32_HIWORD", "contents": "extension_api(\"\"BR_Win32_HIWORD\"\", ${1:value})"},
		{"trigger": "BR_Win32_HwndToString", "contents": "extension_api(\"\"BR_Win32_HwndToString\"\", ${1:hwnd}, ${2:#string})"},
		{"trigger": "BR_Win32_IsWindow", "contents": "extension_api(\"\"BR_Win32_IsWindow\"\", ${1:hwnd})"},
		{"trigger": "BR_Win32_IsWindowVisible", "contents": "extension_api(\"\"BR_Win32_IsWindowVisible\"\", ${1:hwnd})"},
		{"trigger": "BR_Win32_LOBYTE", "contents": "extension_api(\"\"BR_Win32_LOBYTE\"\", ${1:value})"},
		{"trigger": "BR_Win32_LOWORD", "contents": "extension_api(\"\"BR_Win32_LOWORD\"\", ${1:value})"},
		{"trigger": "BR_Win32_MAKELONG", "contents": "extension_api(\"\"BR_Win32_MAKELONG\"\", ${1:low}, ${2:high})"},
		{"trigger": "BR_Win32_MAKELPARAM", "contents": "extension_api(\"\"BR_Win32_MAKELPARAM\"\", ${1:low}, ${2:high})"},
		{"trigger": "BR_Win32_MAKELRESULT", "contents": "extension_api(\"\"BR_Win32_MAKELRESULT\"\", ${1:low}, ${2:high})"},
		{"trigger": "BR_Win32_MAKEWORD", "contents": "extension_api(\"\"BR_Win32_MAKEWORD\"\", ${1:low}, ${2:high})"},
		{"trigger": "BR_Win32_MAKEWPARAM", "contents": "extension_api(\"\"BR_Win32_MAKEWPARAM\"\", ${1:low}, ${2:high})"},
		{"trigger": "BR_Win32_MIDIEditor_GetActive", "contents": "extension_api(\"\"BR_Win32_MIDIEditor_GetActive\"\")"},
		{"trigger": "BR_Win32_ScreenToClient", "contents": "extension_api(\"\"BR_Win32_ScreenToClient\"\", ${1:hwnd}, ${2:xIn}, ${3:yIn}, ${4:x}, ${5:y})"},
		{"trigger": "BR_Win32_SendMessage", "contents": "extension_api(\"\"BR_Win32_SendMessage\"\", ${1:hwnd}, ${2:msg}, ${3:lParam}, ${4:wParam})"},
		{"trigger": "BR_Win32_SetFocus", "contents": "extension_api(\"\"BR_Win32_SetFocus\"\", ${1:hwnd})"},
		{"trigger": "BR_Win32_SetForegroundWindow", "contents": "extension_api(\"\"BR_Win32_SetForegroundWindow\"\", ${1:hwnd})"},
		{"trigger": "BR_Win32_SetWindowLong", "contents": "extension_api(\"\"BR_Win32_SetWindowLong\"\", ${1:hwnd}, ${2:index}, ${3:newLong})"},
		{"trigger": "BR_Win32_SetWindowPos", "contents": "extension_api(\"\"BR_Win32_SetWindowPos\"\", ${1:hwnd}, ${2:\"hwndInsertAfter\"}, ${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:flags})"},
		{"trigger": "BR_Win32_ShellExecute", "contents": "extension_api(\"\"BR_Win32_ShellExecute\"\", ${1:\"operation\"}, ${2:\"file\"}, ${3:\"parameters\"}, ${4:\"directory\"}, ${5:showFlags})"},
		{"trigger": "BR_Win32_ShowWindow", "contents": "extension_api(\"\"BR_Win32_ShowWindow\"\", ${1:hwnd}, ${2:cmdShow})"},
		{"trigger": "BR_Win32_StringToHwnd", "contents": "extension_api(\"\"BR_Win32_StringToHwnd\"\", ${1:\"string\"})"},
		{"trigger": "BR_Win32_WindowFromPoint", "contents": "extension_api(\"\"BR_Win32_WindowFromPoint\"\", ${1:x}, ${2:y})"},
		{"trigger": "BR_Win32_WritePrivateProfileString", "contents": "extension_api(\"\"BR_Win32_WritePrivateProfileString\"\", ${1:\"sectionName\"}, ${2:\"keyName\"}, ${3:\"value\"}, ${4:\"filePath\"})"},
		{"trigger": "CF_EnumMediaSourceCues", "contents": "extension_api(\"\"CF_EnumMediaSourceCues\"\", ${1:src}, ${2:index}, ${3:time}, ${4:endTime}, ${5:isRegion}, ${6:#name})"},
		{"trigger": "CF_EnumSelectedFX", "contents": "extension_api(\"\"CF_EnumSelectedFX\"\", ${1:hwnd}, ${2:index})"},
		{"trigger": "CF_EnumerateActions", "contents": "extension_api(\"\"CF_EnumerateActions\"\", ${1:section}, ${2:index}, ${3:#name})"},
		{"trigger": "CF_ExportMediaSource", "contents": "extension_api(\"\"CF_ExportMediaSource\"\", ${1:src}, ${2:\"fn\"})"},
		{"trigger": "CF_GetClipboard", "contents": "extension_api(\"\"CF_GetClipboard\"\", ${1:#buf})"},
		{"trigger": "CF_GetClipboardBig", "contents": "extension_api(\"\"CF_GetClipboardBig\"\", ${1:#retval}, ${2:output})"},
		{"trigger": "CF_GetCommandText", "contents": "extension_api(\"\"CF_GetCommandText\"\", ${1:#retval}, ${2:section}, ${3:command})"},
		{"trigger": "CF_GetFocusedFXChain", "contents": "extension_api(\"\"CF_GetFocusedFXChain\"\")"},
		{"trigger": "CF_GetMediaSourceBitDepth", "contents": "extension_api(\"\"CF_GetMediaSourceBitDepth\"\", ${1:src})"},
		{"trigger": "CF_GetMediaSourceMetadata", "contents": "extension_api(\"\"CF_GetMediaSourceMetadata\"\", ${1:src}, ${2:\"name\"}, ${3:#out})"},
		{"trigger": "CF_GetMediaSourceOnline", "contents": "extension_api(\"\"CF_GetMediaSourceOnline\"\", ${1:src})"},
		{"trigger": "CF_GetMediaSourceRPP", "contents": "extension_api(\"\"CF_GetMediaSourceRPP\"\", ${1:src}, ${2:#fn})"},
		{"trigger": "CF_GetSWSVersion", "contents": "extension_api(\"\"CF_GetSWSVersion\"\", ${1:#buf})"},
		{"trigger": "CF_GetTakeFXChain", "contents": "extension_api(\"\"CF_GetTakeFXChain\"\", ${1:take})"},
		{"trigger": "CF_GetTrackFXChain", "contents": "extension_api(\"\"CF_GetTrackFXChain\"\", ${1:track})"},
		{"trigger": "CF_LocateInExplorer", "contents": "extension_api(\"\"CF_LocateInExplorer\"\", ${1:\"file\"})"},
		{"trigger": "CF_SetClipboard", "contents": "extension_api(\"\"CF_SetClipboard\"\", ${1:\"str\"})"},
		{"trigger": "CF_SetMediaSourceOnline", "contents": "extension_api(\"\"CF_SetMediaSourceOnline\"\", ${1:src}, ${2:set})"},
		{"trigger": "CF_ShellExecute", "contents": "extension_api(\"\"CF_ShellExecute\"\", ${1:\"file\"})"},
		{"trigger": "FNG_AddMidiNote", "contents": "extension_api(\"\"FNG_AddMidiNote\"\", ${1:midiTake})"},
		{"trigger": "FNG_AllocMidiTake", "contents": "extension_api(\"\"FNG_AllocMidiTake\"\", ${1:take})"},
		{"trigger": "FNG_CountMidiNotes", "contents": "extension_api(\"\"FNG_CountMidiNotes\"\", ${1:midiTake})"},
		{"trigger": "FNG_FreeMidiTake", "contents": "extension_api(\"\"FNG_FreeMidiTake\"\", ${1:midiTake})"},
		{"trigger": "FNG_GetMidiNote", "contents": "extension_api(\"\"FNG_GetMidiNote\"\", ${1:midiTake}, ${2:index})"},
		{"trigger": "FNG_GetMidiNoteIntProperty", "contents": "extension_api(\"\"FNG_GetMidiNoteIntProperty\"\", ${1:midiNote}, ${2:\"property\"})"},
		{"trigger": "FNG_SetMidiNoteIntProperty", "contents": "extension_api(\"\"FNG_SetMidiNoteIntProperty\"\", ${1:midiNote}, ${2:\"property\"}, ${3:value})"},
		{"trigger": "JS_Byte", "contents": "extension_api(\"\"JS_Byte\"\", ${1:pointer}, ${2:offset}, ${3:byte})"},
		{"trigger": "JS_Composite", "contents": "extension_api(\"\"JS_Composite\"\", ${1:windowHWND}, ${2:srcx}, ${3:srcy}, ${4:srcw}, ${5:srch}, ${6:sysBitmap}, ${7:dstx}, ${8:dsty}, ${9:dstw}, ${10:dsth})"},
		{"trigger": "JS_Composite_ListBitmaps", "contents": "extension_api(\"\"JS_Composite_ListBitmaps\"\", ${1:windowHWND}, ${2:#list})"},
		{"trigger": "JS_Composite_Unlink", "contents": "extension_api(\"\"JS_Composite_Unlink\"\", ${1:windowHWND}, ${2:bitmap})"},
		{"trigger": "JS_Dialog_BrowseForFolder", "contents": "extension_api(\"\"JS_Dialog_BrowseForFolder\"\", ${1:\"caption\"}, ${2:\"initialFolder\"}, ${3:#folder})"},
		{"trigger": "JS_Dialog_BrowseForOpenFiles", "contents": "extension_api(\"\"JS_Dialog_BrowseForOpenFiles\"\", ${1:\"windowTitle\"}, ${2:\"initialFolder\"}, ${3:\"initialFile\"}, ${4:\"extensionList\"}, ${5:allowMultiple}, ${6:#fileNames})"},
		{"trigger": "JS_Dialog_BrowseForSaveFile", "contents": "extension_api(\"\"JS_Dialog_BrowseForSaveFile\"\", ${1:\"windowTitle\"}, ${2:\"initialFolder\"}, ${3:\"initialFile\"}, ${4:\"extensionList\"}, ${5:#fileName})"},
		{"trigger": "JS_Double", "contents": "extension_api(\"\"JS_Double\"\", ${1:pointer}, ${2:offset}, ${3:double})"},
		{"trigger": "JS_GDI_Blit", "contents": "extension_api(\"\"JS_GDI_Blit\"\", ${1:destHDC}, ${2:dstx}, ${3:dsty}, ${4:sourceHDC}, ${5:srcx}, ${6:srxy}, ${7:width}, ${8:height}, ${9:\"mode\"})"},
		{"trigger": "JS_GDI_CreateFillBrush", "contents": "extension_api(\"\"JS_GDI_CreateFillBrush\"\", ${1:color})"},
		{"trigger": "JS_GDI_CreateFont", "contents": "extension_api(\"\"JS_GDI_CreateFont\"\", ${1:height}, ${2:weight}, ${3:angle}, ${4:italic}, ${5:underline}, ${6:strike}, ${7:\"fontName\"})"},
		{"trigger": "JS_GDI_CreatePen", "contents": "extension_api(\"\"JS_GDI_CreatePen\"\", ${1:width}, ${2:color})"},
		{"trigger": "JS_GDI_DeleteObject", "contents": "extension_api(\"\"JS_GDI_DeleteObject\"\", ${1:GDIObject})"},
		{"trigger": "JS_GDI_DrawText", "contents": "extension_api(\"\"JS_GDI_DrawText\"\", ${1:deviceHDC}, ${2:\"text\"}, ${3:len}, ${4:left}, ${5:top}, ${6:right}, ${7:bottom}, ${8:\"align)\"})"},
		{"trigger": "JS_GDI_FillEllipse", "contents": "extension_api(\"\"JS_GDI_FillEllipse\"\", ${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "JS_GDI_FillPolygon", "contents": "extension_api(\"\"JS_GDI_FillPolygon\"\", ${1:deviceHDC}, ${2:\"packedX\"}, ${3:\"packedY\"}, ${4:numPoints})"},
		{"trigger": "JS_GDI_FillRect", "contents": "extension_api(\"\"JS_GDI_FillRect\"\", ${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "JS_GDI_FillRoundRect", "contents": "extension_api(\"\"JS_GDI_FillRoundRect\"\", ${1:deviceHDC}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom}, ${6:xrnd}, ${7:yrnd})"},
		{"trigger": "JS_GDI_GetClientDC", "contents": "extension_api(\"\"JS_GDI_GetClientDC\"\", ${1:windowHWND})"},
		{"trigger": "JS_GDI_GetScreenDC", "contents": "extension_api(\"\"JS_GDI_GetScreenDC\"\")"},
		{"trigger": "JS_GDI_GetSysColor", "contents": "extension_api(\"\"JS_GDI_GetSysColor\"\", ${1:\"GUIElement\"})"},
		{"trigger": "JS_GDI_GetTextColor", "contents": "extension_api(\"\"JS_GDI_GetTextColor\"\", ${1:deviceHDC})"},
		{"trigger": "JS_GDI_GetWindowDC", "contents": "extension_api(\"\"JS_GDI_GetWindowDC\"\", ${1:windowHWND})"},
		{"trigger": "JS_GDI_Line", "contents": "extension_api(\"\"JS_GDI_Line\"\", ${1:deviceHDC}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2})"},
		{"trigger": "JS_GDI_Polyline", "contents": "extension_api(\"\"JS_GDI_Polyline\"\", ${1:deviceHDC}, ${2:\"packedX\"}, ${3:\"packedY\"}, ${4:numPoints})"},
		{"trigger": "JS_GDI_ReleaseDC", "contents": "extension_api(\"\"JS_GDI_ReleaseDC\"\", ${1:windowHWND}, ${2:deviceHDC})"},
		{"trigger": "JS_GDI_SelectObject", "contents": "extension_api(\"\"JS_GDI_SelectObject\"\", ${1:deviceHDC}, ${2:GDIObject})"},
		{"trigger": "JS_GDI_SetPixel", "contents": "extension_api(\"\"JS_GDI_SetPixel\"\", ${1:deviceHDC}, ${2:x}, ${3:y}, ${4:color})"},
		{"trigger": "JS_GDI_SetTextBkColor", "contents": "extension_api(\"\"JS_GDI_SetTextBkColor\"\", ${1:deviceHDC}, ${2:color})"},
		{"trigger": "JS_GDI_SetTextBkMode", "contents": "extension_api(\"\"JS_GDI_SetTextBkMode\"\", ${1:deviceHDC}, ${2:mode})"},
		{"trigger": "JS_GDI_SetTextColor", "contents": "extension_api(\"\"JS_GDI_SetTextColor\"\", ${1:deviceHDC}, ${2:color})"},
		{"trigger": "JS_GDI_StretchBlit", "contents": "extension_api(\"\"JS_GDI_StretchBlit\"\", ${1:destHDC}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:sourceHDC}, ${7:srcx}, ${8:srxy}, ${9:srcw}, ${10:srch}, ${11:\"mode\"})"},
		{"trigger": "JS_Int", "contents": "extension_api(\"\"JS_Int\"\", ${1:pointer}, ${2:offset}, ${3:int})"},
		{"trigger": "JS_LICE_AlterBitmapHSV", "contents": "extension_api(\"\"JS_LICE_AlterBitmapHSV\"\", ${1:bitmap}, ${2:hue}, ${3:saturation}, ${4:value})"},
		{"trigger": "JS_LICE_AlterRectHSV", "contents": "extension_api(\"\"JS_LICE_AlterRectHSV\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:hue}, ${7:saturation}, ${8:value})"},
		{"trigger": "JS_LICE_Arc", "contents": "extension_api(\"\"JS_LICE_Arc\"\", ${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:minAngle}, ${6:maxAngle}, ${7:color}, ${8:alpha}, ${9:\"mode\"}, ${10:antialias})"},
		{"trigger": "JS_LICE_Bezier", "contents": "extension_api(\"\"JS_LICE_Bezier\"\", ${1:bitmap}, ${2:xstart}, ${3:ystart}, ${4:xctl1}, ${5:yctl1}, ${6:xctl2}, ${7:yctl2}, ${8:xend}, ${9:yend}, ${10:tol}, ${11:color}, ${12:alpha}, ${13:\"mode\"}, ${14:antialias})"},
		{"trigger": "JS_LICE_Blit", "contents": "extension_api(\"\"JS_LICE_Blit\"\", ${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:sourceBitmap}, ${5:srcx}, ${6:srcy}, ${7:width}, ${8:height}, ${9:alpha}, ${10:\"mode\"})"},
		{"trigger": "JS_LICE_Circle", "contents": "extension_api(\"\"JS_LICE_Circle\"\", ${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:color}, ${6:alpha}, ${7:\"mode\"}, ${8:antialias})"},
		{"trigger": "JS_LICE_Clear", "contents": "extension_api(\"\"JS_LICE_Clear\"\", ${1:bitmap}, ${2:color})"},
		{"trigger": "JS_LICE_CreateBitmap", "contents": "extension_api(\"\"JS_LICE_CreateBitmap\"\", ${1:isSysBitmap}, ${2:width}, ${3:height})"},
		{"trigger": "JS_LICE_CreateFont", "contents": "extension_api(\"\"JS_LICE_CreateFont\"\")"},
		{"trigger": "JS_LICE_DestroyBitmap", "contents": "extension_api(\"\"JS_LICE_DestroyBitmap\"\", ${1:bitmap})"},
		{"trigger": "JS_LICE_DestroyFont", "contents": "extension_api(\"\"JS_LICE_DestroyFont\"\", ${1:LICEFont})"},
		{"trigger": "JS_LICE_DrawChar", "contents": "extension_api(\"\"JS_LICE_DrawChar\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:c}, ${5:color}, ${6:alpha}, ${7:mode})"},
		{"trigger": "JS_LICE_DrawText", "contents": "extension_api(\"\"JS_LICE_DrawText\"\", ${1:bitmap}, ${2:LICEFont}, ${3:\"text\"}, ${4:textLen}, ${5:x1}, ${6:y1}, ${7:x2}, ${8:y2})"},
		{"trigger": "JS_LICE_FillCircle", "contents": "extension_api(\"\"JS_LICE_FillCircle\"\", ${1:bitmap}, ${2:cx}, ${3:cy}, ${4:r}, ${5:color}, ${6:alpha}, ${7:\"mode\"}, ${8:antialias})"},
		{"trigger": "JS_LICE_FillPolygon", "contents": "extension_api(\"\"JS_LICE_FillPolygon\"\", ${1:bitmap}, ${2:\"packedX\"}, ${3:\"packedY\"}, ${4:numPoints}, ${5:color}, ${6:alpha}, ${7:\"mode\"})"},
		{"trigger": "JS_LICE_FillRect", "contents": "extension_api(\"\"JS_LICE_FillRect\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:color}, ${7:alpha}, ${8:\"mode\"})"},
		{"trigger": "JS_LICE_FillTriangle", "contents": "extension_api(\"\"JS_LICE_FillTriangle\"\", ${1:bitmap}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3}, ${8:color}, ${9:alpha}, ${10:\"mode\"})"},
		{"trigger": "JS_LICE_GetDC", "contents": "extension_api(\"\"JS_LICE_GetDC\"\", ${1:bitmap})"},
		{"trigger": "JS_LICE_GetHeight", "contents": "extension_api(\"\"JS_LICE_GetHeight\"\", ${1:bitmap})"},
		{"trigger": "JS_LICE_GetPixel", "contents": "extension_api(\"\"JS_LICE_GetPixel\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:color})"},
		{"trigger": "JS_LICE_GetWidth", "contents": "extension_api(\"\"JS_LICE_GetWidth\"\", ${1:bitmap})"},
		{"trigger": "JS_LICE_GradRect", "contents": "extension_api(\"\"JS_LICE_GradRect\"\", ${1:bitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:ir}, ${7:ig}, ${8:ib}, ${9:ia}, ${10:drdx}, ${11:dgdx}, ${12:dbdx}, ${13:dadx}, ${14:drdy}, ${15:dgdy}, ${16:dbdy}, ${17:dady}, ${18:\"mode\"})"},
		{"trigger": "JS_LICE_IsFlipped", "contents": "extension_api(\"\"JS_LICE_IsFlipped\"\", ${1:bitmap})"},
		{"trigger": "JS_LICE_Line", "contents": "extension_api(\"\"JS_LICE_Line\"\", ${1:bitmap}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color}, ${7:alpha}, ${8:\"mode\"}, ${9:antialias})"},
		{"trigger": "JS_LICE_LoadPNG", "contents": "extension_api(\"\"JS_LICE_LoadPNG\"\", ${1:\"filename\"})"},
		{"trigger": "JS_LICE_MeasureText", "contents": "extension_api(\"\"JS_LICE_MeasureText\"\", ${1:\"text\"}, ${2:width}, ${3:Height})"},
		{"trigger": "JS_LICE_ProcessRect", "contents": "extension_api(\"\"JS_LICE_ProcessRect\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:\"mode\"}, ${7:operand})"},
		{"trigger": "JS_LICE_PutPixel", "contents": "extension_api(\"\"JS_LICE_PutPixel\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:color}, ${5:alpha}, ${6:\"mode\"})"},
		{"trigger": "JS_LICE_Resize", "contents": "extension_api(\"\"JS_LICE_Resize\"\", ${1:bitmap}, ${2:width}, ${3:height})"},
		{"trigger": "JS_LICE_RotatedBlit", "contents": "extension_api(\"\"JS_LICE_RotatedBlit\"\", ${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:sourceBitmap}, ${7:srcx}, ${8:srcy}, ${9:srcw}, ${10:srch}, ${11:angle}, ${12:rotxcent}, ${13:rotycent}, ${14:cliptosourcerect}, ${15:alpha}, ${16:\"mode\"})"},
		{"trigger": "JS_LICE_RoundRect", "contents": "extension_api(\"\"JS_LICE_RoundRect\"\", ${1:bitmap}, ${2:x}, ${3:y}, ${4:w}, ${5:h}, ${6:cornerradius}, ${7:color}, ${8:alpha}, ${9:\"mode\"}, ${10:antialias})"},
		{"trigger": "JS_LICE_ScaledBlit", "contents": "extension_api(\"\"JS_LICE_ScaledBlit\"\", ${1:destBitmap}, ${2:dstx}, ${3:dsty}, ${4:dstw}, ${5:dsth}, ${6:srcBitmap}, ${7:srcx}, ${8:srcy}, ${9:srcw}, ${10:srch}, ${11:alpha}, ${12:\"mode\"})"},
		{"trigger": "JS_LICE_SetAlphaFromColorMask", "contents": "extension_api(\"\"JS_LICE_SetAlphaFromColorMask\"\", ${1:bitmap}, ${2:colorRGB})"},
		{"trigger": "JS_LICE_SetFontBkColor", "contents": "extension_api(\"\"JS_LICE_SetFontBkColor\"\", ${1:LICEFont}, ${2:color})"},
		{"trigger": "JS_LICE_SetFontColor", "contents": "extension_api(\"\"JS_LICE_SetFontColor\"\", ${1:LICEFont}, ${2:color})"},
		{"trigger": "JS_LICE_SetFontFromGDI", "contents": "extension_api(\"\"JS_LICE_SetFontFromGDI\"\", ${1:LICEFont}, ${2:GDIFont}, ${3:\"moreFormats\"})"},
		{"trigger": "JS_LICE_WritePNG", "contents": "extension_api(\"\"JS_LICE_WritePNG\"\", ${1:\"filename\"}, ${2:bitmap}, ${3:wantAlpha})"},
		{"trigger": "JS_ListView_EnsureVisible", "contents": "extension_api(\"\"JS_ListView_EnsureVisible\"\", ${1:listviewHWND}, ${2:index}, ${3:partialOK})"},
		{"trigger": "JS_ListView_EnumSelItems", "contents": "extension_api(\"\"JS_ListView_EnumSelItems\"\", ${1:listviewHWND}, ${2:index})"},
		{"trigger": "JS_ListView_GetFocusedItem", "contents": "extension_api(\"\"JS_ListView_GetFocusedItem\"\", ${1:listviewHWND}, ${2:#text})"},
		{"trigger": "JS_ListView_GetItem", "contents": "extension_api(\"\"JS_ListView_GetItem\"\", ${1:listviewHWND}, ${2:index}, ${3:subItem}, ${4:#text}, ${5:state})"},
		{"trigger": "JS_ListView_GetItemCount", "contents": "extension_api(\"\"JS_ListView_GetItemCount\"\", ${1:listviewHWND})"},
		{"trigger": "JS_ListView_GetItemState", "contents": "extension_api(\"\"JS_ListView_GetItemState\"\", ${1:listviewHWND}, ${2:index})"},
		{"trigger": "JS_ListView_GetItemText", "contents": "extension_api(\"\"JS_ListView_GetItemText\"\", ${1:listviewHWND}, ${2:index}, ${3:subItem}, ${4:#text})"},
		{"trigger": "JS_ListView_GetSelectedCount", "contents": "extension_api(\"\"JS_ListView_GetSelectedCount\"\", ${1:listviewHWND})"},
		{"trigger": "JS_ListView_ListAllSelItems", "contents": "extension_api(\"\"JS_ListView_ListAllSelItems\"\", ${1:listviewHWND}, ${2:#items})"},
		{"trigger": "JS_Localize", "contents": "extension_api(\"\"JS_Localize\"\", ${1:\"USEnglish\"}, ${2:\"LangPackSection\"}, ${3:#translation})"},
		{"trigger": "JS_MIDIEditor_ArrayAll", "contents": "extension_api(\"\"JS_MIDIEditor_ArrayAll\"\", ${1:reaperarray})"},
		{"trigger": "JS_MIDIEditor_ListAll", "contents": "extension_api(\"\"JS_MIDIEditor_ListAll\"\", ${1:#list})"},
		{"trigger": "JS_Mem_Alloc", "contents": "extension_api(\"\"JS_Mem_Alloc\"\", ${1:sizeBytes})"},
		{"trigger": "JS_Mem_Free", "contents": "extension_api(\"\"JS_Mem_Free\"\", ${1:mallocPointer})"},
		{"trigger": "JS_Mem_FromString", "contents": "extension_api(\"\"JS_Mem_FromString\"\", ${1:mallocPointer}, ${2:offset}, ${3:\"packedString\"}, ${4:stringLength})"},
		{"trigger": "JS_Mouse_GetCursor", "contents": "extension_api(\"\"JS_Mouse_GetCursor\"\")"},
		{"trigger": "JS_Mouse_GetState", "contents": "extension_api(\"\"JS_Mouse_GetState\"\", ${1:flags})"},
		{"trigger": "JS_Mouse_LoadCursor", "contents": "extension_api(\"\"JS_Mouse_LoadCursor\"\", ${1:cursorNumber})"},
		{"trigger": "JS_Mouse_LoadCursorFromFile", "contents": "extension_api(\"\"JS_Mouse_LoadCursorFromFile\"\", ${1:\"pathAndFileName\"}, ${2:forceNewLoadOptional})"},
		{"trigger": "JS_Mouse_SetCursor", "contents": "extension_api(\"\"JS_Mouse_SetCursor\"\", ${1:cursorHandle})"},
		{"trigger": "JS_Mouse_SetPosition", "contents": "extension_api(\"\"JS_Mouse_SetPosition\"\", ${1:x}, ${2:y})"},
		{"trigger": "JS_ReaScriptAPI_Version", "contents": "extension_api(\"\"JS_ReaScriptAPI_Version\"\", ${1:version})"},
		{"trigger": "JS_String", "contents": "extension_api(\"\"JS_String\"\", ${1:pointer}, ${2:offset}, ${3:lengthChars}, ${4:#buf})"},
		{"trigger": "JS_VKeys_GetDown", "contents": "extension_api(\"\"JS_VKeys_GetDown\"\", ${1:cutoffTime}, ${2:#state})"},
		{"trigger": "JS_VKeys_GetState", "contents": "extension_api(\"\"JS_VKeys_GetState\"\", ${1:cutoffTime}, ${2:#state})"},
		{"trigger": "JS_VKeys_GetUp", "contents": "extension_api(\"\"JS_VKeys_GetUp\"\", ${1:cutoffTime}, ${2:#state})"},
		{"trigger": "JS_VKeys_Intercept", "contents": "extension_api(\"\"JS_VKeys_Intercept\"\", ${1:keyCode}, ${2:intercept})"},
		{"trigger": "JS_WindowMessage_Intercept", "contents": "extension_api(\"\"JS_WindowMessage_Intercept\"\", ${1:windowHWND}, ${2:\"message\"}, ${3:passThrough})"},
		{"trigger": "JS_WindowMessage_InterceptList", "contents": "extension_api(\"\"JS_WindowMessage_InterceptList\"\", ${1:windowHWND}, ${2:\"messages\"})"},
		{"trigger": "JS_WindowMessage_ListIntercepts", "contents": "extension_api(\"\"JS_WindowMessage_ListIntercepts\"\", ${1:windowHWND}, ${2:#list})"},
		{"trigger": "JS_WindowMessage_PassThrough", "contents": "extension_api(\"\"JS_WindowMessage_PassThrough\"\", ${1:windowHWND}, ${2:\"message\"}, ${3:passThrough})"},
		{"trigger": "JS_WindowMessage_Peek", "contents": "extension_api(\"\"JS_WindowMessage_Peek\"\", ${1:windowHWND}, ${2:\"message\"}, ${3:passedThrough}, ${4:time}, ${5:wParamLow}, ${6:wParamHigh}, ${7:lParamLow}, ${8:lParamHigh})"},
		{"trigger": "JS_WindowMessage_Post", "contents": "extension_api(\"\"JS_WindowMessage_Post\"\", ${1:windowHWND}, ${2:\"message\"}, ${3:wParam}, ${4:wParamHighWord}, ${5:lParam}, ${6:lParamHighWord})"},
		{"trigger": "JS_WindowMessage_Release", "contents": "extension_api(\"\"JS_WindowMessage_Release\"\", ${1:windowHWND}, ${2:\"messages\"})"},
		{"trigger": "JS_WindowMessage_ReleaseAll", "contents": "extension_api(\"\"JS_WindowMessage_ReleaseAll\"\")"},
		{"trigger": "JS_WindowMessage_ReleaseWindow", "contents": "extension_api(\"\"JS_WindowMessage_ReleaseWindow\"\", ${1:windowHWND})"},
		{"trigger": "JS_WindowMessage_Send", "contents": "extension_api(\"\"JS_WindowMessage_Send\"\", ${1:windowHWND}, ${2:\"message\"}, ${3:wParam}, ${4:wParamHighWord}, ${5:lParam}, ${6:lParamHighWord})"},
		{"trigger": "JS_Window_AddressFromHandle", "contents": "extension_api(\"\"JS_Window_AddressFromHandle\"\", ${1:handle}, ${2:address})"},
		{"trigger": "JS_Window_ArrayAllChild", "contents": "extension_api(\"\"JS_Window_ArrayAllChild\"\", ${1:parentHWND}, ${2:reaperarray})"},
		{"trigger": "JS_Window_ArrayAllTop", "contents": "extension_api(\"\"JS_Window_ArrayAllTop\"\", ${1:reaperarray})"},
		{"trigger": "JS_Window_ArrayFind", "contents": "extension_api(\"\"JS_Window_ArrayFind\"\", ${1:\"title\"}, ${2:exact}, ${3:reaperarray})"},
		{"trigger": "JS_Window_AttachResizeGrip", "contents": "extension_api(\"\"JS_Window_AttachResizeGrip\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_AttachTopmostPin", "contents": "extension_api(\"\"JS_Window_AttachTopmostPin\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_ClientToScreen", "contents": "extension_api(\"\"JS_Window_ClientToScreen\"\", ${1:windowHWND}, ${2:x}, ${3:y}, ${4:x}, ${5:y})"},
		{"trigger": "JS_Window_Create", "contents": "extension_api(\"\"JS_Window_Create\"\", ${1:\"title\"}, ${2:\"className\"}, ${3:x}, ${4:y}, ${5:w}, ${6:h}, ${7:style}, ${8:ownerHWND})"},
		{"trigger": "JS_Window_Destroy", "contents": "extension_api(\"\"JS_Window_Destroy\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_Enable", "contents": "extension_api(\"\"JS_Window_Enable\"\", ${1:windowHWND}, ${2:enable})"},
		{"trigger": "JS_Window_Find", "contents": "extension_api(\"\"JS_Window_Find\"\", ${1:\"title\"}, ${2:exact})"},
		{"trigger": "JS_Window_FindChild", "contents": "extension_api(\"\"JS_Window_FindChild\"\", ${1:parentHWND}, ${2:\"title\"}, ${3:exact})"},
		{"trigger": "JS_Window_FindChildByID", "contents": "extension_api(\"\"JS_Window_FindChildByID\"\", ${1:parentHWND}, ${2:ID})"},
		{"trigger": "JS_Window_FindEx", "contents": "extension_api(\"\"JS_Window_FindEx\"\", ${1:parentHWND}, ${2:childHWND}, ${3:\"className\"}, ${4:\"title\"})"},
		{"trigger": "JS_Window_FindTop", "contents": "extension_api(\"\"JS_Window_FindTop\"\", ${1:\"title\"}, ${2:exact})"},
		{"trigger": "JS_Window_FromPoint", "contents": "extension_api(\"\"JS_Window_FromPoint\"\", ${1:x}, ${2:y})"},
		{"trigger": "JS_Window_GetClassName", "contents": "extension_api(\"\"JS_Window_GetClassName\"\", ${1:windowHWND}, ${2:#class})"},
		{"trigger": "JS_Window_GetClientRect", "contents": "extension_api(\"\"JS_Window_GetClientRect\"\", ${1:windowHWND}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "JS_Window_GetClientSize", "contents": "extension_api(\"\"JS_Window_GetClientSize\"\", ${1:windowHWND}, ${2:width}, ${3:height})"},
		{"trigger": "JS_Window_GetFocus", "contents": "extension_api(\"\"JS_Window_GetFocus\"\")"},
		{"trigger": "JS_Window_GetForeground", "contents": "extension_api(\"\"JS_Window_GetForeground\"\")"},
		{"trigger": "JS_Window_GetLong", "contents": "extension_api(\"\"JS_Window_GetLong\"\", ${1:windowHWND}, ${2:\"info\"}, ${3:retval})"},
		{"trigger": "JS_Window_GetLongPtr", "contents": "extension_api(\"\"JS_Window_GetLongPtr\"\", ${1:windowHWND}, ${2:\"info\"})"},
		{"trigger": "JS_Window_GetParent", "contents": "extension_api(\"\"JS_Window_GetParent\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_GetRect", "contents": "extension_api(\"\"JS_Window_GetRect\"\", ${1:windowHWND}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom})"},
		{"trigger": "JS_Window_GetRelated", "contents": "extension_api(\"\"JS_Window_GetRelated\"\", ${1:windowHWND}, ${2:\"relation\"})"},
		{"trigger": "JS_Window_GetScrollInfo", "contents": "extension_api(\"\"JS_Window_GetScrollInfo\"\", ${1:windowHWND}, ${2:\"scrollbar\"}, ${3:position}, ${4:pageSize}, ${5:min}, ${6:max}, ${7:trackPos})"},
		{"trigger": "JS_Window_GetTitle", "contents": "extension_api(\"\"JS_Window_GetTitle\"\", ${1:windowHWND}, ${2:#title})"},
		{"trigger": "JS_Window_GetViewportFromRect", "contents": "extension_api(\"\"JS_Window_GetViewportFromRect\"\", ${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:wantWork}, ${6:left}, ${7:top}, ${8:right}, ${9:bottom})"},
		{"trigger": "JS_Window_HandleFromAddress", "contents": "extension_api(\"\"JS_Window_HandleFromAddress\"\", ${1:address})"},
		{"trigger": "JS_Window_InvalidateRect", "contents": "extension_api(\"\"JS_Window_InvalidateRect\"\", ${1:windowHWND}, ${2:left}, ${3:top}, ${4:right}, ${5:bottom}, ${6:eraseBackground})"},
		{"trigger": "JS_Window_IsChild", "contents": "extension_api(\"\"JS_Window_IsChild\"\", ${1:parentHWND}, ${2:childHWND})"},
		{"trigger": "JS_Window_IsVisible", "contents": "extension_api(\"\"JS_Window_IsVisible\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_IsWindow", "contents": "extension_api(\"\"JS_Window_IsWindow\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_ListAllChild", "contents": "extension_api(\"\"JS_Window_ListAllChild\"\", ${1:parentHWND}, ${2:#list})"},
		{"trigger": "JS_Window_ListAllTop", "contents": "extension_api(\"\"JS_Window_ListAllTop\"\", ${1:#list})"},
		{"trigger": "JS_Window_ListFind", "contents": "extension_api(\"\"JS_Window_ListFind\"\", ${1:\"title\"}, ${2:exact}, ${3:#list})"},
		{"trigger": "JS_Window_MonitorFromRect", "contents": "extension_api(\"\"JS_Window_MonitorFromRect\"\", ${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:wantWork}, ${6:left}, ${7:top}, ${8:right}, ${9:bottom})"},
		{"trigger": "JS_Window_Move", "contents": "extension_api(\"\"JS_Window_Move\"\", ${1:windowHWND}, ${2:left}, ${3:top})"},
		{"trigger": "JS_Window_OnCommand", "contents": "extension_api(\"\"JS_Window_OnCommand\"\", ${1:windowHWND}, ${2:commandID})"},
		{"trigger": "JS_Window_Resize", "contents": "extension_api(\"\"JS_Window_Resize\"\", ${1:windowHWND}, ${2:width}, ${3:height})"},
		{"trigger": "JS_Window_ScreenToClient", "contents": "extension_api(\"\"JS_Window_ScreenToClient\"\", ${1:windowHWND}, ${2:x}, ${3:y}, ${4:x}, ${5:y})"},
		{"trigger": "JS_Window_SetFocus", "contents": "extension_api(\"\"JS_Window_SetFocus\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_SetForeground", "contents": "extension_api(\"\"JS_Window_SetForeground\"\", ${1:windowHWND})"},
		{"trigger": "JS_Window_SetLong", "contents": "extension_api(\"\"JS_Window_SetLong\"\", ${1:windowHWND}, ${2:\"info\"}, ${3:value}, ${4:retval})"},
		{"trigger": "JS_Window_SetOpacity", "contents": "extension_api(\"\"JS_Window_SetOpacity\"\", ${1:windowHWND}, ${2:\"mode\"}, ${3:value})"},
		{"trigger": "JS_Window_SetPosition", "contents": "extension_api(\"\"JS_Window_SetPosition\"\", ${1:windowHWND}, ${2:left}, ${3:top}, ${4:width}, ${5:height})"},
		{"trigger": "JS_Window_SetScrollPos", "contents": "extension_api(\"\"JS_Window_SetScrollPos\"\", ${1:windowHWND}, ${2:\"scrollbar\"}, ${3:position})"},
		{"trigger": "JS_Window_SetTitle", "contents": "extension_api(\"\"JS_Window_SetTitle\"\", ${1:windowHWND}, ${2:\"title\"})"},
		{"trigger": "JS_Window_SetZOrder", "contents": "extension_api(\"\"JS_Window_SetZOrder\"\", ${1:windowHWND}, ${2:\"ZOrder\"}, ${3:insertAfterHWND})"},
		{"trigger": "JS_Window_Show", "contents": "extension_api(\"\"JS_Window_Show\"\", ${1:windowHWND}, ${2:\"state\"})"},
		{"trigger": "JS_Window_Update", "contents": "extension_api(\"\"JS_Window_Update\"\", ${1:windowHWND})"},
		{"trigger": "NF_AnalyzeMediaItemPeakAndRMS", "contents": "extension_api(\"\"NF_AnalyzeMediaItemPeakAndRMS\"\", ${1:item}, ${2:windowSize}, ${3:reaper.array_peaks}, ${4:reaper.array_peakpositions}, ${5:reaper.array_RMSs}, ${6:reaper.array_RMSpositions})"},
		{"trigger": "NF_AnalyzeTakeLoudness", "contents": "extension_api(\"\"NF_AnalyzeTakeLoudness\"\", ${1:take}, ${2:analyzeTruePeak}, ${3:lufsIntegrated}, ${4:range}, ${5:truePeak}, ${6:truePeakPos}, ${7:shortTermMax}, ${8:momentaryMax})"},
		{"trigger": "NF_AnalyzeTakeLoudness2", "contents": "extension_api(\"\"NF_AnalyzeTakeLoudness2\"\", ${1:take}, ${2:analyzeTruePeak}, ${3:lufsIntegrated}, ${4:range}, ${5:truePeak}, ${6:truePeakPos}, ${7:shortTermMax}, ${8:momentaryMax}, ${9:shortTermMaxPos}, ${10:momentaryMaxPos})"},
		{"trigger": "NF_AnalyzeTakeLoudness_IntegratedOnly", "contents": "extension_api(\"\"NF_AnalyzeTakeLoudness_IntegratedOnly\"\", ${1:take}, ${2:lufsIntegrated})"},
		{"trigger": "NF_GetMediaItemAverageRMS", "contents": "extension_api(\"\"NF_GetMediaItemAverageRMS\"\", ${1:item})"},
		{"trigger": "NF_GetMediaItemMaxPeak", "contents": "extension_api(\"\"NF_GetMediaItemMaxPeak\"\", ${1:item})"},
		{"trigger": "NF_GetMediaItemMaxPeakAndMaxPeakPos", "contents": "extension_api(\"\"NF_GetMediaItemMaxPeakAndMaxPeakPos\"\", ${1:item}, ${2:maxPeakPos})"},
		{"trigger": "NF_GetMediaItemPeakRMS_NonWindowed", "contents": "extension_api(\"\"NF_GetMediaItemPeakRMS_NonWindowed\"\", ${1:item})"},
		{"trigger": "NF_GetMediaItemPeakRMS_Windowed", "contents": "extension_api(\"\"NF_GetMediaItemPeakRMS_Windowed\"\", ${1:item})"},
		{"trigger": "NF_GetSWSMarkerRegionSub", "contents": "extension_api(\"\"NF_GetSWSMarkerRegionSub\"\", ${1:#retval}, ${2:markerRegionIdx})"},
		{"trigger": "NF_GetSWSTrackNotes", "contents": "extension_api(\"\"NF_GetSWSTrackNotes\"\", ${1:#retval}, ${2:track})"},
		{"trigger": "NF_SetSWSMarkerRegionSub", "contents": "extension_api(\"\"NF_SetSWSMarkerRegionSub\"\", ${1:\"markerRegionSub\"}, ${2:markerRegionIdx})"},
		{"trigger": "NF_SetSWSTrackNotes", "contents": "extension_api(\"\"NF_SetSWSTrackNotes\"\", ${1:track}, ${2:\"str\"})"},
		{"trigger": "NF_UpdateSWSMarkerRegionSubWindow", "contents": "extension_api(\"\"NF_UpdateSWSMarkerRegionSubWindow\"\")"},
		{"trigger": "ReaPack_AboutInstalledPackage", "contents": "extension_api(\"\"ReaPack_AboutInstalledPackage\"\", ${1:entry})"},
		{"trigger": "ReaPack_AboutRepository", "contents": "extension_api(\"\"ReaPack_AboutRepository\"\", ${1:\"repoName\"})"},
		{"trigger": "ReaPack_AddSetRepository", "contents": "extension_api(\"\"ReaPack_AddSetRepository\"\", ${1:\"name\"}, ${2:\"url\"}, ${3:enable}, ${4:autoInstall}, ${5:#error})"},
		{"trigger": "ReaPack_BrowsePackages", "contents": "extension_api(\"\"ReaPack_BrowsePackages\"\", ${1:\"filter\"})"},
		{"trigger": "ReaPack_CompareVersions", "contents": "extension_api(\"\"ReaPack_CompareVersions\"\", ${1:\"ver1\"}, ${2:\"ver2\"}, ${3:#error})"},
		{"trigger": "ReaPack_EnumOwnedFiles", "contents": "extension_api(\"\"ReaPack_EnumOwnedFiles\"\", ${1:entry}, ${2:index}, ${3:#path}, ${4:sections}, ${5:type})"},
		{"trigger": "ReaPack_FreeEntry", "contents": "extension_api(\"\"ReaPack_FreeEntry\"\", ${1:entry})"},
		{"trigger": "ReaPack_GetEntryInfo", "contents": "extension_api(\"\"ReaPack_GetEntryInfo\"\", ${1:entry}, ${2:#repo}, ${3:#cat}, ${4:#pkg}, ${5:#desc}, ${6:type}, ${7:#ver}, ${8:#author}, ${9:pinned}, ${10:fileCount})"},
		{"trigger": "ReaPack_GetOwner", "contents": "extension_api(\"\"ReaPack_GetOwner\"\", ${1:\"fn\"}, ${2:#error})"},
		{"trigger": "ReaPack_GetRepositoryInfo", "contents": "extension_api(\"\"ReaPack_GetRepositoryInfo\"\", ${1:\"name\"}, ${2:#url}, ${3:enabled}, ${4:autoInstall})"},
		{"trigger": "ReaPack_ProcessQueue", "contents": "extension_api(\"\"ReaPack_ProcessQueue\"\", ${1:refreshUI})"},
		{"trigger": "SNM_AddReceive", "contents": "extension_api(\"\"SNM_AddReceive\"\", ${1:src}, ${2:dest}, ${3:type})"},
		{"trigger": "SNM_AddTCPFXParm", "contents": "extension_api(\"\"SNM_AddTCPFXParm\"\", ${1:tr}, ${2:fxId}, ${3:prmId})"},
		{"trigger": "SNM_CreateFastString", "contents": "extension_api(\"\"SNM_CreateFastString\"\", ${1:\"str\"})"},
		{"trigger": "SNM_DeleteFastString", "contents": "extension_api(\"\"SNM_DeleteFastString\"\", ${1:str})"},
		{"trigger": "SNM_GetDoubleConfigVar", "contents": "extension_api(\"\"SNM_GetDoubleConfigVar\"\", ${1:\"varname\"}, ${2:errvalue})"},
		{"trigger": "SNM_GetFastString", "contents": "extension_api(\"\"SNM_GetFastString\"\", ${1:#retval}, ${2:str})"},
		{"trigger": "SNM_GetFastStringLength", "contents": "extension_api(\"\"SNM_GetFastStringLength\"\", ${1:str})"},
		{"trigger": "SNM_GetIntConfigVar", "contents": "extension_api(\"\"SNM_GetIntConfigVar\"\", ${1:\"varname\"}, ${2:errvalue})"},
		{"trigger": "SNM_GetMediaItemTakeByGUID", "contents": "extension_api(\"\"SNM_GetMediaItemTakeByGUID\"\", ${1:project}, ${2:\"guid\"})"},
		{"trigger": "SNM_GetProjectMarkerName", "contents": "extension_api(\"\"SNM_GetProjectMarkerName\"\", ${1:proj}, ${2:num}, ${3:isrgn}, ${4:name})"},
		{"trigger": "SNM_GetSetObjectState", "contents": "extension_api(\"\"SNM_GetSetObjectState\"\", ${1:obj}, ${2:state}, ${3:setnewvalue}, ${4:wantminimalstate})"},
		{"trigger": "SNM_GetSetSourceState", "contents": "extension_api(\"\"SNM_GetSetSourceState\"\", ${1:item}, ${2:takeidx}, ${3:state}, ${4:setnewvalue})"},
		{"trigger": "SNM_GetSetSourceState2", "contents": "extension_api(\"\"SNM_GetSetSourceState2\"\", ${1:take}, ${2:state}, ${3:setnewvalue})"},
		{"trigger": "SNM_GetSourceType", "contents": "extension_api(\"\"SNM_GetSourceType\"\", ${1:take}, ${2:type})"},
		{"trigger": "SNM_MoveOrRemoveTrackFX", "contents": "extension_api(\"\"SNM_MoveOrRemoveTrackFX\"\", ${1:tr}, ${2:fxId}, ${3:what})"},
		{"trigger": "SNM_ReadMediaFileTag", "contents": "extension_api(\"\"SNM_ReadMediaFileTag\"\", ${1:\"fn\"}, ${2:\"tag\"}, ${3:#tagval})"},
		{"trigger": "SNM_RemoveReceive", "contents": "extension_api(\"\"SNM_RemoveReceive\"\", ${1:tr}, ${2:rcvidx})"},
		{"trigger": "SNM_RemoveReceivesFrom", "contents": "extension_api(\"\"SNM_RemoveReceivesFrom\"\", ${1:tr}, ${2:srctr})"},
		{"trigger": "SNM_SelectResourceBookmark", "contents": "extension_api(\"\"SNM_SelectResourceBookmark\"\", ${1:\"name\"})"},
		{"trigger": "SNM_SetDoubleConfigVar", "contents": "extension_api(\"\"SNM_SetDoubleConfigVar\"\", ${1:\"varname\"}, ${2:newvalue})"},
		{"trigger": "SNM_SetFastString", "contents": "extension_api(\"\"SNM_SetFastString\"\", ${1:str}, ${2:\"newstr\"})"},
		{"trigger": "SNM_SetIntConfigVar", "contents": "extension_api(\"\"SNM_SetIntConfigVar\"\", ${1:\"varname\"}, ${2:newvalue})"},
		{"trigger": "SNM_SetProjectMarker", "contents": "extension_api(\"\"SNM_SetProjectMarker\"\", ${1:proj}, ${2:num}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:\"name\"}, ${7:color})"},
		{"trigger": "SNM_TagMediaFile", "contents": "extension_api(\"\"SNM_TagMediaFile\"\", ${1:\"fn\"}, ${2:\"tag\"}, ${3:\"tagval\"})"},
		{"trigger": "SNM_TieResourceSlotActions", "contents": "extension_api(\"\"SNM_TieResourceSlotActions\"\", ${1:bookmarkId})"},
		{"trigger": "SN_FocusMIDIEditor", "contents": "extension_api(\"\"SN_FocusMIDIEditor\"\")"},
		{"trigger": "ULT_GetMediaItemNote", "contents": "extension_api(\"\"ULT_GetMediaItemNote\"\", ${1:#retval}, ${2:item})"},
		{"trigger": "ULT_SetMediaItemNote", "contents": "extension_api(\"\"ULT_SetMediaItemNote\"\", ${1:item}, ${2:\"note\"})"},
		{"trigger": "Xen_AudioWriter_Create", "contents": "extension_api(\"\"Xen_AudioWriter_Create\"\", ${1:\"filename\"}, ${2:numchans}, ${3:samplerate})"},
		{"trigger": "Xen_AudioWriter_Destroy", "contents": "extension_api(\"\"Xen_AudioWriter_Destroy\"\", ${1:writer})"},
		{"trigger": "Xen_AudioWriter_Write", "contents": "extension_api(\"\"Xen_AudioWriter_Write\"\", ${1:writer}, ${2:numframes}, ${3:data}, ${4:offset})"},
		{"trigger": "Xen_GetMediaSourceSamples", "contents": "extension_api(\"\"Xen_GetMediaSourceSamples\"\", ${1:src}, ${2:destbuf}, ${3:destbufoffset}, ${4:numframes}, ${5:numchans}, ${6:samplerate}, ${7:sourceposition})"},
		{"trigger": "Xen_StartSourcePreview", "contents": "extension_api(\"\"Xen_StartSourcePreview\"\", ${1:source}, ${2:gain}, ${3:loop})"},
		{"trigger": "Xen_StopSourcePreview", "contents": "extension_api(\"\"Xen_StopSourcePreview\"\", ${1:preview_id})"},
		{"trigger": "extension_api", "contents": "extension_api(${1:\"function_name\"})"},
		{"trigger": "fclose", "contents": "fclose(${1:fp})"},
		{"trigger": "feof", "contents": "feof(${1:fp})"},
		{"trigger": "fflush", "contents": "fflush(${1:fp})"},
		{"trigger": "fft", "contents": "fft(${1:buffer}, ${2:size})"},
		{"trigger": "fft_ipermute", "contents": "fft_ipermute(${1:buffer}, ${2:size})"},
		{"trigger": "fft_permute", "contents": "fft_permute(${1:buffer}, ${2:size})"},
		{"trigger": "fft_real", "contents": "fft_real(${1:buffer}, ${2:size})"},
		{"trigger": "fgetc", "contents": "fgetc(${1:fp})"},
		{"trigger": "fgets", "contents": "fgets(${1:fp}, ${2:#str})"},
		{"trigger": "file_exists", "contents": "file_exists(${1:\"path\"})"},
		{"trigger": "FindTempoTimeSigMarker", "contents": "FindTempoTimeSigMarker(${1:project}, ${2:time})"},
		{"trigger": "floor", "contents": "floor(${1:value})"},
		{"trigger": "fopen", "contents": "fopen(${1:\"fn\"}, ${2:\"mode\"})"},
		{"trigger": "format_timestr", "contents": "format_timestr(${1:tpos}, ${2:#buf})"},
		{"trigger": "format_timestr_len", "contents": "format_timestr_len(${1:tpos}, ${2:#buf}, ${3:offset}, ${4:modeoverride})"},
		{"trigger": "format_timestr_pos", "contents": "format_timestr_pos(${1:tpos}, ${2:#buf}, ${3:modeoverride})"},
		{"trigger": "fprintf", "contents": "fprintf(${1:fp}, ${2:\"format\"})"},
		{"trigger": "fread", "contents": "fread(${1:fp}, ${2:#str}, ${3:length})"},
		{"trigger": "freembuf", "contents": "freembuf(${1:address})"},
		{"trigger": "fseek", "contents": "fseek(${1:fp}, ${2:offset}, ${3:whence})"},
		{"trigger": "ftell", "contents": "ftell(${1:fp})"},
		{"trigger": "fwrite", "contents": "fwrite(${1:fp}, ${2:#str}, ${3:len})"},
		{"trigger": "genGuid", "contents": "genGuid(${1:#gGUID})"},
		{"trigger": "get_action_context", "contents": "get_action_context(${1:#filename}, ${2:sectionID}, ${3:cmdID}, ${4:mode}, ${5:resolution}, ${6:val})"},
		{"trigger": "get_config_var_string", "contents": "get_config_var_string(${1:\"name\"}, ${2:#buf})"},
		{"trigger": "get_ini_file", "contents": "get_ini_file(${1:#retval})"},
		{"trigger": "GetActiveTake", "contents": "GetActiveTake(${1:item})"},
		{"trigger": "GetAllProjectPlayStates", "contents": "GetAllProjectPlayStates(${1:ignoreProject})"},
		{"trigger": "GetAppVersion", "contents": "GetAppVersion(${1:#retval})"},
		{"trigger": "GetArmedCommand", "contents": "GetArmedCommand(${1:#sec})"},
		{"trigger": "GetAudioAccessorEndTime", "contents": "GetAudioAccessorEndTime(${1:accessor})"},
		{"trigger": "GetAudioAccessorHash", "contents": "GetAudioAccessorHash(${1:accessor}, ${2:#hashNeed128})"},
		{"trigger": "GetAudioAccessorSamples", "contents": "GetAudioAccessorSamples(${1:accessor}, ${2:samplerate}, ${3:numchannels}, ${4:starttime_sec}, ${5:numsamplesperchannel}, ${6:samplebuffer})"},
		{"trigger": "GetAudioAccessorStartTime", "contents": "GetAudioAccessorStartTime(${1:accessor})"},
		{"trigger": "GetAudioDeviceInfo", "contents": "GetAudioDeviceInfo(${1:\"attribute\"}, ${2:#desc})"},
		{"trigger": "GetConfigWantsDock", "contents": "GetConfigWantsDock(${1:\"ident_str\"})"},
		{"trigger": "GetCurrentProjectInLoadSave", "contents": "GetCurrentProjectInLoadSave()"},
		{"trigger": "GetCursorContext", "contents": "GetCursorContext()"},
		{"trigger": "GetCursorContext2", "contents": "GetCursorContext2(${1:want_last_valid})"},
		{"trigger": "GetCursorPosition", "contents": "GetCursorPosition()"},
		{"trigger": "GetCursorPositionEx", "contents": "GetCursorPositionEx(${1:proj})"},
		{"trigger": "GetDisplayedMediaItemColor", "contents": "GetDisplayedMediaItemColor(${1:item})"},
		{"trigger": "GetDisplayedMediaItemColor2", "contents": "GetDisplayedMediaItemColor2(${1:item}, ${2:take})"},
		{"trigger": "GetEnvelopeInfo_Value", "contents": "GetEnvelopeInfo_Value(${1:tr}, ${2:\"parmname\"})"},
		{"trigger": "GetEnvelopeName", "contents": "GetEnvelopeName(${1:env}, ${2:#buf})"},
		{"trigger": "GetEnvelopePoint", "contents": "GetEnvelopePoint(${1:envelope}, ${2:ptidx}, ${3:time}, ${4:value}, ${5:shape}, ${6:tension}, ${7:selected})"},
		{"trigger": "GetEnvelopePointByTime", "contents": "GetEnvelopePointByTime(${1:envelope}, ${2:time})"},
		{"trigger": "GetEnvelopePointByTimeEx", "contents": "GetEnvelopePointByTimeEx(${1:envelope}, ${2:autoitem_idx}, ${3:time})"},
		{"trigger": "GetEnvelopePointEx", "contents": "GetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx}, ${4:time}, ${5:value}, ${6:shape}, ${7:tension}, ${8:selected})"},
		{"trigger": "GetEnvelopeScalingMode", "contents": "GetEnvelopeScalingMode(${1:env})"},
		{"trigger": "GetEnvelopeStateChunk", "contents": "GetEnvelopeStateChunk(${1:env}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetExePath", "contents": "GetExePath(${1:#retval})"},
		{"trigger": "GetExtState", "contents": "GetExtState(${1:#retval}, ${2:\"section\"}, ${3:\"key\"})"},
		{"trigger": "GetFocusedFX", "contents": "GetFocusedFX(${1:tracknumber}, ${2:itemnumber}, ${3:fxnumber})"},
		{"trigger": "GetFreeDiskSpaceForRecordPath", "contents": "GetFreeDiskSpaceForRecordPath(${1:proj}, ${2:pathidx})"},
		{"trigger": "GetFXEnvelope", "contents": "GetFXEnvelope(${1:track}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"},
		{"trigger": "GetGlobalAutomationOverride", "contents": "GetGlobalAutomationOverride()"},
		{"trigger": "GetHZoomLevel", "contents": "GetHZoomLevel()"},
		{"trigger": "GetInputChannelName", "contents": "GetInputChannelName(${1:#retval}, ${2:channelIndex})"},
		{"trigger": "GetInputOutputLatency", "contents": "GetInputOutputLatency(${1:inputlatency}, ${2:outputLatency})"},
		{"trigger": "GetItemEditingTime2", "contents": "GetItemEditingTime2(${1:which_item}, ${2:flags})"},
		{"trigger": "GetItemFromPoint", "contents": "GetItemFromPoint(${1:screen_x}, ${2:screen_y}, ${3:allow_locked}, ${4:take})"},
		{"trigger": "GetItemProjectContext", "contents": "GetItemProjectContext(${1:item})"},
		{"trigger": "GetItemStateChunk", "contents": "GetItemStateChunk(${1:item}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetLastColorThemeFile", "contents": "GetLastColorThemeFile(${1:#retval})"},
		{"trigger": "GetLastMarkerAndCurRegion", "contents": "GetLastMarkerAndCurRegion(${1:proj}, ${2:time}, ${3:markeridx}, ${4:regionidx})"},
		{"trigger": "GetLastTouchedFX", "contents": "GetLastTouchedFX(${1:tracknumber}, ${2:fxnumber}, ${3:paramnumber})"},
		{"trigger": "GetLastTouchedTrack", "contents": "GetLastTouchedTrack()"},
		{"trigger": "GetMainHwnd", "contents": "GetMainHwnd()"},
		{"trigger": "GetMasterMuteSoloFlags", "contents": "GetMasterMuteSoloFlags()"},
		{"trigger": "GetMasterTrack", "contents": "GetMasterTrack(${1:proj})"},
		{"trigger": "GetMasterTrackVisibility", "contents": "GetMasterTrackVisibility()"},
		{"trigger": "GetMaxMidiInputs", "contents": "GetMaxMidiInputs()"},
		{"trigger": "GetMaxMidiOutputs", "contents": "GetMaxMidiOutputs()"},
		{"trigger": "GetMediaItem", "contents": "GetMediaItem(${1:proj}, ${2:itemidx})"},
		{"trigger": "GetMediaItem_Track", "contents": "GetMediaItem_Track(${1:item})"},
		{"trigger": "GetMediaItemInfo_Value", "contents": "GetMediaItemInfo_Value(${1:item}, ${2:\"parmname\"})"},
		{"trigger": "GetMediaItemNumTakes", "contents": "GetMediaItemNumTakes(${1:item})"},
		{"trigger": "GetMediaItemTake", "contents": "GetMediaItemTake(${1:item}, ${2:tk})"},
		{"trigger": "GetMediaItemTake_Item", "contents": "GetMediaItemTake_Item(${1:take})"},
		{"trigger": "GetMediaItemTake_Peaks", "contents": "GetMediaItemTake_Peaks(${1:take}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"},
		{"trigger": "GetMediaItemTake_Source", "contents": "GetMediaItemTake_Source(${1:take})"},
		{"trigger": "GetMediaItemTake_Track", "contents": "GetMediaItemTake_Track(${1:take})"},
		{"trigger": "GetMediaItemTakeByGUID", "contents": "GetMediaItemTakeByGUID(${1:project}, ${2:\"guidGUID\"})"},
		{"trigger": "GetMediaItemTakeInfo_Value", "contents": "GetMediaItemTakeInfo_Value(${1:take}, ${2:\"parmname\"})"},
		{"trigger": "GetMediaItemTrack", "contents": "GetMediaItemTrack(${1:item})"},
		{"trigger": "GetMediaSourceFileName", "contents": "GetMediaSourceFileName(${1:source}, ${2:#filenamebuf})"},
		{"trigger": "GetMediaSourceLength", "contents": "GetMediaSourceLength(${1:source}, ${2:lengthIsQN})"},
		{"trigger": "GetMediaSourceNumChannels", "contents": "GetMediaSourceNumChannels(${1:source})"},
		{"trigger": "GetMediaSourceParent", "contents": "GetMediaSourceParent(${1:src})"},
		{"trigger": "GetMediaSourceSampleRate", "contents": "GetMediaSourceSampleRate(${1:source})"},
		{"trigger": "GetMediaSourceType", "contents": "GetMediaSourceType(${1:source}, ${2:#typebuf})"},
		{"trigger": "GetMediaTrackInfo_Value", "contents": "GetMediaTrackInfo_Value(${1:tr}, ${2:\"parmname\"})"},
		{"trigger": "GetMIDIInputName", "contents": "GetMIDIInputName(${1:dev}, ${2:#nameout})"},
		{"trigger": "GetMIDIOutputName", "contents": "GetMIDIOutputName(${1:dev}, ${2:#nameout})"},
		{"trigger": "GetMixerScroll", "contents": "GetMixerScroll()"},
		{"trigger": "GetMouseModifier", "contents": "GetMouseModifier(${1:\"context\"}, ${2:modifier_flag}, ${3:#action})"},
		{"trigger": "GetMousePosition", "contents": "GetMousePosition(${1:x}, ${2:y})"},
		{"trigger": "GetNumAudioInputs", "contents": "GetNumAudioInputs()"},
		{"trigger": "GetNumAudioOutputs", "contents": "GetNumAudioOutputs()"},
		{"trigger": "GetNumMIDIInputs", "contents": "GetNumMIDIInputs()"},
		{"trigger": "GetNumMIDIOutputs", "contents": "GetNumMIDIOutputs()"},
		{"trigger": "GetNumTracks", "contents": "GetNumTracks()"},
		{"trigger": "GetOS", "contents": "GetOS(${1:#retval})"},
		{"trigger": "GetOutputChannelName", "contents": "GetOutputChannelName(${1:#retval}, ${2:channelIndex})"},
		{"trigger": "GetOutputLatency", "contents": "GetOutputLatency()"},
		{"trigger": "GetParentTrack", "contents": "GetParentTrack(${1:track})"},
		{"trigger": "GetPeakFileName", "contents": "GetPeakFileName(${1:\"fn\"}, ${2:#buf})"},
		{"trigger": "GetPeakFileNameEx", "contents": "GetPeakFileNameEx(${1:\"fn\"}, ${2:#buf}, ${3:forWrite})"},
		{"trigger": "GetPeakFileNameEx2", "contents": "GetPeakFileNameEx2(${1:\"fn\"}, ${2:#buf}, ${3:forWrite}, ${4:\"peaksfileextension\"})"},
		{"trigger": "GetPlayPosition", "contents": "GetPlayPosition()"},
		{"trigger": "GetPlayPosition2", "contents": "GetPlayPosition2()"},
		{"trigger": "GetPlayPosition2Ex", "contents": "GetPlayPosition2Ex(${1:proj})"},
		{"trigger": "GetPlayPositionEx", "contents": "GetPlayPositionEx(${1:proj})"},
		{"trigger": "GetPlayState", "contents": "GetPlayState()"},
		{"trigger": "GetPlayStateEx", "contents": "GetPlayStateEx(${1:proj})"},
		{"trigger": "GetProjectLength", "contents": "GetProjectLength(${1:proj})"},
		{"trigger": "GetProjectName", "contents": "GetProjectName(${1:proj}, ${2:#buf})"},
		{"trigger": "GetProjectPath", "contents": "GetProjectPath(${1:#buf})"},
		{"trigger": "GetProjectPathEx", "contents": "GetProjectPathEx(${1:proj}, ${2:#buf})"},
		{"trigger": "GetProjectStateChangeCount", "contents": "GetProjectStateChangeCount(${1:proj})"},
		{"trigger": "GetProjectTimeOffset", "contents": "GetProjectTimeOffset(${1:proj}, ${2:rndframe})"},
		{"trigger": "GetProjectTimeSignature", "contents": "GetProjectTimeSignature(${1:bpm}, ${2:bpi})"},
		{"trigger": "GetProjectTimeSignature2", "contents": "GetProjectTimeSignature2(${1:proj}, ${2:bpm}, ${3:bpi})"},
		{"trigger": "GetProjExtState", "contents": "GetProjExtState(${1:proj}, ${2:\"extname\"}, ${3:\"key\"}, ${4:#val})"},
		{"trigger": "GetResourcePath", "contents": "GetResourcePath(${1:#retval})"},
		{"trigger": "GetSelectedEnvelope", "contents": "GetSelectedEnvelope(${1:proj})"},
		{"trigger": "GetSelectedMediaItem", "contents": "GetSelectedMediaItem(${1:proj}, ${2:selitem})"},
		{"trigger": "GetSelectedTrack", "contents": "GetSelectedTrack(${1:proj}, ${2:seltrackidx})"},
		{"trigger": "GetSelectedTrack2", "contents": "GetSelectedTrack2(${1:proj}, ${2:seltrackidx}, ${3:wantmaster})"},
		{"trigger": "GetSelectedTrackEnvelope", "contents": "GetSelectedTrackEnvelope(${1:proj})"},
		{"trigger": "GetSet_ArrangeView2", "contents": "GetSet_ArrangeView2(${1:proj}, ${2:isSet}, ${3:screen_x_start}, ${4:screen_x_end}, ${5:start_time}, ${6:end_time})"},
		{"trigger": "GetSet_LoopTimeRange", "contents": "GetSet_LoopTimeRange(${1:isSet}, ${2:isLoop}, ${3:start}, ${4:end}, ${5:allowautoseek})"},
		{"trigger": "GetSet_LoopTimeRange2", "contents": "GetSet_LoopTimeRange2(${1:proj}, ${2:isSet}, ${3:isLoop}, ${4:start}, ${5:end}, ${6:allowautoseek})"},
		{"trigger": "GetSetAutomationItemInfo", "contents": "GetSetAutomationItemInfo(${1:env}, ${2:autoitem_idx}, ${3:\"desc\"}, ${4:value}, ${5:is_set})"},
		{"trigger": "GetSetAutomationItemInfo_String", "contents": "GetSetAutomationItemInfo_String(${1:env}, ${2:autoitem_idx}, ${3:\"desc\"}, ${4:#valuestrNeedBig}, ${5:is_set})"},
		{"trigger": "GetSetEnvelopeInfo_String", "contents": "GetSetEnvelopeInfo_String(${1:env}, ${2:\"parmname\"}, ${3:#stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "GetSetEnvelopeState", "contents": "GetSetEnvelopeState(${1:env}, ${2:#str})"},
		{"trigger": "GetSetEnvelopeState2", "contents": "GetSetEnvelopeState2(${1:env}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetSetItemState", "contents": "GetSetItemState(${1:item}, ${2:#str})"},
		{"trigger": "GetSetItemState2", "contents": "GetSetItemState2(${1:item}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetSetMediaItemInfo_String", "contents": "GetSetMediaItemInfo_String(${1:item}, ${2:\"parmname\"}, ${3:#stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "GetSetMediaItemTakeInfo_String", "contents": "GetSetMediaItemTakeInfo_String(${1:tk}, ${2:\"parmname\"}, ${3:#stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "GetSetMediaTrackInfo_String", "contents": "GetSetMediaTrackInfo_String(${1:tr}, ${2:\"parmname\"}, ${3:#stringNeedBig}, ${4:setNewValue})"},
		{"trigger": "GetSetProjectAuthor", "contents": "GetSetProjectAuthor(${1:proj}, ${2:set}, ${3:#author})"},
		{"trigger": "GetSetProjectGrid", "contents": "GetSetProjectGrid(${1:project}, ${2:set}, ${3:division}, ${4:swingmode}, ${5:swingamt})"},
		{"trigger": "GetSetProjectInfo", "contents": "GetSetProjectInfo(${1:project}, ${2:\"desc\"}, ${3:value}, ${4:is_set})"},
		{"trigger": "GetSetProjectInfo_String", "contents": "GetSetProjectInfo_String(${1:project}, ${2:\"desc\"}, ${3:#valuestrNeedBig}, ${4:is_set})"},
		{"trigger": "GetSetProjectNotes", "contents": "GetSetProjectNotes(${1:proj}, ${2:set}, ${3:#notes})"},
		{"trigger": "GetSetRepeat", "contents": "GetSetRepeat(${1:val})"},
		{"trigger": "GetSetRepeatEx", "contents": "GetSetRepeatEx(${1:proj}, ${2:val})"},
		{"trigger": "GetSetTrackGroupMembership", "contents": "GetSetTrackGroupMembership(${1:tr}, ${2:\"groupname\"}, ${3:setmask}, ${4:setvalue})"},
		{"trigger": "GetSetTrackGroupMembershipHigh", "contents": "GetSetTrackGroupMembershipHigh(${1:tr}, ${2:\"groupname\"}, ${3:setmask}, ${4:setvalue})"},
		{"trigger": "GetSetTrackSendInfo_String", "contents": "GetSetTrackSendInfo_String(${1:tr}, ${2:category}, ${3:sendidx}, ${4:\"parmname\"}, ${5:#stringNeedBig}, ${6:setNewValue})"},
		{"trigger": "GetSetTrackState", "contents": "GetSetTrackState(${1:track}, ${2:#str})"},
		{"trigger": "GetSetTrackState2", "contents": "GetSetTrackState2(${1:track}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetSubProjectFromSource", "contents": "GetSubProjectFromSource(${1:src})"},
		{"trigger": "GetTake", "contents": "GetTake(${1:item}, ${2:takeidx})"},
		{"trigger": "GetTakeEnvelope", "contents": "GetTakeEnvelope(${1:take}, ${2:envidx})"},
		{"trigger": "GetTakeEnvelopeByName", "contents": "GetTakeEnvelopeByName(${1:take}, ${2:\"envname\"})"},
		{"trigger": "GetTakeName", "contents": "GetTakeName(${1:#retval}, ${2:take})"},
		{"trigger": "GetTakeNumStretchMarkers", "contents": "GetTakeNumStretchMarkers(${1:take})"},
		{"trigger": "GetTakeStretchMarker", "contents": "GetTakeStretchMarker(${1:take}, ${2:idx}, ${3:pos}, ${4:srcpos})"},
		{"trigger": "GetTakeStretchMarkerSlope", "contents": "GetTakeStretchMarkerSlope(${1:take}, ${2:idx})"},
		{"trigger": "GetTCPFXParm", "contents": "GetTCPFXParm(${1:project}, ${2:track}, ${3:index}, ${4:fxindex}, ${5:parmidx})"},
		{"trigger": "GetTempoMatchPlayRate", "contents": "GetTempoMatchPlayRate(${1:source}, ${2:srcscale}, ${3:position}, ${4:mult}, ${5:rate}, ${6:targetlen})"},
		{"trigger": "GetTempoTimeSigMarker", "contents": "GetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timepos}, ${4:measurepos}, ${5:beatpos}, ${6:bpm}, ${7:timesig_num}, ${8:timesig_denom}, ${9:lineartempo})"},
		{"trigger": "GetToggleCommandState", "contents": "GetToggleCommandState(${1:command_id})"},
		{"trigger": "GetToggleCommandStateEx", "contents": "GetToggleCommandStateEx(${1:section_id}, ${2:command_id})"},
		{"trigger": "GetTooltipWindow", "contents": "GetTooltipWindow()"},
		{"trigger": "GetTrack", "contents": "GetTrack(${1:proj}, ${2:trackidx})"},
		{"trigger": "GetTrackAutomationMode", "contents": "GetTrackAutomationMode(${1:tr})"},
		{"trigger": "GetTrackColor", "contents": "GetTrackColor(${1:track})"},
		{"trigger": "GetTrackDepth", "contents": "GetTrackDepth(${1:track})"},
		{"trigger": "GetTrackEnvelope", "contents": "GetTrackEnvelope(${1:track}, ${2:envidx})"},
		{"trigger": "GetTrackEnvelopeByChunkName", "contents": "GetTrackEnvelopeByChunkName(${1:tr}, ${2:\"cfgchunkname\"})"},
		{"trigger": "GetTrackEnvelopeByName", "contents": "GetTrackEnvelopeByName(${1:track}, ${2:\"envname\"})"},
		{"trigger": "GetTrackFromPoint", "contents": "GetTrackFromPoint(${1:screen_x}, ${2:screen_y}, ${3:info})"},
		{"trigger": "GetTrackGUID", "contents": "GetTrackGUID(${1:#retguid}, ${2:tr})"},
		{"trigger": "GetTrackMediaItem", "contents": "GetTrackMediaItem(${1:tr}, ${2:itemidx})"},
		{"trigger": "GetTrackMIDILyrics", "contents": "GetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:#bufWant})"},
		{"trigger": "GetTrackMIDINoteName", "contents": "GetTrackMIDINoteName(${1:#retval}, ${2:track}, ${3:pitch}, ${4:chan})"},
		{"trigger": "GetTrackMIDINoteNameEx", "contents": "GetTrackMIDINoteNameEx(${1:#retval}, ${2:proj}, ${3:track}, ${4:pitch}, ${5:chan})"},
		{"trigger": "GetTrackMIDINoteRange", "contents": "GetTrackMIDINoteRange(${1:proj}, ${2:track}, ${3:note_lo}, ${4:note_hi})"},
		{"trigger": "GetTrackName", "contents": "GetTrackName(${1:track}, ${2:#buf})"},
		{"trigger": "GetTrackNumMediaItems", "contents": "GetTrackNumMediaItems(${1:tr})"},
		{"trigger": "GetTrackNumSends", "contents": "GetTrackNumSends(${1:tr}, ${2:category})"},
		{"trigger": "GetTrackReceiveName", "contents": "GetTrackReceiveName(${1:track}, ${2:recv_index}, ${3:#buf})"},
		{"trigger": "GetTrackReceiveUIMute", "contents": "GetTrackReceiveUIMute(${1:track}, ${2:recv_index}, ${3:mute})"},
		{"trigger": "GetTrackReceiveUIVolPan", "contents": "GetTrackReceiveUIVolPan(${1:track}, ${2:recv_index}, ${3:volume}, ${4:pan})"},
		{"trigger": "GetTrackSendInfo_Value", "contents": "GetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:\"parmname\"})"},
		{"trigger": "GetTrackSendName", "contents": "GetTrackSendName(${1:track}, ${2:send_index}, ${3:#buf})"},
		{"trigger": "GetTrackSendUIMute", "contents": "GetTrackSendUIMute(${1:track}, ${2:send_index}, ${3:mute})"},
		{"trigger": "GetTrackSendUIVolPan", "contents": "GetTrackSendUIVolPan(${1:track}, ${2:send_index}, ${3:volume}, ${4:pan})"},
		{"trigger": "GetTrackState", "contents": "GetTrackState(${1:#retval}, ${2:track}, ${3:flags})"},
		{"trigger": "GetTrackStateChunk", "contents": "GetTrackStateChunk(${1:track}, ${2:#str}, ${3:isundo})"},
		{"trigger": "GetTrackUIMute", "contents": "GetTrackUIMute(${1:track}, ${2:mute})"},
		{"trigger": "GetTrackUIPan", "contents": "GetTrackUIPan(${1:track}, ${2:pan1}, ${3:pan2}, ${4:panmode})"},
		{"trigger": "GetTrackUIVolPan", "contents": "GetTrackUIVolPan(${1:track}, ${2:volume}, ${3:pan})"},
		{"trigger": "GetUnderrunTime", "contents": "GetUnderrunTime(${1:audio_xrun}, ${2:media_xrun}, ${3:curtime})"},
		{"trigger": "GetUserFileNameForRead", "contents": "GetUserFileNameForRead(${1:#filenameNeed4096}, ${2:\"title\"}, ${3:\"defext\"})"},
		{"trigger": "GetUserInputs", "contents": "GetUserInputs(${1:\"title\"}, ${2:num_inputs}, ${3:\"captions_csv\"}, ${4:#retvals_csv})"},
		{"trigger": "gfx_arc", "contents": "gfx_arc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2}, ${6:antialias})"},
		{"trigger": "gfx_blit", "contents": "gfx_blit(${1:source}, ${2:}, ${3:}, ${4:}, ${5:}, ${6:}, ${7:}, ${8:}, ${9:}, ${10:}, ${11:}, ${12:}, ${13:})"},
		{"trigger": "gfx_blit", "contents": "gfx_blit(${1:source}, ${2:scale}, ${3:rotation})"},
		{"trigger": "gfx_blitext", "contents": "gfx_blitext(${1:source}, ${2:coordinatelist}, ${3:rotation})"},
		{"trigger": "gfx_blurto", "contents": "gfx_blurto(${1:x}, ${2:y})"},
		{"trigger": "gfx_circle", "contents": "gfx_circle(${1:x}, ${2:y}, ${3:r}, ${4:fill}, ${5:antialias})"},
		{"trigger": "gfx_clienttoscreen", "contents": "gfx_clienttoscreen(${1:x}, ${2:y})"},
		{"trigger": "gfx_deltablit", "contents": "gfx_deltablit(${1:srcimg}, ${2:srcs}, ${3:srct}, ${4:srcw}, ${5:srch}, ${6:destx}, ${7:desty}, ${8:destw}, ${9:desth}, ${10:dsdx}, ${11:dtdx}, ${12:dsdy}, ${13:dtdy}, ${14:dsdxdy}, ${15:dtdxdy}, ${16:usecliprect=1})"},
		{"trigger": "gfx_dock", "contents": "gfx_dock(${1:v}, ${2:wx}, ${3:wy}, ${4:ww}, ${5:wh})"},
		{"trigger": "gfx_drawchar", "contents": "gfx_drawchar(${1:char})"},
		{"trigger": "gfx_drawnumber", "contents": "gfx_drawnumber(${1:n}, ${2:ndigits})"},
		{"trigger": "gfx_drawstr", "contents": "gfx_drawstr(${1:\"str\"}, ${2:flags}, ${3:right}, ${4:bottom})"},
		{"trigger": "gfx_getchar", "contents": "gfx_getchar(${1:char})"},
		{"trigger": "gfx_getdropfile", "contents": "gfx_getdropfile(${1:idx}, ${2:#str})"},
		{"trigger": "gfx_getfont", "contents": "gfx_getfont(${1:#str})"},
		{"trigger": "gfx_getimgdim", "contents": "gfx_getimgdim(${1:image}, ${2:w}, ${3:h})"},
		{"trigger": "gfx_getpixel", "contents": "gfx_getpixel(${1:r}, ${2:g}, ${3:b})"},
		{"trigger": "gfx_gradrect", "contents": "gfx_gradrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:}, ${6:g}, ${7:b}, ${8:a}, ${9:}, ${10:}, ${11:}, ${12:}, ${13:}, ${14:}, ${15:}, ${16:})"},
		{"trigger": "gfx_init", "contents": "gfx_init(${1:\"name\"}, ${2:width}, ${3:height}, ${4:dockstate}, ${5:xpos}, ${6:ypos})"},
		{"trigger": "gfx_line", "contents": "gfx_line(${1:x}, ${2:y}, ${3:x2}, ${4:y2}, ${5:aa})"},
		{"trigger": "gfx_lineto", "contents": "gfx_lineto(${1:x}, ${2:y}, ${3:aa})"},
		{"trigger": "gfx_loadimg", "contents": "gfx_loadimg(${1:image}, ${2:\"filename\"})"},
		{"trigger": "gfx_measurechar", "contents": "gfx_measurechar(${1:character}, ${2:w}, ${3:h})"},
		{"trigger": "gfx_measurestr", "contents": "gfx_measurestr(${1:\"str\"}, ${2:w}, ${3:h})"},
		{"trigger": "gfx_muladdrect", "contents": "gfx_muladdrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:mul_r}, ${6:mul_g}, ${7:mul_b}, ${8:mul_a}, ${9:add_r}, ${10:add_g}, ${11:add_b}, ${12:add_a})"},
		{"trigger": "gfx_printf", "contents": "gfx_printf(${1:\"format\"})"},
		{"trigger": "gfx_quit", "contents": "gfx_quit()"},
		{"trigger": "gfx_rect", "contents": "gfx_rect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:filled})"},
		{"trigger": "gfx_rectto", "contents": "gfx_rectto(${1:x}, ${2:y})"},
		{"trigger": "gfx_roundrect", "contents": "gfx_roundrect(${1:x}, ${2:y}, ${3:w}, ${4:h}, ${5:radius}, ${6:antialias})"},
		{"trigger": "gfx_screentoclient", "contents": "gfx_screentoclient(${1:x}, ${2:y})"},
		{"trigger": "gfx_set", "contents": "gfx_set(${1:r}, ${2:g}, ${3:b}, ${4:a}, ${5:mode}, ${6:dest}, ${7:a2})"},
		{"trigger": "gfx_setcursor", "contents": "gfx_setcursor(${1:resource_id}, ${2:custom_cursor_name})"},
		{"trigger": "gfx_setfont", "contents": "gfx_setfont(${1:idx}, ${2:\"fontface\"}, ${3:}, ${4:})"},
		{"trigger": "gfx_setimgdim", "contents": "gfx_setimgdim(${1:image}, ${2:w}, ${3:h})"},
		{"trigger": "gfx_setpixel", "contents": "gfx_setpixel(${1:r}, ${2:g}, ${3:b})"},
		{"trigger": "gfx_showmenu", "contents": "gfx_showmenu(${1:\"str\"})"},
		{"trigger": "gfx_transformblit", "contents": "gfx_transformblit(${1:srcimg}, ${2:destx}, ${3:desty}, ${4:destw}, ${5:desth}, ${6:div_w}, ${7:div_h}, ${8:table})"},
		{"trigger": "gfx_triangle", "contents": "gfx_triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3x4}, ${7:y4...})"},
		{"trigger": "gfx_update", "contents": "gfx_update()"},
		{"trigger": "GoToMarker", "contents": "GoToMarker(${1:proj}, ${2:marker_index}, ${3:use_timeline_order})"},
		{"trigger": "GoToRegion", "contents": "GoToRegion(${1:proj}, ${2:region_index}, ${3:use_timeline_order})"},
		{"trigger": "GR_SelectColor", "contents": "GR_SelectColor(${1:hwnd}, ${2:color})"},
		{"trigger": "GSC_mainwnd", "contents": "GSC_mainwnd(${1:t})"},
		{"trigger": "guidToString", "contents": "guidToString(${1:\"gGUID\"}, ${2:#destNeed64})"},
		{"trigger": "HasExtState", "contents": "HasExtState(${1:\"section\"}, ${2:\"key\"})"},
		{"trigger": "HasTrackMIDIPrograms", "contents": "HasTrackMIDIPrograms(${1:#retval}, ${2:track})"},
		{"trigger": "HasTrackMIDIProgramsEx", "contents": "HasTrackMIDIProgramsEx(${1:#retval}, ${2:proj}, ${3:track})"},
		{"trigger": "Help_Set", "contents": "Help_Set(${1:\"helpstring\"}, ${2:is_temporary_help})"},
		{"trigger": "ifft", "contents": "ifft(${1:buffer}, ${2:size})"},
		{"trigger": "ifft_real", "contents": "ifft_real(${1:buffer}, ${2:size})"},
		{"trigger": "image_resolve_fn", "contents": "image_resolve_fn(${1:\"in\"}, ${2:#out})"},
		{"trigger": "InsertAutomationItem", "contents": "InsertAutomationItem(${1:env}, ${2:pool_id}, ${3:position}, ${4:length})"},
		{"trigger": "InsertEnvelopePoint", "contents": "InsertEnvelopePoint(${1:envelope}, ${2:time}, ${3:value}, ${4:shape}, ${5:tension}, ${6:selected}, ${7:noSortIn})"},
		{"trigger": "InsertEnvelopePointEx", "contents": "InsertEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:time}, ${4:value}, ${5:shape}, ${6:tension}, ${7:selected}, ${8:noSortIn})"},
		{"trigger": "InsertMedia", "contents": "InsertMedia(${1:\"file\"}, ${2:mode})"},
		{"trigger": "InsertMediaSection", "contents": "InsertMediaSection(${1:\"file\"}, ${2:mode}, ${3:startpct}, ${4:endpct}, ${5:pitchshift})"},
		{"trigger": "InsertTrackAtIndex", "contents": "InsertTrackAtIndex(${1:idx}, ${2:wantDefaults})"},
		{"trigger": "invsqrt", "contents": "invsqrt(${1:value})"},
		{"trigger": "IsMediaExtension", "contents": "IsMediaExtension(${1:\"ext\"}, ${2:wantOthers})"},
		{"trigger": "IsMediaItemSelected", "contents": "IsMediaItemSelected(${1:item})"},
		{"trigger": "IsProjectDirty", "contents": "IsProjectDirty(${1:proj})"},
		{"trigger": "IsTrackSelected", "contents": "IsTrackSelected(${1:track})"},
		{"trigger": "IsTrackVisible", "contents": "IsTrackVisible(${1:track}, ${2:mixer})"},
		{"trigger": "joystick_create", "contents": "joystick_create(${1:\"guidGUID\"})"},
		{"trigger": "joystick_destroy", "contents": "joystick_destroy(${1:device})"},
		{"trigger": "joystick_enum", "contents": "joystick_enum(${1:#retval}, ${2:index}, ${3:namestr})"},
		{"trigger": "joystick_getaxis", "contents": "joystick_getaxis(${1:dev}, ${2:axis})"},
		{"trigger": "joystick_getbuttonmask", "contents": "joystick_getbuttonmask(${1:dev})"},
		{"trigger": "joystick_getinfo", "contents": "joystick_getinfo(${1:dev}, ${2:axes}, ${3:povs})"},
		{"trigger": "joystick_getpov", "contents": "joystick_getpov(${1:dev}, ${2:pov})"},
		{"trigger": "joystick_update", "contents": "joystick_update(${1:dev})"},
		{"trigger": "LICE_ClipLine", "contents": "LICE_ClipLine(${1:pX1}, ${2:pY1}, ${3:pX2}, ${4:pY2}, ${5:xLo}, ${6:yLo}, ${7:xHi}, ${8:yHi})"},
		{"trigger": "log", "contents": "log(${1:value})"},
		{"trigger": "log10", "contents": "log10(${1:value})"},
		{"trigger": "loop", "contents": "loop(${1:count}, ${2:expression})"},
		{"trigger": "Loop_OnArrow", "contents": "Loop_OnArrow(${1:project}, ${2:direction})"},
		{"trigger": "Main_OnCommand", "contents": "Main_OnCommand(${1:command}, ${2:flag})"},
		{"trigger": "Main_OnCommandEx", "contents": "Main_OnCommandEx(${1:command}, ${2:flag}, ${3:proj})"},
		{"trigger": "Main_openProject", "contents": "Main_openProject(${1:\"name\"})"},
		{"trigger": "Main_SaveProject", "contents": "Main_SaveProject(${1:proj}, ${2:forceSaveAsIn})"},
		{"trigger": "Main_UpdateLoopInfo", "contents": "Main_UpdateLoopInfo(${1:ignoremask})"},
		{"trigger": "MarkProjectDirty", "contents": "MarkProjectDirty(${1:proj})"},
		{"trigger": "MarkTrackItemsDirty", "contents": "MarkTrackItemsDirty(${1:track}, ${2:item})"},
		{"trigger": "Master_GetPlayRate", "contents": "Master_GetPlayRate(${1:project})"},
		{"trigger": "Master_GetPlayRateAtTime", "contents": "Master_GetPlayRateAtTime(${1:time_s}, ${2:proj})"},
		{"trigger": "Master_GetTempo", "contents": "Master_GetTempo()"},
		{"trigger": "Master_NormalizePlayRate", "contents": "Master_NormalizePlayRate(${1:playrate}, ${2:isnormalized})"},
		{"trigger": "Master_NormalizeTempo", "contents": "Master_NormalizeTempo(${1:bpm}, ${2:isnormalized})"},
		{"trigger": "match", "contents": "match(${1:\"needle\"}, ${2:\"haystack\"})"},
		{"trigger": "matchi", "contents": "matchi(${1:\"needle\"}, ${2:\"haystack\"})"},
		{"trigger": "max", "contents": "max(${1:value}, ${2:value})"},
		{"trigger": "MB", "contents": "MB(${1:\"msg\"}, ${2:\"title\"}, ${3:type})"},
		{"trigger": "MediaItemDescendsFromTrack", "contents": "MediaItemDescendsFromTrack(${1:item}, ${2:track})"},
		{"trigger": "mem_get_values", "contents": "mem_get_values(${1:offset}, ${2:})"},
		{"trigger": "mem_set_values", "contents": "mem_set_values(${1:offset}, ${2:})"},
		{"trigger": "memcpy", "contents": "memcpy(${1:dest}, ${2:src}, ${3:length})"},
		{"trigger": "memset", "contents": "memset(${1:offset}, ${2:value}, ${3:length})"},
		{"trigger": "MIDI_CountEvts", "contents": "MIDI_CountEvts(${1:take}, ${2:notecnt}, ${3:ccevtcnt}, ${4:textsyxevtcnt})"},
		{"trigger": "MIDI_DeleteCC", "contents": "MIDI_DeleteCC(${1:take}, ${2:ccidx})"},
		{"trigger": "MIDI_DeleteEvt", "contents": "MIDI_DeleteEvt(${1:take}, ${2:evtidx})"},
		{"trigger": "MIDI_DeleteNote", "contents": "MIDI_DeleteNote(${1:take}, ${2:noteidx})"},
		{"trigger": "MIDI_DeleteTextSysexEvt", "contents": "MIDI_DeleteTextSysexEvt(${1:take}, ${2:textsyxevtidx})"},
		{"trigger": "MIDI_DisableSort", "contents": "MIDI_DisableSort(${1:take})"},
		{"trigger": "MIDI_EnumSelCC", "contents": "MIDI_EnumSelCC(${1:take}, ${2:ccidx})"},
		{"trigger": "MIDI_EnumSelEvts", "contents": "MIDI_EnumSelEvts(${1:take}, ${2:evtidx})"},
		{"trigger": "MIDI_EnumSelNotes", "contents": "MIDI_EnumSelNotes(${1:take}, ${2:noteidx})"},
		{"trigger": "MIDI_EnumSelTextSysexEvts", "contents": "MIDI_EnumSelTextSysexEvts(${1:take}, ${2:textsyxidx})"},
		{"trigger": "MIDI_GetAllEvts", "contents": "MIDI_GetAllEvts(${1:take}, ${2:#buf})"},
		{"trigger": "MIDI_GetCC", "contents": "MIDI_GetCC(${1:take}, ${2:ccidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:chanmsg}, ${7:chan}, ${8:msg2}, ${9:msg3})"},
		{"trigger": "MIDI_GetEvt", "contents": "MIDI_GetEvt(${1:take}, ${2:evtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:#msg})"},
		{"trigger": "MIDI_GetGrid", "contents": "MIDI_GetGrid(${1:take}, ${2:swing}, ${3:noteLen})"},
		{"trigger": "MIDI_GetHash", "contents": "MIDI_GetHash(${1:take}, ${2:notesonly}, ${3:#hash})"},
		{"trigger": "MIDI_GetNote", "contents": "MIDI_GetNote(${1:take}, ${2:noteidx}, ${3:selected}, ${4:muted}, ${5:startppqpos}, ${6:endppqpos}, ${7:chan}, ${8:pitch}, ${9:vel})"},
		{"trigger": "MIDI_GetPPQPos_EndOfMeasure", "contents": "MIDI_GetPPQPos_EndOfMeasure(${1:take}, ${2:ppqpos})"},
		{"trigger": "MIDI_GetPPQPos_StartOfMeasure", "contents": "MIDI_GetPPQPos_StartOfMeasure(${1:take}, ${2:ppqpos})"},
		{"trigger": "MIDI_GetPPQPosFromProjQN", "contents": "MIDI_GetPPQPosFromProjQN(${1:take}, ${2:projqn})"},
		{"trigger": "MIDI_GetPPQPosFromProjTime", "contents": "MIDI_GetPPQPosFromProjTime(${1:take}, ${2:projtime})"},
		{"trigger": "MIDI_GetProjQNFromPPQPos", "contents": "MIDI_GetProjQNFromPPQPos(${1:take}, ${2:ppqpos})"},
		{"trigger": "MIDI_GetProjTimeFromPPQPos", "contents": "MIDI_GetProjTimeFromPPQPos(${1:take}, ${2:ppqpos})"},
		{"trigger": "MIDI_GetScale", "contents": "MIDI_GetScale(${1:take}, ${2:root}, ${3:scale}, ${4:#name})"},
		{"trigger": "MIDI_GetTextSysexEvt", "contents": "MIDI_GetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selected}, ${4:muted}, ${5:ppqpos}, ${6:type}, ${7:msg})"},
		{"trigger": "MIDI_GetTrackHash", "contents": "MIDI_GetTrackHash(${1:track}, ${2:notesonly}, ${3:#hash})"},
		{"trigger": "MIDI_InsertCC", "contents": "MIDI_InsertCC(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:chanmsg}, ${6:chan}, ${7:msg2}, ${8:msg3})"},
		{"trigger": "MIDI_InsertEvt", "contents": "MIDI_InsertEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:\"bytestr\"})"},
		{"trigger": "MIDI_InsertNote", "contents": "MIDI_InsertNote(${1:take}, ${2:selected}, ${3:muted}, ${4:startppqpos}, ${5:endppqpos}, ${6:chan}, ${7:pitch}, ${8:vel}, ${9:noSortIn})"},
		{"trigger": "MIDI_InsertTextSysexEvt", "contents": "MIDI_InsertTextSysexEvt(${1:take}, ${2:selected}, ${3:muted}, ${4:ppqpos}, ${5:type}, ${6:\"bytestr\"})"},
		{"trigger": "midi_reinit", "contents": "midi_reinit()"},
		{"trigger": "MIDI_SelectAll", "contents": "MIDI_SelectAll(${1:take}, ${2:select})"},
		{"trigger": "MIDI_SetAllEvts", "contents": "MIDI_SetAllEvts(${1:take}, ${2:\"buf\"})"},
		{"trigger": "MIDI_SetCC", "contents": "MIDI_SetCC(${1:take}, ${2:ccidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:chanmsgIn}, ${7:chanIn}, ${8:msg2In}, ${9:msg3In}, ${10:noSortIn})"},
		{"trigger": "MIDI_SetEvt", "contents": "MIDI_SetEvt(${1:take}, ${2:evtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:\"msg\"}, ${7:noSortIn})"},
		{"trigger": "MIDI_SetItemExtents", "contents": "MIDI_SetItemExtents(${1:item}, ${2:startQN}, ${3:endQN})"},
		{"trigger": "MIDI_SetNote", "contents": "MIDI_SetNote(${1:take}, ${2:noteidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:startppqposIn}, ${6:endppqposIn}, ${7:chanIn}, ${8:pitchIn}, ${9:velIn}, ${10:noSortIn})"},
		{"trigger": "MIDI_SetTextSysexEvt", "contents": "MIDI_SetTextSysexEvt(${1:take}, ${2:textsyxevtidx}, ${3:selectedIn}, ${4:mutedIn}, ${5:ppqposIn}, ${6:typeIn}, ${7:\"msg\"}, ${8:noSortIn})"},
		{"trigger": "MIDI_Sort", "contents": "MIDI_Sort(${1:take})"},
		{"trigger": "MIDIEditor_GetActive", "contents": "MIDIEditor_GetActive()"},
		{"trigger": "MIDIEditor_GetMode", "contents": "MIDIEditor_GetMode(${1:midieditor})"},
		{"trigger": "MIDIEditor_GetSetting_int", "contents": "MIDIEditor_GetSetting_int(${1:midieditor}, ${2:\"setting_desc\"})"},
		{"trigger": "MIDIEditor_GetSetting_str", "contents": "MIDIEditor_GetSetting_str(${1:midieditor}, ${2:\"setting_desc\"}, ${3:#buf})"},
		{"trigger": "MIDIEditor_GetTake", "contents": "MIDIEditor_GetTake(${1:midieditor})"},
		{"trigger": "MIDIEditor_LastFocused_OnCommand", "contents": "MIDIEditor_LastFocused_OnCommand(${1:command_id}, ${2:islistviewcommand})"},
		{"trigger": "MIDIEditor_OnCommand", "contents": "MIDIEditor_OnCommand(${1:midieditor}, ${2:command_id})"},
		{"trigger": "MIDIEditor_SetSetting_int", "contents": "MIDIEditor_SetSetting_int(${1:midieditor}, ${2:\"setting_desc\"}, ${3:setting})"},
		{"trigger": "min", "contents": "min(${1:value}, ${2:value})"},
		{"trigger": "mkpanstr", "contents": "mkpanstr(${1:#strNeed64}, ${2:pan})"},
		{"trigger": "mkvolpanstr", "contents": "mkvolpanstr(${1:#strNeed64}, ${2:vol}, ${3:pan})"},
		{"trigger": "mkvolstr", "contents": "mkvolstr(${1:#strNeed64}, ${2:vol})"},
		{"trigger": "MoveEditCursor", "contents": "MoveEditCursor(${1:adjamt}, ${2:dosel})"},
		{"trigger": "MoveMediaItemToTrack", "contents": "MoveMediaItemToTrack(${1:item}, ${2:desttr})"},
		{"trigger": "MuteAllTracks", "contents": "MuteAllTracks(${1:mute})"},
		{"trigger": "my_getViewport", "contents": "my_getViewport(${1:r.left}, ${2:r.top}, ${3:r.right}, ${4:r.bot}, ${5:sr.left}, ${6:sr.top}, ${7:sr.right}, ${8:sr.bot}, ${9:wantWorkArea})"},
		{"trigger": "NamedCommandLookup", "contents": "NamedCommandLookup(${1:\"command_name\"})"},
		{"trigger": "OnPauseButton", "contents": "OnPauseButton()"},
		{"trigger": "OnPauseButtonEx", "contents": "OnPauseButtonEx(${1:proj})"},
		{"trigger": "OnPlayButton", "contents": "OnPlayButton()"},
		{"trigger": "OnPlayButtonEx", "contents": "OnPlayButtonEx(${1:proj})"},
		{"trigger": "OnStopButton", "contents": "OnStopButton()"},
		{"trigger": "OnStopButtonEx", "contents": "OnStopButtonEx(${1:proj})"},
		{"trigger": "OpenColorThemeFile", "contents": "OpenColorThemeFile(${1:\"fn\"})"},
		{"trigger": "OpenMediaExplorer", "contents": "OpenMediaExplorer(${1:\"mediafn\"}, ${2:play})"},
		{"trigger": "OscLocalMessageToHost", "contents": "OscLocalMessageToHost(${1:\"message\"}, ${2:valueIn})"},
		{"trigger": "parse_timestr", "contents": "parse_timestr(${1:\"buf\"})"},
		{"trigger": "parse_timestr_len", "contents": "parse_timestr_len(${1:\"buf\"}, ${2:offset}, ${3:modeoverride})"},
		{"trigger": "parse_timestr_pos", "contents": "parse_timestr_pos(${1:\"buf\"}, ${2:modeoverride})"},
		{"trigger": "parsepanstr", "contents": "parsepanstr(${1:\"str\"})"},
		{"trigger": "PCM_Sink_Enum", "contents": "PCM_Sink_Enum(${1:idx}, ${2:#descstr})"},
		{"trigger": "PCM_Sink_GetExtension", "contents": "PCM_Sink_GetExtension(${1:#retval}, ${2:\"data\"})"},
		{"trigger": "PCM_Sink_ShowConfig", "contents": "PCM_Sink_ShowConfig(${1:\"cfg\"}, ${2:hwndParent})"},
		{"trigger": "PCM_Source_CreateFromFile", "contents": "PCM_Source_CreateFromFile(${1:\"filename\"})"},
		{"trigger": "PCM_Source_CreateFromFileEx", "contents": "PCM_Source_CreateFromFileEx(${1:\"filename\"}, ${2:forcenoMidiImp})"},
		{"trigger": "PCM_Source_CreateFromType", "contents": "PCM_Source_CreateFromType(${1:\"sourcetype\"})"},
		{"trigger": "PCM_Source_Destroy", "contents": "PCM_Source_Destroy(${1:src})"},
		{"trigger": "PCM_Source_GetPeaks", "contents": "PCM_Source_GetPeaks(${1:src}, ${2:peakrate}, ${3:starttime}, ${4:numchannels}, ${5:numsamplesperchannel}, ${6:want_extra_type}, ${7:buf})"},
		{"trigger": "PCM_Source_GetSectionInfo", "contents": "PCM_Source_GetSectionInfo(${1:src}, ${2:offs}, ${3:len}, ${4:rev})"},
		{"trigger": "PluginWantsAlwaysRunFx", "contents": "PluginWantsAlwaysRunFx(${1:amt})"},
		{"trigger": "PreventUIRefresh", "contents": "PreventUIRefresh(${1:prevent_count})"},
		{"trigger": "printf", "contents": "printf(${1:\"format\"})"},
		{"trigger": "rand", "contents": "rand(${1:max})"},
		{"trigger": "ReaScriptError", "contents": "ReaScriptError(${1:\"errmsg\"})"},
		{"trigger": "RecursiveCreateDirectory", "contents": "RecursiveCreateDirectory(${1:\"path\"}, ${2:ignored})"},
		{"trigger": "RefreshToolbar", "contents": "RefreshToolbar(${1:command_id})"},
		{"trigger": "RefreshToolbar2", "contents": "RefreshToolbar2(${1:section_id}, ${2:command_id})"},
		{"trigger": "relative_fn", "contents": "relative_fn(${1:\"in\"}, ${2:#out})"},
		{"trigger": "RemoveTrackSend", "contents": "RemoveTrackSend(${1:tr}, ${2:category}, ${3:sendidx})"},
		{"trigger": "RenderFileSection", "contents": "RenderFileSection(${1:\"source_filename\"}, ${2:\"target_filename\"}, ${3:start_percent}, ${4:end_percent}, ${5:playrate})"},
		{"trigger": "ReorderSelectedTracks", "contents": "ReorderSelectedTracks(${1:beforeTrackIdx}, ${2:makePrevFolder})"},
		{"trigger": "Resample_EnumModes", "contents": "Resample_EnumModes(${1:#retval}, ${2:mode})"},
		{"trigger": "resolve_fn", "contents": "resolve_fn(${1:\"in\"}, ${2:#out})"},
		{"trigger": "resolve_fn2", "contents": "resolve_fn2(${1:\"in\"}, ${2:#out}, ${3:\"checkSubDir\"})"},
		{"trigger": "ReverseNamedCommandLookup", "contents": "ReverseNamedCommandLookup(${1:#retval}, ${2:command_id})"},
		{"trigger": "runloop", "contents": "runloop(${1:\"code\"})"},
		{"trigger": "ScaleFromEnvelopeMode", "contents": "ScaleFromEnvelopeMode(${1:scaling_mode}, ${2:val})"},
		{"trigger": "ScaleToEnvelopeMode", "contents": "ScaleToEnvelopeMode(${1:scaling_mode}, ${2:val})"},
		{"trigger": "SelectAllMediaItems", "contents": "SelectAllMediaItems(${1:proj}, ${2:selected})"},
		{"trigger": "SelectProjectInstance", "contents": "SelectProjectInstance(${1:proj})"},
		{"trigger": "SetActiveTake", "contents": "SetActiveTake(${1:take})"},
		{"trigger": "SetAutomationMode", "contents": "SetAutomationMode(${1:mode}, ${2:onlySel})"},
		{"trigger": "SetCurrentBPM", "contents": "SetCurrentBPM(${1:__proj}, ${2:bpm}, ${3:wantUndo})"},
		{"trigger": "SetCursorContext", "contents": "SetCursorContext(${1:mode}, ${2:envIn})"},
		{"trigger": "SetEditCurPos", "contents": "SetEditCurPos(${1:time}, ${2:moveview}, ${3:seekplay})"},
		{"trigger": "SetEditCurPos2", "contents": "SetEditCurPos2(${1:proj}, ${2:time}, ${3:moveview}, ${4:seekplay})"},
		{"trigger": "SetEnvelopePoint", "contents": "SetEnvelopePoint(${1:envelope}, ${2:ptidx}, ${3:timeIn}, ${4:valueIn}, ${5:shapeIn}, ${6:tensionIn}, ${7:selectedIn}, ${8:noSortIn})"},
		{"trigger": "SetEnvelopePointEx", "contents": "SetEnvelopePointEx(${1:envelope}, ${2:autoitem_idx}, ${3:ptidx}, ${4:timeIn}, ${5:valueIn}, ${6:shapeIn}, ${7:tensionIn}, ${8:selectedIn}, ${9:noSortIn})"},
		{"trigger": "SetEnvelopeStateChunk", "contents": "SetEnvelopeStateChunk(${1:env}, ${2:\"str\"}, ${3:isundo})"},
		{"trigger": "SetExtState", "contents": "SetExtState(${1:\"section\"}, ${2:\"key\"}, ${3:\"value\"}, ${4:persist})"},
		{"trigger": "SetGlobalAutomationOverride", "contents": "SetGlobalAutomationOverride(${1:mode})"},
		{"trigger": "SetItemStateChunk", "contents": "SetItemStateChunk(${1:item}, ${2:\"str\"}, ${3:isundo})"},
		{"trigger": "SetMasterTrackVisibility", "contents": "SetMasterTrackVisibility(${1:flag})"},
		{"trigger": "SetMediaItemInfo_Value", "contents": "SetMediaItemInfo_Value(${1:item}, ${2:\"parmname\"}, ${3:newvalue})"},
		{"trigger": "SetMediaItemLength", "contents": "SetMediaItemLength(${1:item}, ${2:length}, ${3:refreshUI})"},
		{"trigger": "SetMediaItemPosition", "contents": "SetMediaItemPosition(${1:item}, ${2:position}, ${3:refreshUI})"},
		{"trigger": "SetMediaItemSelected", "contents": "SetMediaItemSelected(${1:item}, ${2:selected})"},
		{"trigger": "SetMediaItemTake_Source", "contents": "SetMediaItemTake_Source(${1:take}, ${2:source})"},
		{"trigger": "SetMediaItemTakeInfo_Value", "contents": "SetMediaItemTakeInfo_Value(${1:take}, ${2:\"parmname\"}, ${3:newvalue})"},
		{"trigger": "SetMediaTrackInfo_Value", "contents": "SetMediaTrackInfo_Value(${1:tr}, ${2:\"parmname\"}, ${3:newvalue})"},
		{"trigger": "SetMIDIEditorGrid", "contents": "SetMIDIEditorGrid(${1:project}, ${2:division})"},
		{"trigger": "SetMixerScroll", "contents": "SetMixerScroll(${1:leftmosttrack})"},
		{"trigger": "SetMouseModifier", "contents": "SetMouseModifier(${1:\"context\"}, ${2:modifier_flag}, ${3:\"action\"})"},
		{"trigger": "SetOnlyTrackSelected", "contents": "SetOnlyTrackSelected(${1:track})"},
		{"trigger": "SetProjectGrid", "contents": "SetProjectGrid(${1:project}, ${2:division})"},
		{"trigger": "SetProjectMarker", "contents": "SetProjectMarker(${1:markrgnindexnumber}, ${2:isrgn}, ${3:pos}, ${4:rgnend}, ${5:\"name\"})"},
		{"trigger": "SetProjectMarker2", "contents": "SetProjectMarker2(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:\"name\"})"},
		{"trigger": "SetProjectMarker3", "contents": "SetProjectMarker3(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:\"name\"}, ${7:color})"},
		{"trigger": "SetProjectMarker4", "contents": "SetProjectMarker4(${1:proj}, ${2:markrgnindexnumber}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:\"name\"}, ${7:color}, ${8:flags})"},
		{"trigger": "SetProjectMarkerByIndex", "contents": "SetProjectMarkerByIndex(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:\"name\"}, ${8:color})"},
		{"trigger": "SetProjectMarkerByIndex2", "contents": "SetProjectMarkerByIndex2(${1:proj}, ${2:markrgnidx}, ${3:isrgn}, ${4:pos}, ${5:rgnend}, ${6:IDnumber}, ${7:\"name\"}, ${8:color}, ${9:flags})"},
		{"trigger": "SetProjExtState", "contents": "SetProjExtState(${1:proj}, ${2:\"extname\"}, ${3:\"key\"}, ${4:\"value\"})"},
		{"trigger": "SetRegionRenderMatrix", "contents": "SetRegionRenderMatrix(${1:proj}, ${2:regionindex}, ${3:track}, ${4:addorremove})"},
		{"trigger": "SetTakeStretchMarker", "contents": "SetTakeStretchMarker(${1:take}, ${2:idx}, ${3:pos}, ${4:srcposIn})"},
		{"trigger": "SetTakeStretchMarkerSlope", "contents": "SetTakeStretchMarkerSlope(${1:take}, ${2:idx}, ${3:slope})"},
		{"trigger": "SetTempoTimeSigMarker", "contents": "SetTempoTimeSigMarker(${1:proj}, ${2:ptidx}, ${3:timepos}, ${4:measurepos}, ${5:beatpos}, ${6:bpm}, ${7:timesig_num}, ${8:timesig_denom}, ${9:lineartempo})"},
		{"trigger": "SetToggleCommandState", "contents": "SetToggleCommandState(${1:section_id}, ${2:command_id}, ${3:state})"},
		{"trigger": "SetTrackAutomationMode", "contents": "SetTrackAutomationMode(${1:tr}, ${2:mode})"},
		{"trigger": "SetTrackColor", "contents": "SetTrackColor(${1:track}, ${2:color})"},
		{"trigger": "SetTrackMIDILyrics", "contents": "SetTrackMIDILyrics(${1:track}, ${2:flag}, ${3:\"str\"})"},
		{"trigger": "SetTrackMIDINoteName", "contents": "SetTrackMIDINoteName(${1:track}, ${2:pitch}, ${3:chan}, ${4:\"name\"})"},
		{"trigger": "SetTrackMIDINoteNameEx", "contents": "SetTrackMIDINoteNameEx(${1:proj}, ${2:track}, ${3:pitch}, ${4:chan}, ${5:\"name\"})"},
		{"trigger": "SetTrackSelected", "contents": "SetTrackSelected(${1:track}, ${2:selected})"},
		{"trigger": "SetTrackSendInfo_Value", "contents": "SetTrackSendInfo_Value(${1:tr}, ${2:category}, ${3:sendidx}, ${4:\"parmname\"}, ${5:newvalue})"},
		{"trigger": "SetTrackSendUIPan", "contents": "SetTrackSendUIPan(${1:track}, ${2:send_idx}, ${3:pan}, ${4:isend})"},
		{"trigger": "SetTrackSendUIVol", "contents": "SetTrackSendUIVol(${1:track}, ${2:send_idx}, ${3:vol}, ${4:isend})"},
		{"trigger": "SetTrackStateChunk", "contents": "SetTrackStateChunk(${1:track}, ${2:\"str\"}, ${3:isundo})"},
		{"trigger": "ShowActionList", "contents": "ShowActionList(${1:caller}, ${2:callerWnd})"},
		{"trigger": "ShowConsoleMsg", "contents": "ShowConsoleMsg(${1:\"msg\"})"},
		{"trigger": "ShowMessageBox", "contents": "ShowMessageBox(${1:\"msg\"}, ${2:\"title\"}, ${3:type})"},
		{"trigger": "ShowPopupMenu", "contents": "ShowPopupMenu(${1:\"name\"}, ${2:x}, ${3:y}, ${4:hwndParent}, ${5:ctx}, ${6:ctx2}, ${7:ctx3})"},
		{"trigger": "sign", "contents": "sign(${1:value})"},
		{"trigger": "sin", "contents": "sin(${1:angle})"},
		{"trigger": "sleep", "contents": "sleep(${1:ms})"},
		{"trigger": "SLIDER2DB", "contents": "SLIDER2DB(${1:y})"},
		{"trigger": "SnapToGrid", "contents": "SnapToGrid(${1:project}, ${2:time_pos})"},
		{"trigger": "SoloAllTracks", "contents": "SoloAllTracks(${1:solo})"},
		{"trigger": "Splash_GetWnd", "contents": "Splash_GetWnd()"},
		{"trigger": "SplitMediaItem", "contents": "SplitMediaItem(${1:item}, ${2:position})"},
		{"trigger": "sprintf", "contents": "sprintf(${1:#dest}, ${2:\"format\"})"},
		{"trigger": "sqr", "contents": "sqr(${1:value})"},
		{"trigger": "sqrt", "contents": "sqrt(${1:value})"},
		{"trigger": "stack_exch", "contents": "stack_exch(${1:value})"},
		{"trigger": "stack_peek", "contents": "stack_peek(${1:index})"},
		{"trigger": "stack_pop", "contents": "stack_pop(${1:value})"},
		{"trigger": "stack_push", "contents": "stack_push(${1:value})"},
		{"trigger": "str_delsub", "contents": "str_delsub(${1:#str}, ${2:pos}, ${3:len})"},
		{"trigger": "str_getchar", "contents": "str_getchar(${1:\"str\"}, ${2:offset}, ${3:type})"},
		{"trigger": "str_insert", "contents": "str_insert(${1:#str}, ${2:\"srcstr\"}, ${3:pos})"},
		{"trigger": "str_setchar", "contents": "str_setchar(${1:#str}, ${2:offset}, ${3:val}, ${4:type})"},
		{"trigger": "str_setlen", "contents": "str_setlen(${1:#str}, ${2:len})"},
		{"trigger": "strcat", "contents": "strcat(${1:#str}, ${2:\"srcstr\"})"},
		{"trigger": "strcmp", "contents": "strcmp(${1:\"str\"}, ${2:\"str2\"})"},
		{"trigger": "strcpy", "contents": "strcpy(${1:#str}, ${2:\"srcstr\"})"},
		{"trigger": "strcpy_from", "contents": "strcpy_from(${1:#str}, ${2:\"srcstr\"}, ${3:offset})"},
		{"trigger": "strcpy_substr", "contents": "strcpy_substr(${1:#str}, ${2:\"srcstr\"}, ${3:offs}, ${4:ml})"},
		{"trigger": "stricmp", "contents": "stricmp(${1:\"str\"}, ${2:\"str2\"})"},
		{"trigger": "stringToGuid", "contents": "stringToGuid(${1:\"str\"}, ${2:#gGUID})"},
		{"trigger": "strlen", "contents": "strlen(${1:\"str\"})"},
		{"trigger": "strncat", "contents": "strncat(${1:#str}, ${2:\"srcstr\"}, ${3:maxlen})"},
		{"trigger": "strncmp", "contents": "strncmp(${1:\"str\"}, ${2:\"str2\"}, ${3:maxlen})"},
		{"trigger": "strncpy", "contents": "strncpy(${1:#str}, ${2:\"srcstr\"}, ${3:maxlen})"},
		{"trigger": "strnicmp", "contents": "strnicmp(${1:\"str\"}, ${2:\"str2\"}, ${3:maxlen})"},
		{"trigger": "StuffMIDIMessage", "contents": "StuffMIDIMessage(${1:mode}, ${2:msg1}, ${3:msg2}, ${4:msg3})"},
		{"trigger": "TakeFX_AddByName", "contents": "TakeFX_AddByName(${1:take}, ${2:\"fxname\"}, ${3:instantiate})"},
		{"trigger": "TakeFX_CopyToTake", "contents": "TakeFX_CopyToTake(${1:src_take}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "TakeFX_CopyToTrack", "contents": "TakeFX_CopyToTrack(${1:src_take}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "TakeFX_Delete", "contents": "TakeFX_Delete(${1:take}, ${2:fx})"},
		{"trigger": "TakeFX_EndParamEdit", "contents": "TakeFX_EndParamEdit(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "TakeFX_FormatParamValue", "contents": "TakeFX_FormatParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:val}, ${5:#buf})"},
		{"trigger": "TakeFX_FormatParamValueNormalized", "contents": "TakeFX_FormatParamValueNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value}, ${5:#buf})"},
		{"trigger": "TakeFX_GetChainVisible", "contents": "TakeFX_GetChainVisible(${1:take})"},
		{"trigger": "TakeFX_GetCount", "contents": "TakeFX_GetCount(${1:take})"},
		{"trigger": "TakeFX_GetEnabled", "contents": "TakeFX_GetEnabled(${1:take}, ${2:fx})"},
		{"trigger": "TakeFX_GetEnvelope", "contents": "TakeFX_GetEnvelope(${1:take}, ${2:fxindex}, ${3:parameterindex}, ${4:create})"},
		{"trigger": "TakeFX_GetFloatingWindow", "contents": "TakeFX_GetFloatingWindow(${1:take}, ${2:index})"},
		{"trigger": "TakeFX_GetFormattedParamValue", "contents": "TakeFX_GetFormattedParamValue(${1:take}, ${2:fx}, ${3:param}, ${4:#buf})"},
		{"trigger": "TakeFX_GetFXGUID", "contents": "TakeFX_GetFXGUID(${1:#retguid}, ${2:take}, ${3:fx})"},
		{"trigger": "TakeFX_GetFXName", "contents": "TakeFX_GetFXName(${1:take}, ${2:fx}, ${3:#buf})"},
		{"trigger": "TakeFX_GetIOSize", "contents": "TakeFX_GetIOSize(${1:take}, ${2:fx}, ${3:inputPins}, ${4:outputPins})"},
		{"trigger": "TakeFX_GetNamedConfigParm", "contents": "TakeFX_GetNamedConfigParm(${1:take}, ${2:fx}, ${3:\"parmname\"}, ${4:#buf})"},
		{"trigger": "TakeFX_GetNumParams", "contents": "TakeFX_GetNumParams(${1:take}, ${2:fx})"},
		{"trigger": "TakeFX_GetOffline", "contents": "TakeFX_GetOffline(${1:take}, ${2:fx})"},
		{"trigger": "TakeFX_GetOpen", "contents": "TakeFX_GetOpen(${1:take}, ${2:fx})"},
		{"trigger": "TakeFX_GetParam", "contents": "TakeFX_GetParam(${1:take}, ${2:fx}, ${3:param}, ${4:minval}, ${5:maxval})"},
		{"trigger": "TakeFX_GetParameterStepSizes", "contents": "TakeFX_GetParameterStepSizes(${1:take}, ${2:fx}, ${3:param}, ${4:step}, ${5:smallstep}, ${6:largestep}, ${7:istoggle})"},
		{"trigger": "TakeFX_GetParamEx", "contents": "TakeFX_GetParamEx(${1:take}, ${2:fx}, ${3:param}, ${4:minval}, ${5:maxval}, ${6:midval})"},
		{"trigger": "TakeFX_GetParamName", "contents": "TakeFX_GetParamName(${1:take}, ${2:fx}, ${3:param}, ${4:#buf})"},
		{"trigger": "TakeFX_GetParamNormalized", "contents": "TakeFX_GetParamNormalized(${1:take}, ${2:fx}, ${3:param})"},
		{"trigger": "TakeFX_GetPinMappings", "contents": "TakeFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:high32})"},
		{"trigger": "TakeFX_GetPreset", "contents": "TakeFX_GetPreset(${1:take}, ${2:fx}, ${3:#presetname})"},
		{"trigger": "TakeFX_GetPresetIndex", "contents": "TakeFX_GetPresetIndex(${1:take}, ${2:fx}, ${3:numberOfPresets})"},
		{"trigger": "TakeFX_GetUserPresetFilename", "contents": "TakeFX_GetUserPresetFilename(${1:take}, ${2:fx}, ${3:#fn})"},
		{"trigger": "TakeFX_NavigatePresets", "contents": "TakeFX_NavigatePresets(${1:take}, ${2:fx}, ${3:presetmove})"},
		{"trigger": "TakeFX_SetEnabled", "contents": "TakeFX_SetEnabled(${1:take}, ${2:fx}, ${3:enabled})"},
		{"trigger": "TakeFX_SetNamedConfigParm", "contents": "TakeFX_SetNamedConfigParm(${1:take}, ${2:fx}, ${3:\"parmname\"}, ${4:\"value\"})"},
		{"trigger": "TakeFX_SetOffline", "contents": "TakeFX_SetOffline(${1:take}, ${2:fx}, ${3:offline})"},
		{"trigger": "TakeFX_SetOpen", "contents": "TakeFX_SetOpen(${1:take}, ${2:fx}, ${3:open})"},
		{"trigger": "TakeFX_SetParam", "contents": "TakeFX_SetParam(${1:take}, ${2:fx}, ${3:param}, ${4:val})"},
		{"trigger": "TakeFX_SetParamNormalized", "contents": "TakeFX_SetParamNormalized(${1:take}, ${2:fx}, ${3:param}, ${4:value})"},
		{"trigger": "TakeFX_SetPinMappings", "contents": "TakeFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"},
		{"trigger": "TakeFX_SetPreset", "contents": "TakeFX_SetPreset(${1:take}, ${2:fx}, ${3:\"presetname\"})"},
		{"trigger": "TakeFX_SetPresetByIndex", "contents": "TakeFX_SetPresetByIndex(${1:take}, ${2:fx}, ${3:idx})"},
		{"trigger": "TakeFX_Show", "contents": "TakeFX_Show(${1:take}, ${2:index}, ${3:showFlag})"},
		{"trigger": "TakeIsMIDI", "contents": "TakeIsMIDI(${1:take})"},
		{"trigger": "tan", "contents": "tan(${1:angle})"},
		{"trigger": "tcp_close", "contents": "tcp_close(${1:connection})"},
		{"trigger": "tcp_connect", "contents": "tcp_connect(${1:\"address\"}, ${2:port}, ${3:block})"},
		{"trigger": "tcp_listen", "contents": "tcp_listen(${1:port}, ${2:\"interface\"}, ${3:#ip_out})"},
		{"trigger": "tcp_listen_end", "contents": "tcp_listen_end(${1:port})"},
		{"trigger": "tcp_recv", "contents": "tcp_recv(${1:connection}, ${2:#str}, ${3:maxlen})"},
		{"trigger": "tcp_send", "contents": "tcp_send(${1:connection}, ${2:\"str\"}, ${3:len})"},
		{"trigger": "tcp_set_block", "contents": "tcp_set_block(${1:connection}, ${2:block})"},
		{"trigger": "ThemeLayout_GetLayout", "contents": "ThemeLayout_GetLayout(${1:\"section\"}, ${2:idx}, ${3:#name})"},
		{"trigger": "ThemeLayout_GetParameter", "contents": "ThemeLayout_GetParameter(${1:#retval}, ${2:wp}, ${3:desc}, ${4:value}, ${5:defValue}, ${6:minValue}, ${7:maxValue})"},
		{"trigger": "ThemeLayout_RefreshAll", "contents": "ThemeLayout_RefreshAll()"},
		{"trigger": "ThemeLayout_SetLayout", "contents": "ThemeLayout_SetLayout(${1:\"section\"}, ${2:\" \"})"},
		{"trigger": "ThemeLayout_SetParameter", "contents": "ThemeLayout_SetParameter(${1:wp}, ${2:value}, ${3:persist})"},
		{"trigger": "time", "contents": "time(${1:val})"},
		{"trigger": "time_precise", "contents": "time_precise(${1:val})"},
		{"trigger": "TimeMap2_beatsToTime", "contents": "TimeMap2_beatsToTime(${1:proj}, ${2:tpos}, ${3:measuresIn})"},
		{"trigger": "TimeMap2_GetDividedBpmAtTime", "contents": "TimeMap2_GetDividedBpmAtTime(${1:proj}, ${2:time})"},
		{"trigger": "TimeMap2_GetNextChangeTime", "contents": "TimeMap2_GetNextChangeTime(${1:proj}, ${2:time})"},
		{"trigger": "TimeMap2_QNToTime", "contents": "TimeMap2_QNToTime(${1:proj}, ${2:qn})"},
		{"trigger": "TimeMap2_timeToBeats", "contents": "TimeMap2_timeToBeats(${1:proj}, ${2:tpos}, ${3:measures}, ${4:cml}, ${5:fullbeats}, ${6:cdenom})"},
		{"trigger": "TimeMap2_timeToQN", "contents": "TimeMap2_timeToQN(${1:proj}, ${2:tpos})"},
		{"trigger": "TimeMap_curFrameRate", "contents": "TimeMap_curFrameRate(${1:proj}, ${2:dropFrame})"},
		{"trigger": "TimeMap_GetDividedBpmAtTime", "contents": "TimeMap_GetDividedBpmAtTime(${1:time})"},
		{"trigger": "TimeMap_GetMeasureInfo", "contents": "TimeMap_GetMeasureInfo(${1:proj}, ${2:measure}, ${3:qn_start}, ${4:qn_end}, ${5:timesig_num}, ${6:timesig_denom}, ${7:tempo})"},
		{"trigger": "TimeMap_GetMetronomePattern", "contents": "TimeMap_GetMetronomePattern(${1:proj}, ${2:time}, ${3:#pattern})"},
		{"trigger": "TimeMap_GetTimeSigAtTime", "contents": "TimeMap_GetTimeSigAtTime(${1:proj}, ${2:time}, ${3:timesig_num}, ${4:timesig_denom}, ${5:tempo})"},
		{"trigger": "TimeMap_QNToMeasures", "contents": "TimeMap_QNToMeasures(${1:proj}, ${2:qn}, ${3:qnMeasureStart}, ${4:qnMeasureEnd})"},
		{"trigger": "TimeMap_QNToTime", "contents": "TimeMap_QNToTime(${1:qn})"},
		{"trigger": "TimeMap_QNToTime_abs", "contents": "TimeMap_QNToTime_abs(${1:proj}, ${2:qn})"},
		{"trigger": "TimeMap_timeToQN", "contents": "TimeMap_timeToQN(${1:tpos})"},
		{"trigger": "TimeMap_timeToQN_abs", "contents": "TimeMap_timeToQN_abs(${1:proj}, ${2:tpos})"},
		{"trigger": "ToggleTrackSendUIMute", "contents": "ToggleTrackSendUIMute(${1:track}, ${2:send_idx})"},
		{"trigger": "Track_GetPeakHoldDB", "contents": "Track_GetPeakHoldDB(${1:track}, ${2:channel}, ${3:clear})"},
		{"trigger": "Track_GetPeakInfo", "contents": "Track_GetPeakInfo(${1:track}, ${2:channel})"},
		{"trigger": "TrackCtl_SetToolTip", "contents": "TrackCtl_SetToolTip(${1:\"fmt\"}, ${2:xpos}, ${3:ypos}, ${4:topmost})"},
		{"trigger": "TrackFX_AddByName", "contents": "TrackFX_AddByName(${1:track}, ${2:\"fxname\"}, ${3:recFX}, ${4:instantiate})"},
		{"trigger": "TrackFX_CopyToTake", "contents": "TrackFX_CopyToTake(${1:src_track}, ${2:src_fx}, ${3:dest_take}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "TrackFX_CopyToTrack", "contents": "TrackFX_CopyToTrack(${1:src_track}, ${2:src_fx}, ${3:dest_track}, ${4:dest_fx}, ${5:is_move})"},
		{"trigger": "TrackFX_Delete", "contents": "TrackFX_Delete(${1:track}, ${2:fx})"},
		{"trigger": "TrackFX_EndParamEdit", "contents": "TrackFX_EndParamEdit(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "TrackFX_FormatParamValue", "contents": "TrackFX_FormatParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:val}, ${5:#buf})"},
		{"trigger": "TrackFX_FormatParamValueNormalized", "contents": "TrackFX_FormatParamValueNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value}, ${5:#buf})"},
		{"trigger": "TrackFX_GetByName", "contents": "TrackFX_GetByName(${1:track}, ${2:\"fxname\"}, ${3:instantiate})"},
		{"trigger": "TrackFX_GetChainVisible", "contents": "TrackFX_GetChainVisible(${1:track})"},
		{"trigger": "TrackFX_GetCount", "contents": "TrackFX_GetCount(${1:track})"},
		{"trigger": "TrackFX_GetEnabled", "contents": "TrackFX_GetEnabled(${1:track}, ${2:fx})"},
		{"trigger": "TrackFX_GetEQ", "contents": "TrackFX_GetEQ(${1:track}, ${2:instantiate})"},
		{"trigger": "TrackFX_GetEQBandEnabled", "contents": "TrackFX_GetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx})"},
		{"trigger": "TrackFX_GetEQParam", "contents": "TrackFX_GetEQParam(${1:track}, ${2:fxidx}, ${3:paramidx}, ${4:bandtype}, ${5:bandidx}, ${6:paramtype}, ${7:normval})"},
		{"trigger": "TrackFX_GetFloatingWindow", "contents": "TrackFX_GetFloatingWindow(${1:track}, ${2:index})"},
		{"trigger": "TrackFX_GetFormattedParamValue", "contents": "TrackFX_GetFormattedParamValue(${1:track}, ${2:fx}, ${3:param}, ${4:#buf})"},
		{"trigger": "TrackFX_GetFXGUID", "contents": "TrackFX_GetFXGUID(${1:#retguid}, ${2:track}, ${3:fx})"},
		{"trigger": "TrackFX_GetFXName", "contents": "TrackFX_GetFXName(${1:track}, ${2:fx}, ${3:#buf})"},
		{"trigger": "TrackFX_GetInstrument", "contents": "TrackFX_GetInstrument(${1:track})"},
		{"trigger": "TrackFX_GetIOSize", "contents": "TrackFX_GetIOSize(${1:track}, ${2:fx}, ${3:inputPins}, ${4:outputPins})"},
		{"trigger": "TrackFX_GetNamedConfigParm", "contents": "TrackFX_GetNamedConfigParm(${1:track}, ${2:fx}, ${3:\"parmname\"}, ${4:#buf})"},
		{"trigger": "TrackFX_GetNumParams", "contents": "TrackFX_GetNumParams(${1:track}, ${2:fx})"},
		{"trigger": "TrackFX_GetOffline", "contents": "TrackFX_GetOffline(${1:track}, ${2:fx})"},
		{"trigger": "TrackFX_GetOpen", "contents": "TrackFX_GetOpen(${1:track}, ${2:fx})"},
		{"trigger": "TrackFX_GetParam", "contents": "TrackFX_GetParam(${1:track}, ${2:fx}, ${3:param}, ${4:minval}, ${5:maxval})"},
		{"trigger": "TrackFX_GetParameterStepSizes", "contents": "TrackFX_GetParameterStepSizes(${1:track}, ${2:fx}, ${3:param}, ${4:step}, ${5:smallstep}, ${6:largestep}, ${7:istoggle})"},
		{"trigger": "TrackFX_GetParamEx", "contents": "TrackFX_GetParamEx(${1:track}, ${2:fx}, ${3:param}, ${4:minval}, ${5:maxval}, ${6:midval})"},
		{"trigger": "TrackFX_GetParamName", "contents": "TrackFX_GetParamName(${1:track}, ${2:fx}, ${3:param}, ${4:#buf})"},
		{"trigger": "TrackFX_GetParamNormalized", "contents": "TrackFX_GetParamNormalized(${1:track}, ${2:fx}, ${3:param})"},
		{"trigger": "TrackFX_GetPinMappings", "contents": "TrackFX_GetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:high32})"},
		{"trigger": "TrackFX_GetPreset", "contents": "TrackFX_GetPreset(${1:track}, ${2:fx}, ${3:#presetname})"},
		{"trigger": "TrackFX_GetPresetIndex", "contents": "TrackFX_GetPresetIndex(${1:track}, ${2:fx}, ${3:numberOfPresets})"},
		{"trigger": "TrackFX_GetRecChainVisible", "contents": "TrackFX_GetRecChainVisible(${1:track})"},
		{"trigger": "TrackFX_GetRecCount", "contents": "TrackFX_GetRecCount(${1:track})"},
		{"trigger": "TrackFX_GetUserPresetFilename", "contents": "TrackFX_GetUserPresetFilename(${1:track}, ${2:fx}, ${3:#fn})"},
		{"trigger": "TrackFX_NavigatePresets", "contents": "TrackFX_NavigatePresets(${1:track}, ${2:fx}, ${3:presetmove})"},
		{"trigger": "TrackFX_SetEnabled", "contents": "TrackFX_SetEnabled(${1:track}, ${2:fx}, ${3:enabled})"},
		{"trigger": "TrackFX_SetEQBandEnabled", "contents": "TrackFX_SetEQBandEnabled(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:enable})"},
		{"trigger": "TrackFX_SetEQParam", "contents": "TrackFX_SetEQParam(${1:track}, ${2:fxidx}, ${3:bandtype}, ${4:bandidx}, ${5:paramtype}, ${6:val}, ${7:isnorm})"},
		{"trigger": "TrackFX_SetNamedConfigParm", "contents": "TrackFX_SetNamedConfigParm(${1:track}, ${2:fx}, ${3:\"parmname\"}, ${4:\"value\"})"},
		{"trigger": "TrackFX_SetOffline", "contents": "TrackFX_SetOffline(${1:track}, ${2:fx}, ${3:offline})"},
		{"trigger": "TrackFX_SetOpen", "contents": "TrackFX_SetOpen(${1:track}, ${2:fx}, ${3:open})"},
		{"trigger": "TrackFX_SetParam", "contents": "TrackFX_SetParam(${1:track}, ${2:fx}, ${3:param}, ${4:val})"},
		{"trigger": "TrackFX_SetParamNormalized", "contents": "TrackFX_SetParamNormalized(${1:track}, ${2:fx}, ${3:param}, ${4:value})"},
		{"trigger": "TrackFX_SetPinMappings", "contents": "TrackFX_SetPinMappings(${1:tr}, ${2:fx}, ${3:isoutput}, ${4:pin}, ${5:low32bits}, ${6:hi32bits})"},
		{"trigger": "TrackFX_SetPreset", "contents": "TrackFX_SetPreset(${1:track}, ${2:fx}, ${3:\"presetname\"})"},
		{"trigger": "TrackFX_SetPresetByIndex", "contents": "TrackFX_SetPresetByIndex(${1:track}, ${2:fx}, ${3:idx})"},
		{"trigger": "TrackFX_Show", "contents": "TrackFX_Show(${1:track}, ${2:index}, ${3:showFlag})"},
		{"trigger": "TrackList_AdjustWindows", "contents": "TrackList_AdjustWindows(${1:isMinor})"},
		{"trigger": "TrackList_UpdateAllExternalSurfaces", "contents": "TrackList_UpdateAllExternalSurfaces()"},
		{"trigger": "Undo_BeginBlock", "contents": "Undo_BeginBlock()"},
		{"trigger": "Undo_BeginBlock2", "contents": "Undo_BeginBlock2(${1:proj})"},
		{"trigger": "Undo_CanRedo2", "contents": "Undo_CanRedo2(${1:#retval}, ${2:proj})"},
		{"trigger": "Undo_CanUndo2", "contents": "Undo_CanUndo2(${1:#retval}, ${2:proj})"},
		{"trigger": "Undo_DoRedo2", "contents": "Undo_DoRedo2(${1:proj})"},
		{"trigger": "Undo_DoUndo2", "contents": "Undo_DoUndo2(${1:proj})"},
		{"trigger": "Undo_EndBlock", "contents": "Undo_EndBlock(${1:\"descchange\"}, ${2:extraflags})"},
		{"trigger": "Undo_EndBlock2", "contents": "Undo_EndBlock2(${1:proj}, ${2:\"descchange\"}, ${3:extraflags})"},
		{"trigger": "Undo_OnStateChange", "contents": "Undo_OnStateChange(${1:\"descchange\"})"},
		{"trigger": "Undo_OnStateChange2", "contents": "Undo_OnStateChange2(${1:proj}, ${2:\"descchange\"})"},
		{"trigger": "Undo_OnStateChange_Item", "contents": "Undo_OnStateChange_Item(${1:proj}, ${2:\"name\"}, ${3:item})"},
		{"trigger": "Undo_OnStateChangeEx", "contents": "Undo_OnStateChangeEx(${1:\"descchange\"}, ${2:whichStates}, ${3:trackparm})"},
		{"trigger": "Undo_OnStateChangeEx2", "contents": "Undo_OnStateChangeEx2(${1:proj}, ${2:\"descchange\"}, ${3:whichStates}, ${4:trackparm})"},
		{"trigger": "UpdateArrange", "contents": "UpdateArrange()"},
		{"trigger": "UpdateItemInProject", "contents": "UpdateItemInProject(${1:item})"},
		{"trigger": "UpdateTimeline", "contents": "UpdateTimeline()"},
		{"trigger": "ValidatePtr", "contents": "ValidatePtr(${1:pointer}, ${2:\"ctypename\"})"},
		{"trigger": "ValidatePtr2", "contents": "ValidatePtr2(${1:proj}, ${2:pointer}, ${3:\"ctypename\"})"},
		{"trigger": "ViewPrefs", "contents": "ViewPrefs(${1:page}, ${2:\"pageByName\"})"},
		{"trigger": "while", "contents": "while(${1:expression})"},
]
}